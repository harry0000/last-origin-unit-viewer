{"version":3,"sources":["../node_modules/react-bootstrap/esm/Col.js","component/skill/AreaOfEffectGrid.tsx","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","component/skill/AttributeColorStyle.ts","component/skill/DamageDealView.tsx","component/skill/EffectsAsEquipmentDescriptionView.tsx","component/skill/UnitAliasView.tsx","component/skill/SkillEffectTargetView.tsx","component/skill/SkillEffectConditionViewModel.ts","component/skill/SkillEffectConditionView.tsx","component/skill/SkillEffectsTranslator.ts","component/skill/SkillEffectDetailsView.tsx","component/skill/SkillEffectsView.tsx","component/skill/SkillPane.tsx"],"names":["_excluded","DEVICE_SIZES","Col","React","forwardRef","_ref","ref","bsPrefix","className","_ref$as","as","Component","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","spans","classes","forEach","brkPoint","span","offset","order","propValue","_propValue$span","infix","push","length","createElement","_extends","classNames","apply","concat","displayName","cellColorStyle","AreaOfEffectCellType","Effective","High","Middle","Low","Weak","None","overlayStyle","type","borderRadius","position","top","bottom","left","right","opacity","backgroundColor","AreaOfEffectCell","selected","rest","t","useTranslation","css","border","width","content","display","marginTop","inset","OverlayTrigger","placement","overlay","Tooltip","id","AreaOfEffectGrid","skillType","unit","cellType","useSkillArea","ifNonNullable","cell","borderCollapse","transform","select","area","color","Container","fluid","suffix","defaultProps","Row","noGutters","decoratedBsPrefix","sizePrefix","cols","AttributeColorStyle","DamageAttribute","Fire","Ice","Electric","DamageDealView","useDamageDeal","damage_deal","SkillAreaType","Single","effective","margin","fontWeight","calcValue","attribute","EffectsAsEquipmentDescriptionView","show","useEffectsAsEquipmentDescription","ifTruthy","fontSize","cursor","textDecoration","UnitAliasView","unitAlias","exceptUnit","popover","Popover","Content","unitNumbersForAlias","filter","n","map","key","textAlign","number","SkillEffectTargetView","target","selfUnitNumber","Fragment","kind","conditions","cond","i","arr","separator","value","isUnitAlias","SkillEffectTargetKind","AllyExceptSelf","undefined","role","except","alias","v","not_alias","SkillEffectConditionViewModel","effect","this","hasNoTargetCondition","every","state","hasNoTargetEffect","details","isTargetSkillEffectData","Enemy","enemyTargetConditions","scale_factor","hasSelfEffect","needNotDetails","some","Object","assign","self","around","needSeparator","array","index","unitStateView","unitName","isReadonlyArray","units","u","join","isSquadCond","EffectActivationState","InSquad","NotInSquad","has","UnitRole","Attacker","SelfAndTargetStateView","unitNumber","JSON","stringify","typedEntries","entry","entries","HpGreaterOrEqual","HpLessOrEqual","HpGreaterThan","HpLessThan","StatusGreaterThanSelf","StatusLessThanSelf","StatusGreaterOrEqualThan","Affected","NotAffected","effects","e","AffectedBy","Tagged","NotTagged","tag","TaggedAffected","Stack","Form","form","Equipped","equipment","NotEquipped","equipments","Grid","grid","Unit","stateValuesView","SquadStateView","not_in_squad","in_squad","s","num_of_units","CrossAdjacent","numOfCrossAdjacent","EnemyStateView","TriggerView","condition","trigger","EffectTrigger","StartRound","round","at","from","until","UseActive1","UseActive2","HitActive1","HitActive2","SeizeOpportunity","UnitAlias","NotApplicableForSeizeOpportunity","ApplicableForSeizeOpportunity","ConditionStateView","Separator","NotTargetStateView","ConditionRow","EnemyCondition","EffectiveView","EffectScaleFactorView","scaleFactor","per_stack","per_units","exceptSelf","variation","EffectTargetsView","targets","SkillEffectConditionView","model","OrConjunction","isTargetSkillEffect","enemyTarget","conds","children","hasAnyConditions","hasMultipleConditions","effectTargets","getDetail","body","rate","calcMilliPercentageValue","additions","times","count","max_stack","cannot_be_dispelled","notFalsy","getTerm","term","for_rounds","getTag","translateMilliPercentageDetail","detail","translateTagStackDetail","translateEffectNames","EffectDetailRow","padding","marginLeft","flexShrink","EffectDetail","Effect","ActionCountUp","ActionCountDown","MinimizeDamage","NullifyDamage","AllBuffBlocking","AllBuffRemoval","AllDebuffRemoval","ColumnProtect","RowProtect","TargetProtect","ReAttack","FollowUpAttack","IgnoreBarrierDr","IgnoreProtect","IgnoreProtectDeactivate","Reconnaissance","Marked","Provoked","Immovable","Silenced","Stunned","RefundAp","AttackHit","AttackCritical","IgnoreDef","AMG11Construction","DeployRabbitDField","SummonHologramTiger","GoldenFactoryConstruction","CooperativeAttack","active","isFormChangeUnitNumber","no","UnitForms","default","Push","Pull","RangeUp","RangeDown","RangeUpActive2","FixedDamageOverTime","FixedFireDamageOverTime","FixedIceDamageOverTime","FixedElectricDamageOverTime","MinimizeDamageLessThanValue","Barrier","BattleContinuation","AtkValueUp","DefValueUp","calcMilliValue","ApUp","ApDown","SetAp","calcMicroValue","BuffRemoval","DebuffRemoval","PreventsEffect","ActivationRatePercentageUp","AbsolutelyActivated","FormChange","FormRelease","TagStack","TagRelease","TagUnstack","DamageMultiplierUpByStatus","DamageMultiplierReductionByStatus","CriReductionByStatus","status","AtkValueUpByUnitValue","DamageMultiplierDown","DefDown","AccDown","CriDown","EvaUp","StatusResistUp","translateSkillEffectDetails","SkillEffectDetailsView","targetKey","Badge","variant","SkillEffectView","SkillEffectsView","values","useSkillEffects","skillValueFontSizeStyle","skillLabelStyle","skillBadgeStyle","whiteSpace","NestedContainer","SkillNameView","name","useSkillName","textOverflow","overflow","title","SkillCostView","cost","useSkillCost","SkillRangeView","range","useSkillRange","RankUpSkillBadge","isRankUpSkill","useRankUpSkillBadge","FormChangeSkillBadge","useFormChangeSkillBadge","skillLvItems","Array","SkillLvDropdown","useSkillLvState","skillLv","setSkillLv","userSelect","marginRight","NumberValueDropdown","items","onChange","SkillPane","eventKey","selectedUnit","useSelectedUnit","Tab","Pane","paddingTop","xs","sm"],"mappings":"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","file":"static/js/4.4e339207.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { CSSObject, Theme, jsx } from '@emotion/react';\nimport React from 'react';\nimport { Interpolation } from '@emotion/serialize';\nimport { useTranslation } from 'react-i18next';\n\nimport { AreaOfEffectCellType } from './AreaOfEffectCellType';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { useSkillArea } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst cellColorStyle: { [key in AreaOfEffectCellType]: string } = {\n  [AreaOfEffectCellType.Effective]: '#d0191d',\n  [AreaOfEffectCellType.High]:      '#ff8f03',\n  [AreaOfEffectCellType.Middle]:    '#ba5a03',\n  [AreaOfEffectCellType.Low]:       '#763316',\n  [AreaOfEffectCellType.Weak]:      '#6b3f31',\n  [AreaOfEffectCellType.None]:      '#4b4b4d'\n} as const;\n\nconst overlayStyle: (type: AreaOfEffectCellType) => CSSObject = (type) =>\n  type !== AreaOfEffectCellType.None ?\n    {\n      borderRadius: 2,\n      position: 'absolute',\n      top: -3,\n      bottom: 4,\n      left: -3,\n      right: 4,\n      opacity: 0.8,\n      backgroundColor: cellColorStyle[type]\n    } :\n    {};\n\nconst AreaOfEffectCell: React.FC<{ selected: boolean, type: AreaOfEffectCellType }> = ({ selected, type, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <td\n      css={{\n        border: '5px solid transparent',\n        width: '33%',\n        position: 'relative',\n        '&::after': {\n          content: '\" \"',\n          display: 'block',\n          marginTop: '100%'\n        }\n      }}\n    >\n      <div\n        css={{\n          borderRadius: 2,\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: selected ? '#16d4d4' : cellColorStyle[AreaOfEffectCellType.None]\n        }}\n      />\n      {\n        type === AreaOfEffectCellType.High ||\n        type === AreaOfEffectCellType.Middle ||\n        type === AreaOfEffectCellType.Low ||\n        type === AreaOfEffectCellType.Weak ?\n          (<OverlayTrigger\n            {...rest}\n            placement='auto'\n            overlay={<Tooltip id='tooltip-aoe-cell'>{t(`skill.effective_rate.${type}`)}</Tooltip>}\n          >\n            <div css={overlayStyle(type)} />\n          </OverlayTrigger>) :\n          <div css={overlayStyle(type)} />\n      }\n    </td>\n  );\n};\n\nconst AreaOfEffectGrid: React.FC<{\n  css?: Interpolation<Theme>,\n  skillType: SkillType,\n  unit: UnitBasicInfo\n}> = ({ skillType, unit, ...rest }) => {\n  const { t } = useTranslation();\n  const cellType = useSkillArea(skillType, unit);\n\n  return (\n    ifNonNullable(\n      cellType,\n      cell => (\n        <div {...rest}>\n          <table\n            css={{\n              borderCollapse: 'collapse',\n              width: '100%',\n              transform: 'skewX(-9deg)'\n            }}>\n            <tbody>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 7} type={cell.area[0]} />\n                <AreaOfEffectCell selected={cell.select === 8} type={cell.area[1]} />\n                <AreaOfEffectCell selected={cell.select === 9} type={cell.area[2]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 4} type={cell.area[3]} />\n                <AreaOfEffectCell selected={cell.select === 5} type={cell.area[4]} />\n                <AreaOfEffectCell selected={cell.select === 6} type={cell.area[5]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 1} type={cell.area[6]} />\n                <AreaOfEffectCell selected={cell.select === 2} type={cell.area[7]} />\n                <AreaOfEffectCell selected={cell.select === 3} type={cell.area[8]} />\n              </tr>\n            </tbody>\n          </table>\n          {(<span css={{ color: '#16d4d4' }}>{!cell.select ? t('skill.fixed_area') : '\\u00A0'}</span>)}\n        </div>\n      )\n    )\n  );\n};\n\nexport default AreaOfEffectGrid;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import { DamageAttribute } from '../../domain/skill/UnitSkillData';\n\nexport const AttributeColorStyle: { [key in DamageAttribute]: string } = {\n  [DamageAttribute.Fire]: '#c33',\n  [DamageAttribute.Ice]: '#0cf',\n  [DamageAttribute.Electric]: '#fc0'\n};\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { calcValue } from '../../domain/ValueUnit';\n\nimport { AttributeColorStyle } from './AttributeColorStyle';\n\nimport { useDamageDeal } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst DamageDealView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const props = useDamageDeal(skillType, unit);\n  if (!props[0]) {\n    return null;\n  }\n\n  const [damage_deal, area] = props;\n\n  return (\n    <div css={{ color: '#ccc', marginTop: 10 }}>\n      <span>\n        {area === SkillAreaType.Single ?\n          t('effect:damage_deal.target.single') :\n          t('effect:damage_deal.target.area')}\n      </span>\n      {ifNonNullable(\n        damage_deal.effective,\n        effective => (<span>{t(`effect:effective.${effective}`)}{t('effect:separator')}</span>)\n      )}\n      <span>{t('status.atk')}</span>\n      <span css={{ margin: '0 5px', color: '#fc0', fontWeight: 'bold' }}>\n        {calcValue(damage_deal)}%\n      </span>\n      <span>{t('effect:as_preposition')}</span>\n      {ifNonNullable(\n        damage_deal.attribute,\n        attribute => (\n          <span css={{ margin: '0 5px', color: AttributeColorStyle[attribute], fontWeight: 600 }}>\n            {t(`effect:attribute.${attribute}`)}\n          </span>\n        )\n      )}\n      <span>{t('effect:damage')}</span>\n    </div>\n  );\n};\n\nexport default DamageDealView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport { useEffectsAsEquipmentDescription } from '../../state/skill/UnitSkillHook';\n\nimport { ifTruthy } from '../../util/react';\n\nconst EffectsAsEquipmentDescriptionView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const show = useEffectsAsEquipmentDescription(skillType, unit);\n\n  return (\n    ifTruthy(\n      show,\n      (<div css={{\n        color: '#ccc',\n        fontSize: '0.9em',\n        marginTop: 10\n      }}>\n        <span>{t('effect:effects_as_equipment.description.prefix')}</span>\n        <OverlayTrigger\n          placement='auto'\n          overlay={<Tooltip id='tooltip-effects-as-equipment'>{t('effect:effects_as_equipment.annotation')}</Tooltip>}\n        >\n          <span css={{ cursor: 'help', textDecoration: 'underline' }}>\n            {t('effect:effects_as_equipment.description.as_equipment')}\n          </span>\n        </OverlayTrigger>\n        <span>{t('effect:effects_as_equipment.description.suffix')}</span>\n      </div>)\n    )\n  );\n};\n\nexport default EffectsAsEquipmentDescriptionView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport { UnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\n\nconst UnitAliasView: React.FC<{\n  unitAlias: UnitAlias,\n  exceptUnit?: UnitNumber\n}> = ({ unitAlias, exceptUnit }) => {\n  const { t } = useTranslation();\n  const popover = (\n    <Popover id=\"popover-unit-alias\" css={{ opacity: '0.9' }}>\n      <Popover.Content>\n        {[...unitNumbersForAlias[unitAlias]]\n          .filter(n => n !== exceptUnit)\n          .map(n => (<div key={n} css={{ textAlign: 'left' }}>{t('unit:display', { number: n })}</div>))}\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      placement='auto'\n      overlay={popover}\n    >\n      <span css={{\n        display: 'inline-block',\n        cursor: 'help',\n        textDecoration: 'underline'\n      }}>\n        {t(`effect:unit.${unitAlias}`)}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nexport default UnitAliasView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport UnitAliasView from './UnitAliasView';\n\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\nimport { isUnitAlias } from '../../domain/UnitAlias';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectTargetView: React.FC<{\n  target: SkillEffectTarget,\n  selfUnitNumber: UnitNumber\n}> = ({ target, selfUnitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {t(`effect:effect.target.kind.${target.kind}`)}\n      {'conditions' in target ? t('effect:of_preposition') : null}\n      {\n        'conditions' in target && target.conditions ?\n          target.conditions.map((cond, i, arr ) => {\n            const separator: string = ++i < arr.length ? t('effect:unit_separator') : '';\n\n            if (typeof cond === 'number') {\n              return t('effect:with_quotes', { value: t('unit:display', { number: cond }) }) + separator;\n            } else if (typeof cond === 'string') {\n              return isUnitAlias(cond) ?\n                (\n                  <React.Fragment key={cond}>\n                    <UnitAliasView unitAlias={cond} exceptUnit={target.kind === SkillEffectTargetKind.AllyExceptSelf ? selfUnitNumber : undefined} />\n                    {separator}\n                  </React.Fragment>\n                ) :\n                t(`effect:unit.${cond}`) + separator;\n            } else if ('alias' in cond) {\n              const unit: string | null =\n                'type' in cond ?\n                  t(`effect:unit.${cond.type}`) :\n                  'role' in cond ?\n                    t(`effect:unit.${cond.role}`) :\n                    null;\n              const except = 'except' in cond ? cond.except : undefined;\n\n              return (\n                <React.Fragment key={cond.alias}>\n                  {ifNonNullable(\n                    except,\n                    v => (\n                      <React.Fragment>\n                        {\n                          v === selfUnitNumber ?\n                            t('effect:unit.self') :\n                            t('effect:with_quotes', { value: t('unit:display', { number: v }) })\n                        }\n                        {t('effect:except_preposition')}\n                      </React.Fragment>\n                    )\n                  )}\n                  <UnitAliasView unitAlias={cond.alias} exceptUnit={except} />\n                  {unit ? t('effect:of_preposition') : null}\n                  {unit}\n                  {separator}\n                </React.Fragment>\n              );\n            } else if ('not_alias' in cond) {\n              return (\n                <React.Fragment key={cond.not_alias}>\n                  <UnitAliasView unitAlias={cond.not_alias} />\n                  {t('effect:negative_form')}\n                  {'type' in cond ? t(`effect:unit.${cond.type}`) : t('effect:unit.unit')}\n                  {separator}\n                </React.Fragment>\n              );\n            } else {\n              return t(`effect:unit.${cond.type}`) + t(`effect:unit.${cond.role}`) + separator;\n            }\n          }) :\n          null\n      }\n    </React.Fragment>\n  );\n};\n\nexport default SkillEffectTargetView;\n","import { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { isTargetSkillEffectData } from '../../domain/skill/SkillEffectData';\n\ntype SkillEffectTargets =\n  { self?: true } |\n  { self?: true, target: true } |\n  { self?: true, target: true } & SkillEffectTarget |\n  { around?: true }\n\ntype EnemyTargetConditions<T extends SkillEffectTarget = SkillEffectTarget> =\n  Required<Extract<T, { kind: typeof SkillEffectTargetKind.Enemy }>>\n\nclass SkillEffectConditionViewModel {\n\n  readonly #effect: SkillEffect;\n\n  constructor(effect: SkillEffect) {\n    this.#effect = effect;\n  }\n\n  get enemyTargetConditions(): EnemyTargetConditions | undefined {\n    const hasNoTargetCondition =\n      !this.#effect.conditions ||\n      this.#effect.conditions.every(cond => !('state' in cond) || !('target' in cond.state));\n    const hasNoTargetEffect = !('target' in this.#effect.details);\n\n    // Neither condition view nor targets of effect view shows the target condition.\n    const needToShowTargetCondition = hasNoTargetCondition && hasNoTargetEffect;\n\n    if (\n      needToShowTargetCondition &&\n      isTargetSkillEffectData(this.#effect) &&\n      this.#effect.target.kind === SkillEffectTargetKind.Enemy\n    ) {\n      const { kind, conditions } = this.#effect.target;\n      return conditions && { kind, conditions };\n    }\n\n    return undefined;\n  }\n\n  get hasAnyConditions(): boolean {\n    return !!this.#effect.conditions || !!this.enemyTargetConditions;\n  }\n\n  get hasMultipleConditions(): boolean {\n    return (this.#effect.conditions?.length ?? 0) > 1;\n  }\n\n  get effective(): PassiveSkillEffective | undefined {\n    return 'effective' in this.#effect ? this.#effect.effective : undefined;\n  }\n\n  get scaleFactor(): SkillEffectScaleFactor | undefined {\n    return 'scale_factor' in this.#effect ? this.#effect.scale_factor : undefined;\n  }\n\n  get effectTargets(): SkillEffectTargets {\n    const hasSelfEffect   = 'self' in this.#effect.details;\n    const hasTargetEffect = 'target' in this.#effect.details;\n\n    if (hasTargetEffect && isTargetSkillEffectData(this.#effect)) {\n      // target details already shown by condition state\n      const needNotDetails = this.#effect.conditions?.some(cond => 'state' in cond && 'target' in cond.state);\n\n      return Object.assign(\n        hasSelfEffect ? { self: true } as const : {},\n        {\n          target: true,\n          ...(needNotDetails ? {} : this.#effect.target)\n        }\n      );\n    } else {\n      return hasSelfEffect ? { self: true } : { around: true };\n    }\n  }\n\n}\n\nexport default SkillEffectConditionViewModel;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nimport SkillEffectTargetView from './SkillEffectTargetView';\nimport UnitAliasView from './UnitAliasView';\n\nimport {\n  ActivationEnemyState,\n  ActivationSelfState,\n  ActivationSquadState,\n  ActivationTargetState,\n  NumOfUnitsInSquadState,\n  SelfSkillEffectActivationCondition,\n  SelfSkillEffectActivationState,\n  SkillEffectActivationCondition,\n  SkillEffectActivationState,\n  TargetSkillEffectActivationCondition,\n  UnitAliasAndRole,\n  UnitAliasExceptUnit\n} from '../../domain/skill/SkillEffectActivationCondition';\nimport { Effect } from '../../domain/Effect';\nimport { EffectActivationState } from '../../domain/EffectActivationState';\nimport { EffectTrigger } from '../../domain/EffectTrigger';\nimport { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect, isTargetSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget } from '../../domain/skill/SkillEffectTarget';\nimport { UnitAlias, isUnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber, UnitRole } from '../../domain/UnitBasicInfo';\n\nimport SkillEffectConditionViewModel from './SkillEffectConditionViewModel';\n\nimport { Entry, typedEntries } from '../../util/object';\nimport { ifNonNullable, ifTruthy } from '../../util/react';\nimport { isReadonlyArray, ValueOf } from '../../util/type';\n\nfunction needSeparator(array: ReadonlyArray<unknown>, index: number): boolean {\n  return ++index < array.length;\n}\n\nfunction stateValuesView(\n  entry: Entry<ActivationSelfState> | Entry<ActivationTargetState>,\n  unitNumber: UnitNumber,\n  t: TFunction\n): ReactNode {\n  switch (entry[0]) {\n  case EffectActivationState.HpGreaterOrEqual:\n  case EffectActivationState.HpLessOrEqual:\n  case EffectActivationState.HpGreaterThan:\n  case EffectActivationState.HpLessThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { value: entry[1] })}</span>);\n  case EffectActivationState.StatusGreaterThanSelf:\n  case EffectActivationState.StatusLessThanSelf:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.StatusGreaterOrEqualThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.Affected:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { effect: entry[1] })}</span>);\n  case EffectActivationState.NotAffected: {\n    const effects = entry[1]\n      .map(e => t(`effect:effect.name.${e}`))\n      .join(t('effect:and_symbolic_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { effects })}</span>);\n  }\n  case EffectActivationState.AffectedBy:\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  case EffectActivationState.Tagged:\n  case EffectActivationState.NotTagged:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { tag: entry[1] })}</span>);\n  case EffectActivationState.TaggedAffected:\n    return (\n      <span>\n        {t(\n          `effect:condition.state.${entry[0]}`,\n          {\n            tag: entry[1].tag,\n            effect: entry[1].effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:and_symbolic_separator'))\n          }\n        )}\n      </span>\n    );\n  case EffectActivationState.Stack:\n    if ('effect' in entry[1]) {\n      return t('effect:condition.state.tag_effect_stack_ge', entry[1]);\n    } else if ('equal' in entry[1]) {\n      return t('effect:condition.state.tag_stack_eq', entry[1]);\n    } else {\n      return t('effect:condition.state.tag_stack_ge', entry[1]);\n    }\n  case EffectActivationState.Form:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { form: entry[1] })}</span>);\n  case EffectActivationState.Equipped: {\n    const equipment = t(`equipment:${entry[1]}`);\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipment })}</span>);\n  }\n  case EffectActivationState.NotEquipped: {\n    const equipments = entry[1]\n      .map(e => `${t('effect:with_quotes', { value: t(`equipment:${e}`) })}`)\n      .join(t('effect:unit_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipments })}</span>);\n  }\n  case EffectActivationState.Grid:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { grid: entry[1] })}</span>);\n  case EffectActivationState.Unit:\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  default: {\n    const _exhaustiveCheck: never = entry;\n    return _exhaustiveCheck;\n  }\n  }\n}\n\nfunction unitStateView(key: typeof EffectActivationState.AffectedBy, unit: ValueOf<ActivationSelfState, typeof EffectActivationState.AffectedBy>, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.InSquad, unit: ValueOf<ActivationSquadState, typeof EffectActivationState.InSquad> | ReadonlyArray<UnitNumber>, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.NotInSquad, unit: ValueOf<ActivationSquadState, typeof EffectActivationState.NotInSquad> | 41, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.Unit, unit: typeof UnitAlias.SteelLine, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(\n  key: typeof EffectActivationState['AffectedBy' | 'InSquad' | 'NotInSquad' | 'Unit'],\n  unit:\n    UnitNumber |\n    ReadonlyArray<UnitNumber> |\n    { unit: 23, effect: typeof Effect.FollowUpAttack } |\n    { unit: 83, effect: typeof Effect.TargetProtect } |\n    UnitAliasExceptUnit<typeof UnitAlias.MongooseTeam, 80> |\n    UnitAliasAndRole<typeof UnitAlias['SteelLine' | 'AACannonier'], typeof UnitRole.Supporter> |\n    typeof UnitAlias.ElectricActive |\n    typeof UnitAlias.SteelLine |\n    typeof UnitAlias.SteelLineExcludingOfficerRanks |\n    typeof UnitAlias.Horizon |\n    typeof UnitAlias.KouheiChurch |\n    typeof UnitAlias.EmpressHound |\n    typeof SkillAreaType.CrossAdjacent |\n    typeof UnitRole.Attacker |\n    'golden_factory',\n  selfUnitNumber: UnitNumber,\n  t: TFunction\n): Exclude<ReactNode, undefined> {\n  function unitName(unit: UnitNumber): string {\n    return t('effect:with_quotes', { value: t('unit:display', { number: unit }) });\n  }\n\n  if (typeof unit === 'number') {\n    return (\n      <span>{t(`effect:condition.state.${key}`, { unit: unitName(unit) })}</span>\n    );\n  } else if (isReadonlyArray(unit)) {\n    const units = unit.map(u => unitName(u)).join(t('effect:unit_separator'));\n    return (\n      <span>{t(`effect:condition.state.${key}`, { unit: units })}</span>\n    );\n  } else if (typeof unit === 'string') {\n    // TODO: Move excepting logic from view.\n    const isSquadCond = key === EffectActivationState.InSquad || key === EffectActivationState.NotInSquad;\n    if (isUnitAlias(unit)) {\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && unitNumbersForAlias[unit].has(selfUnitNumber),\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <UnitAliasView unitAlias={unit} exceptUnit={isSquadCond ? selfUnitNumber : undefined} />\n          <span>{t(`effect:condition.state.${key}`, { unit: '' })}</span>\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && unit === UnitRole.Attacker,\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <span>{t(`effect:condition.state.${key}`, { unit: t(`effect:unit.${unit}`) })}</span>\n        </React.Fragment>\n      );\n    }\n  } else if ('alias' in unit) {\n    return 'except' in unit ?\n      (\n        <React.Fragment>\n          {t('effect:with_quotes', { value: t('unit:display', { number: unit.except }) })}\n          {t('effect:except_preposition')}\n          <UnitAliasView unitAlias={unit.alias} exceptUnit={unit.except} />\n          {t(`effect:condition.state.${key}`, { unit: '' })}\n        </React.Fragment>\n      ) :\n      (\n        <React.Fragment>\n          <UnitAliasView unitAlias={unit.alias} />\n          {t('effect:of_preposition')}\n          {t(`effect:unit.${unit.role}`)}\n          {t(`effect:condition.state.${key}`, { unit: '' })}\n        </React.Fragment>\n      );\n  } else {\n    return (<span>{t('effect:condition.state.affected_effect_by', unit as Record<string, unknown>)}</span>);\n  }\n}\n\nconst SelfAndTargetStateView: React.FC<{\n  state: ReadonlyArray<ActivationSelfState>,\n  unitNumber: UnitNumber\n} | {\n  state: ReadonlyArray<ActivationTargetState>,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { state, unitNumber } = props;\n\n  return (\n    <React.Fragment>\n      {\n        'target' in props ?\n          (<React.Fragment>\n            <SkillEffectTargetView target={props.target} selfUnitNumber={unitNumber} />\n            {t('effect:case_particle')}\n          </React.Fragment>) :\n          t('effect:condition.target.self')\n      }\n      {state.map((v, i: number) => {\n        return (\n          <React.Fragment key={JSON.stringify(v)}>\n            {typedEntries(v).map((entry, i, entries) => (\n              <React.Fragment key={entry[0]}>\n                {stateValuesView(entry, unitNumber, t)}\n                {ifTruthy(needSeparator(entries, i), (<span>{t('effect:and_symbolic_separator')}</span>))}\n              </React.Fragment>\n            ))}\n            {ifTruthy(needSeparator(state, i), (<span>{t('effect:or_symbolic_separator')}</span>))}\n          </React.Fragment>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\ntype NumOfCrossAdjacent = NumOfUnitsInSquadState['num_of_units'] & { unit: typeof SkillAreaType.CrossAdjacent }\n\nfunction isNumOfCrossAdjacent(arg: NumOfUnitsInSquadState['num_of_units']): arg is NumOfCrossAdjacent {\n  return arg.unit === SkillAreaType.CrossAdjacent;\n}\n\nconst SquadStateView: React.FC<{\n  state: ValueOf<SkillEffectActivationState, 'squad'>,\n  unitNumber: UnitNumber\n}> = ({ state, unitNumber }) => {\n  const { t } = useTranslation();\n\n  const numOfCrossAdjacent = (state: NumOfCrossAdjacent): string => {\n    return 'equal' in state ?\n      t('effect:condition.state.cross_adjacent_eq', state) :\n      t('effect:condition.state.cross_adjacent_ge', state);\n  };\n\n  return (\n    <React.Fragment>\n      {t('effect:condition.target.squad')}\n      {\n        isReadonlyArray(state) ?\n          state.length === 2 ?\n            (<React.Fragment>\n              {unitStateView(EffectActivationState.NotInSquad, state[0].not_in_squad, unitNumber, t)}\n              <span>{t('effect:or_symbolic_separator')}</span>\n              {unitStateView(EffectActivationState.InSquad, state[1].in_squad, unitNumber, t)}\n            </React.Fragment>) :\n            unitStateView(EffectActivationState.InSquad, state.map(s => s.in_squad), unitNumber, t) :\n          'num_of_units' in state ?\n            isNumOfCrossAdjacent(state.num_of_units) ?\n              numOfCrossAdjacent(state.num_of_units) :\n              'greater_or_equal' in state.num_of_units ?\n                t('effect:condition.state.num_of_units_ge', state.num_of_units as Record<string, unknown>) :\n                t('effect:condition.state.num_of_units_le', state.num_of_units) :\n            'not_in_squad' in state ?\n              unitStateView(EffectActivationState.NotInSquad, state.not_in_squad, unitNumber, t) :\n              unitStateView(EffectActivationState.InSquad, state.in_squad, unitNumber, t)\n      }\n    </React.Fragment>\n  );\n};\n\nconst EnemyStateView: React.FC<{\n  state: ActivationEnemyState\n}> = ({ state }) => {\n  const { t } = useTranslation();\n  const { num_of_units } = state;\n\n  return (\n    <React.Fragment>\n      {\n        'unit' in num_of_units ?\n          t('effect:condition.target.enemy_unit', num_of_units) :\n          t('effect:condition.target.enemy')\n      }\n      {\n        'equal' in num_of_units ?\n          t('effect:condition.state.num_of_enemies_eq', num_of_units) :\n          'less_or_equal' in num_of_units ?\n            t('effect:condition.state.num_of_enemies', num_of_units as Record<string, unknown>) :\n            t('effect:condition.state.num_of_enemies_ge', num_of_units as Record<string, unknown>)\n      }\n    </React.Fragment>\n  );\n};\n\nconst TriggerView: React.FC<{\n  condition: SkillEffectActivationCondition,\n  unitNumber: UnitNumber\n}> = ({ condition, unitNumber }) => {\n  const { t } = useTranslation();\n\n  if (!('trigger' in condition)) {\n    return null;\n  }\n\n  switch (condition.trigger) {\n  case EffectTrigger.StartRound:\n    return condition.round ?\n      'at' in condition.round ?\n        t('effect:condition.trigger.round.at', { round: condition.round.at }) :\n        'from' in condition.round ?\n          t('effect:condition.trigger.round.from', { round: condition.round.from }) :\n          t('effect:condition.trigger.round.until', { round: condition.round.until }) :\n      t('effect:condition.trigger.start_round');\n  case EffectTrigger.UseActive1:\n  case EffectTrigger.UseActive2:\n  case EffectTrigger.HitActive1:\n  case EffectTrigger.HitActive2:\n    return (\n      <React.Fragment>\n        {\n          [\n            ...('round' in condition ? [t(`effect:condition.trigger.round.${condition.round}`)] : []),\n            t(`effect:condition.trigger.${condition.trigger}`, { unit: unitNumber })\n          ].join('')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.SeizeOpportunity:\n    return (\n      <React.Fragment>\n        {\n          [...unitNumbersForAlias[UnitAlias.NotApplicableForSeizeOpportunity]].map(number =>\n            t('effect:with_quotes', { value: t('unit:display', { number }) })\n          ).join(t('effect:unit_separator'))\n        }\n        {t('effect:except_preposition')}\n        <UnitAliasView unitAlias={UnitAlias.ApplicableForSeizeOpportunity} />\n        {t('effect:case_particle')}\n        {t(`effect:condition.trigger.${condition.trigger}`)}\n      </React.Fragment>\n    );\n  default:\n    return t(`effect:condition.trigger.${condition.trigger}`);\n  }\n};\n\nconst ConditionStateView: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { unitNumber } = props;\n\n  if (!('state' in props.condition)) {\n    return null;\n  }\n\n  const Separator = ({ show }: { show: boolean }) => ifTruthy(show, t('effect:and_symbolic_separator'));\n  const NotTargetStateView = ({ entry, unitNumber, needSeparator }: {\n    entry: Entry<SelfSkillEffectActivationState>,\n    unitNumber: UnitNumber,\n    needSeparator: boolean\n  }) => {\n    const [key, value] = entry;\n    if (key === 'self') {\n      return (\n        <React.Fragment key={key}>\n          <SelfAndTargetStateView state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else if (key === 'squad') {\n      return (\n        <React.Fragment key={key}>\n          <SquadStateView key={key} state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment key={key}>\n          <EnemyStateView state={value}/>\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {'target' in props ?\n        typedEntries(props.condition.state).map((entry, i, array) =>\n          entry[0] === 'target' ?\n            (\n              <React.Fragment key={entry[0]}>\n                <SelfAndTargetStateView state={entry[1]} target={props.target} unitNumber={unitNumber} />\n                <Separator show={needSeparator(array, i)} />\n              </React.Fragment>\n            ) :\n            entry[0] === 'squad' ?\n              (\n                <React.Fragment key={entry[0]}>\n                  <SquadStateView state={entry[1]} unitNumber={unitNumber} />\n                  <Separator show={needSeparator(array, i)} />\n                </React.Fragment>\n              ) :\n              (<NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />)\n        ) :\n        typedEntries(props.condition.state).map((entry, i, array) => (\n          <NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />\n        ))\n      }\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst ConditionRow: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { condition, unitNumber } = props;\n  const needSeparator = 'trigger' in condition && 'state' in condition;\n\n  return (\n    <span>\n      <TriggerView condition={condition} unitNumber={unitNumber} />\n      {ifTruthy(needSeparator, t('effect:separator'))}\n      {'target' in props ?\n        <ConditionStateView condition={props.condition} target={props.target} unitNumber={unitNumber} /> :\n        <ConditionStateView condition={props.condition} unitNumber={unitNumber} />}\n    </span>\n  );\n};\n\nconst EnemyCondition: React.FC<{\n  target: NonNullable<SkillEffectConditionViewModel['enemyTargetConditions']>\n}> = ({ target }) => {\n  const { t } = useTranslation();\n  const unit = target.conditions.map(cond => t(`effect:unit.${cond}`)).join(t('effect:unit_separator'));\n\n  return (\n    <React.Fragment>\n      {t('effect:effect.target.kind.enemy')}\n      {t('effect:case_particle')}\n      {t('effect:condition.state.unit', { unit })}\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst EffectiveView: React.FC<{ effective: PassiveSkillEffective | undefined }> = ({ effective }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(effective, v => (<span>{t(`effect:effective.${v}`)}</span>));\n};\n\nconst EffectScaleFactorView: React.FC<{\n  scaleFactor: SkillEffectScaleFactor | undefined,\n  unitNumber: UnitNumber\n}> = ({ scaleFactor, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(\n    scaleFactor,\n    v => {\n      if ('per_stack' in v) {\n        return (<span>{t('effect:scale_factor.per_stack', { tag: v.per_stack.tag })}</span>);\n      } else  {\n        switch (v.per_units.type) {\n        case 'all':\n          return (<span>{t('effect:scale_factor.per_units')}</span>);\n        case 'squad': {\n          const { unit = 'ally', except } = v.per_units;\n          const exceptSelf = !!except;\n          return (\n            <React.Fragment>\n              {ifTruthy(exceptSelf, (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>))}\n              {\n                isReadonlyArray(unit) ?\n                  (<React.Fragment>\n                    <UnitAliasView unitAlias={unit[0]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                    <span>&nbsp;{t('effect:unit_separator')}&nbsp;</span>\n                    <UnitAliasView unitAlias={unit[1]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                  </React.Fragment>) :\n                  isUnitAlias(unit) ?\n                    (<UnitAliasView unitAlias={unit} exceptUnit={exceptSelf ? unitNumber : undefined} />) :\n                    (<span>{t(`effect:unit.${unit}`)}</span>)\n              }\n              <span>{t('effect:scale_factor.num_of_allies')}</span>\n            </React.Fragment>\n          );\n        }\n        case 'enemy':\n          return (\n            <span>\n              {t('effect:unit.enemy')}\n              {ifNonNullable(v.per_units.unit, unit => t(`effect:unit.${unit}`))}\n              {t(`effect:scale_factor.${v.per_units.variation}`)}\n            </span>\n          );\n        }\n      }\n    }\n  );\n};\n\nconst EffectTargetsView: React.FC<{\n  targets: SkillEffectConditionViewModel['effectTargets'],\n  unitNumber: UnitNumber\n}> = ({ targets, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span>\n      {ifTruthy('self' in targets, t('effect:effect.target.self'))}\n      {ifTruthy('self' in targets && 'target' in targets, t('effect:and_separator'))}\n      {\n        'target' in targets ?\n          'kind' in targets ?\n            <SkillEffectTargetView target={targets} selfUnitNumber={unitNumber} /> :\n            t('effect:effect.target.target') :\n          null\n      }\n      {ifTruthy('around' in targets, t('effect:effect.target.around'))}\n      {t('effect:to_preposition')}\n    </span>\n  );\n};\n\nconst SkillEffectConditionView: React.FC<{\n  effect: SkillEffect,\n  unitNumber: UnitNumber\n}> = ({ effect, unitNumber }) => {\n  const { t } = useTranslation();\n  const model = new SkillEffectConditionViewModel(effect);\n\n  const OrConjunction = () => (<div css={{ fontSize: '0.7em' }}>{t('effect:or_conjunction')}</div>);\n  const Conditions = () => {\n    if (isTargetSkillEffect(effect)) {\n      const conditions =\n        effect.conditions ?\n          effect.conditions.length === 1 ?\n            (<ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={effect.conditions[1]} target={effect.target} unitNumber={unitNumber} />\n              </React.Fragment>\n            ) :\n          null;\n      return (\n        <React.Fragment>\n          {conditions}\n          {ifNonNullable(model.enemyTargetConditions, enemyTarget => (\n            <React.Fragment>\n              {ifTruthy(!!conditions, t('effect:separator'))}\n              <EnemyCondition target={enemyTarget} />\n            </React.Fragment>\n          ))}\n        </React.Fragment>\n      );\n    } else {\n      return ifNonNullable(\n        effect.conditions,\n        conds =>\n          conds.length === 1 ?\n            (<ConditionRow condition={conds[0]} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={conds[0]} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={conds[1]} unitNumber={unitNumber} />\n              </React.Fragment>\n            )\n      );\n    }\n  };\n  const Additional = ({ children }: { children: ReactNode }) => {\n    return (\n      model.hasAnyConditions ?\n        model.hasMultipleConditions ?\n          (<div css={{ marginTop: 5 }}>{children}</div>) :\n          (<span>{t('effect:separator')}{children}</span>) :\n        (<span>{children}</span>)\n    );\n  };\n\n  return (\n    <div>\n      <Conditions />\n      <Additional>\n        <EffectiveView effective={model.effective} />\n        <EffectScaleFactorView scaleFactor={model.scaleFactor} unitNumber={unitNumber} />\n        <EffectTargetsView targets={model.effectTargets} unitNumber={unitNumber} />\n        {t('effect:below_effects')}\n      </Additional>\n    </div>\n  );\n};\n\nexport default SkillEffectConditionView;\n","import { TFunction } from 'i18next';\n\nimport { AroundSkillEffectValue, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { Effect } from '../../domain/Effect';\nimport {\n  calcMicroValue,\n  calcMilliPercentageValue,\n  calcMilliValue,\n  MilliPercentageValue\n} from '../../domain/ValueUnit';\nimport { isFormChangeUnitNumber, UnitForms } from '../../domain/UnitFormValue';\n\nimport { Entry } from '../../util/object';\nimport { notFalsy } from '../../util/type';\n\nexport type SkillEffectDetailsEntry =\n  Entry<SkillEffectValue> |\n  Entry<AroundSkillEffectValue>\n\ntype SkillEffectDetailsProps = { tag?: string, detail: string, term?: string }\n\nfunction getDetail(body: string, value: SkillEffectDetailsEntry[1], t: TFunction): string {\n  const rate = 'rate' in value && value.rate ?\n    typeof value.rate === 'string' ?\n      `${t(`effect:rate.${value.rate}`)}${t('effect:separator')}` :\n      `${t('effect:rate.percentage', { value: calcMilliPercentageValue(value.rate) })}${t('effect:separator')}` :\n    '';\n  const additions = [\n    'times' in value && value.times ?\n      t('effect:times', { count: value.times }) : undefined,\n    'max_stack' in value && typeof value.max_stack === 'number' ?\n      value.max_stack === 1 ?\n        t('effect:does_not_stack') :\n        t('effect:max_stack', { count: value.max_stack }) :\n      undefined,\n    'cannot_be_dispelled' in value && value.cannot_be_dispelled ?\n      t('effect:cannot_be_dispelled') : undefined\n  ].filter(notFalsy)\n    .join(t('effect:separator'));\n\n  return `${rate}${body}${additions ? ` (${additions})` : '' }`;\n}\n\nfunction getTerm(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'term' in value ?\n    typeof value.term === 'string' ?\n      t(`effect:term.${value.term}`) :\n      value.term && t('effect:term.for_rounds', { value: value.term.for_rounds }) :\n    undefined;\n}\n\nfunction getTag(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'tag' in value ?\n    value.tag && t(`effect:tag.${value.tag}`) :\n    undefined;\n}\n\nfunction translateMilliPercentageDetail(\n  effect: string,\n  value: SkillEffectDetailsEntry[1] & MilliPercentageValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    tag: getTag(value, t),\n    detail: getDetail(t(`effect:effect.description.${effect}`, { value: calcMilliPercentageValue(value) }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\ntype TagStackEffectValue = NonNullable<SkillEffectValue[typeof Effect.TagStack]>\n\nfunction translateTagStackDetail(\n  key: typeof Effect['TagStack' | 'TagRelease'],\n  value: TagStackEffectValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    detail: getDetail(t(`effect:effect.description.${key}`, { tag: value.tag }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\nfunction translateEffectNames(value: { effect: Effect } | { effects: ReadonlyArray<Effect> }, t: TFunction): string {\n  return 'effect' in value ?\n    t(`effect:effect.name.${value.effect}`) :\n    value.effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:separator'));\n}\n\nexport function translateSkillEffectDetails(\n  entry: SkillEffectDetailsEntry,\n  t: TFunction\n): SkillEffectDetailsProps | ReadonlyArray<SkillEffectDetailsProps>{\n  const term = getTerm(entry[1], t);\n\n  switch (entry[0]) {\n  case Effect.ActionCountUp:\n  case Effect.ActionCountDown:\n  case Effect.MinimizeDamage:\n  case Effect.NullifyDamage:\n  case Effect.AllBuffBlocking:\n  case Effect.AllBuffRemoval:\n  case Effect.AllDebuffRemoval:\n  case Effect.ColumnProtect:\n  case Effect.RowProtect:\n  case Effect.TargetProtect:\n  case Effect.ReAttack:\n  case Effect.FollowUpAttack:\n  case Effect.IgnoreBarrierDr:\n  case Effect.IgnoreProtect:\n  case Effect.IgnoreProtectDeactivate:\n  case Effect.Reconnaissance:\n  case Effect.Marked:\n  case Effect.Provoked:\n  case Effect.Immovable:\n  case Effect.Silenced:\n  case Effect.Stunned:\n  case Effect.RefundAp:\n  case Effect.AttackHit:\n  case Effect.AttackCritical:\n  case Effect.IgnoreDef:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`), entry[1], t),\n      term\n    };\n  case Effect.AMG11Construction:\n  case Effect.DeployRabbitDField:\n  case Effect.SummonHologramTiger:\n  case Effect.GoldenFactoryConstruction:\n    return {\n      tag: getTag(entry[1], t),\n      detail: t(`effect:effect.description.${entry[0]}`, { times: entry[1].times }),\n      term\n    };\n  case Effect.CooperativeAttack: {\n    const { unit, active } = entry[1];\n    return {\n      tag: getTag(entry[1], t),\n      detail:\n        isFormChangeUnitNumber(unit) ?\n          t('effect:effect.description.cooperative_attack_form_active', { unit, no: active, form: UnitForms[unit].default }) :\n          t('effect:effect.description.cooperative_attack', { unit, no: active }),\n      term\n    };\n  }\n  case Effect.Push:\n  case Effect.Pull:\n  case Effect.RangeUp:\n  case Effect.RangeDown:\n  case Effect.RangeUpActive2:\n  case Effect.FixedDamageOverTime:\n  case Effect.FixedFireDamageOverTime:\n  case Effect.FixedIceDamageOverTime:\n  case Effect.FixedElectricDamageOverTime:\n  case Effect.MinimizeDamageLessThanValue:\n  case Effect.Barrier:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BattleContinuation: {\n    const body = 'value' in entry[1] ?\n      t('effect:effect.description.battle_continuation', { value: entry[1].value }) :\n      t('effect:effect.description.battle_continuation_with_hp_rate', { value: calcMilliPercentageValue(entry[1]) });\n\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(body, entry[1], t),\n      term\n    };\n  }\n  case Effect.AtkValueUp:\n  case Effect.DefValueUp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMilliValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ApUp:\n  case Effect.ApDown:\n  case Effect.SetAp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMicroValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BuffRemoval:\n  case Effect.DebuffRemoval: {\n    const effects = translateEffectNames(entry[1], t);\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t(`effect:effect.description.tagged_${entry[0]}`, { tag: entry[1].tag, effects }) :\n          t(`effect:effect.description.${entry[0]}`, { effects }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.PreventsEffect:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { effects: translateEffectNames(entry[1], t) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ActivationRatePercentageUp: {\n    const value  = calcMilliPercentageValue(entry[1]);\n    const effect = entry[1].effect;\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t('effect:effect.description.tagged_activation_rate_percentage_up', { tag: entry[1].tag, effect, value }) :\n          t('effect:effect.description.activation_rate_percentage_up', { effect, value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.AbsolutelyActivated:\n    return {\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, entry[1]), entry[1], t),\n      term\n    };\n  case Effect.FormChange:\n  case Effect.FormRelease:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, { form: entry[1].form }), entry[1], t),\n      term\n    };\n  case Effect.TagStack:\n  case Effect.TagRelease:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateTagStackDetail(entry[0], v, t)) :\n      translateTagStackDetail(entry[0], entry[1], t);\n  case Effect.TagUnstack:\n    return {\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { tag: entry[1].tag, value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierUpByStatus:\n  case Effect.DamageMultiplierReductionByStatus:\n  case Effect.CriReductionByStatus:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { status: entry[1].status, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.AtkValueUpByUnitValue:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { unit: entry[1].unit, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierDown:\n  case Effect.DefDown:\n  case Effect.AccDown:\n  case Effect.CriDown:\n  case Effect.EvaUp:\n  case Effect.StatusResistUp:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateMilliPercentageDetail(entry[0], v, t)) :\n      translateMilliPercentageDetail(entry[0], entry[1], t);\n  default: {\n    return translateMilliPercentageDetail(entry[0], entry[1], t);\n  }\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge } from 'react-bootstrap';\nimport { SkillEffectDetailsEntry, translateSkillEffectDetails } from './SkillEffectsTranslator';\n\nimport { AroundSkillEffectValue, SkillEffect, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\n\nimport { ifNonNullable } from '../../util/react';\nimport { typedEntries } from '../../util/object';\nimport { Keyof } from '../../util/type';\n\nconst EffectDetailRow: React.FC<{\n  tag?: string,\n  detail: string,\n  term?: string\n}> = ({ tag, detail, term }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        fontWeight: 'bold',\n        borderRadius: 3,\n        backgroundColor: '#1c3042',\n        padding: '3px 8px',\n        marginTop: 5\n      }}\n    >\n      <div>\n        {ifNonNullable(tag, v => (<span>{v}{t('effect:tag_separator')}</span>))}\n        <span>{detail}</span>\n      </div>\n      <div\n        css={{\n          marginLeft: 'auto',\n          textAlign: 'right',\n          flexShrink: 0\n        }}>\n        {ifNonNullable(term, v => (<span css={{ marginLeft: 10, color: '#aaa', fontSize: '0.9em' }}>{v}</span>))}\n      </div>\n    </div>\n  );\n};\n\nconst EffectDetail: React.FC<{\n  entry: SkillEffectDetailsEntry\n}> = ({ entry }) => {\n  const { t } = useTranslation();\n  const details = translateSkillEffectDetails(entry, t);\n\n  return 'length' in details ?\n    (<React.Fragment>\n      {details.map(detail => (<EffectDetailRow key={JSON.stringify(detail)} {...detail} />))}\n    </React.Fragment>) :\n    (<EffectDetailRow {...details} />);\n};\n\nconst SkillEffectDetailsView: React.FC<{\n  className?: string,\n  target: Keyof<SkillEffect['details']>,\n  details: NonNullable<SkillEffectValue | AroundSkillEffectValue>,\n  area: SkillAreaType\n}> = ({ className, target, details, area }) => {\n  const { t } = useTranslation();\n  const targetKey =\n    target === 'target' ?\n      area === 'single' ? 'single' : 'area' :\n      target;\n\n  return (\n    <div className={className}>\n      <div><Badge variant=\"light\">{t(`effect:effect.target.${targetKey}`)}</Badge></div>\n      {typedEntries(details).map(entry => (<EffectDetail key={entry[0]} entry={entry} />))}\n    </div>\n  );\n};\n\nexport default SkillEffectDetailsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\n\nimport SkillEffectConditionView from './SkillEffectConditionView';\nimport SkillEffectDetailsView from './SkillEffectDetailsView';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo, UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { useSkillEffects } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectView: React.FC<{ effect: SkillEffect, unitNumber: UnitNumber, area: SkillAreaType }> = ({ effect, unitNumber, area }) => {\n  const self   = 'self'   in effect.details ? effect.details.self   : undefined;\n  const target = 'target' in effect.details ? effect.details.target : undefined;\n  const around = 'around' in effect.details ? effect.details.around : undefined;\n\n  return (\n    <div\n      css={{\n        border: '1px solid rgba(255, 255, 255, 0.3)',\n        borderRadius: 5,\n        marginTop: 10,\n        padding: 5,\n        '& > .skill-effect-details': {\n          marginTop: 10\n        }\n      }}\n    >\n      <SkillEffectConditionView effect={effect} unitNumber={unitNumber} />\n      {ifNonNullable(self  , v => (<SkillEffectDetailsView className='skill-effect-details' target='self' details={v} area={area} />))}\n      {ifNonNullable(target, v => (<SkillEffectDetailsView className='skill-effect-details' target='target' details={v} area={area} />))}\n      {ifNonNullable(around, v => (<SkillEffectDetailsView className='skill-effect-details' target='around' details={v} area={area} />))}\n    </div>\n  );\n};\n\nconst SkillEffectsView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const values = useSkillEffects(skillType, unit);\n\n  return (\n    ifNonNullable(\n      values,\n      ([effects, area, unitNumber]) => (\n        <div css={{ color: '#ccc', fontSize: '0.8em' }}>\n          {effects.map(effect => (<SkillEffectView key={JSON.stringify(effect)} effect={effect} unitNumber={unitNumber} area={area} />))}\n        </div>\n      )\n    )\n  );\n};\n\nexport default SkillEffectsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { CSSObject, Theme, jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { Interpolation } from '@emotion/serialize';\nimport { useTranslation } from 'react-i18next';\n\nimport AreaOfEffectGrid from './AreaOfEffectGrid';\nimport { Badge, Col, Container, Row, Tab } from 'react-bootstrap';\nimport DamageDealView from './DamageDealView';\nimport EffectsAsEquipmentDescriptionView from './EffectsAsEquipmentDescriptionView';\nimport NumberValueDropdown from '../common/NumberValueDropdown';\nimport SkillEffectsView from './SkillEffectsView';\n\nimport { SkillLv } from '../../domain/skill/UnitSkillLvValue';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport {\n  useFormChangeSkillBadge,\n  useRankUpSkillBadge,\n  useSkillCost,\n  useSkillLvState,\n  useSkillName,\n  useSkillRange\n} from '../../state/skill/UnitSkillHook';\nimport { useSelectedUnit } from '../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable, ifTruthy } from '../../util/react';\n\nimport './RankUpSkillBadge.css';\n\nconst skillLabelFontStyle: CSSObject = {\n  fontSize: '1.2em',\n  color: '#ccc'\n};\nconst skillValueFontSizeStyle: CSSObject = {\n  fontSize: '1.2em',\n  fontWeight: 'bold'\n};\nconst skillLabelStyle: CSSObject = {\n  ...skillLabelFontStyle,\n  display: 'inline-block',\n  width: '4em'\n};\nconst skillBadgeStyle: CSSObject = {\n  fontSize: '1.2em',\n  '& > .badge': {\n    whiteSpace: 'normal'\n  }\n};\n\nconst NestedContainer: React.FC<{ css?: Interpolation<Theme>, children: ReactNode }> = ({ children, ...rest }) => (\n  <Container\n    {...rest}\n    fluid\n    css={{ padding: 0 }}\n  >\n    {children}\n  </Container>\n);\n\nconst SkillNameView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const name = useSkillName(skillType, unit);\n\n  return (\n    <div\n      css={{\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n      }}\n      title={name}\n    >\n      {name}\n    </div>\n  );\n};\n\nconst SkillCostView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const cost = useSkillCost(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#0af' }}>{cost}</span>);\n};\n\nconst SkillRangeView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const range = useSkillRange(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#cc0' }}>{range}</span>);\n};\n\nconst RankUpSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const isRankUpSkill = useRankUpSkillBadge(skillType, unit);\n\n  return (\n    ifTruthy(\n      isRankUpSkill,\n      (<div css={skillBadgeStyle}><Badge variant=\"rank-up-skill\">{t('skill.rank_up')}</Badge></div>)\n    )\n  );\n};\n\nconst FormChangeSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const form = useFormChangeSkillBadge(skillType, unit);\n\n  return (\n    ifNonNullable(\n      form,\n      v => (<div css={skillBadgeStyle}><Badge variant=\"secondary\">{t(`effect:form.${v}`)}</Badge></div>)\n    )\n  );\n};\n\nconst skillLvItems = [...Array(10)].map((v, i) => 10 - i) as ReadonlyArray<SkillLv>;\n\nconst SkillLvDropdown: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const [skillLv, setSkillLv] = useSkillLvState(skillType, unit);\n\n  return (\n    <div css={{\n      display: 'flex',\n      userSelect: 'none'\n    }}>\n      <span css={{ marginRight: 5 }}>{t('lv')}</span>\n      <NumberValueDropdown\n        css={{ flexShrink: 0 }}\n        id=\"skill-lv-dropdown\"\n        items={skillLvItems}\n        value={skillLv}\n        onChange={setSkillLv}\n      />\n    </div>\n  );\n};\n\nconst SkillPane: React.FC<{ eventKey: SkillType }> = ({ eventKey }) => {\n  const { t } = useTranslation();\n  const selectedUnit = useSelectedUnit();\n\n  return (\n    <Tab.Pane eventKey={eventKey}>\n      {ifNonNullable(\n        selectedUnit,\n        unit => (\n          <Container\n            fluid\n            css={{ paddingTop: 5 }}\n          >\n            <Row css={{ fontSize: '1.4em', color: '#eee' }}>\n              <Col xs={8} sm={9}>\n                <SkillNameView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={4} sm={3}>\n                <SkillLvDropdown skillType={eventKey} unit={unit} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={{ order: 'last', span: 12 }} sm={{ order: 'first', span: 9 }}>\n                <DamageDealView skillType={eventKey} unit={unit} />\n                <EffectsAsEquipmentDescriptionView skillType={eventKey} unit={unit} />\n                <SkillEffectsView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={{ order: 'first', span: 12 }} sm={{ order: 'last', span: 3 }}>\n                <NestedContainer css={{ userSelect: 'none' }}>\n                  <Row>\n                    <Col xs={8} sm={12}>\n                      <NestedContainer>\n                        <Row css={{ '& > div': { marginTop: 5 } }}>\n                          <Col xs={{ order: 1, span: 12 }} sm={{ order: 2, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.ap')}</span>\n                            <SkillCostView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 2, span: 12 }} sm={{ order: 3, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.range')}</span>\n                            <SkillRangeView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 3, span: 12 }} sm={{ order: 1, span: 12 }}>\n                            <FormChangeSkillBadge skillType={eventKey} unit={unit} />\n                            <RankUpSkillBadge skillType={eventKey} unit={unit} />\n                          </Col>\n                        </Row>\n                      </NestedContainer>\n                    </Col>\n                    <Col xs={4} sm={12} css={{ '& > div': { marginTop: 5 } }}>\n                      <div>\n                        <span css={{ color: '#ccc' }}>{t('skill.area')}</span>\n                      </div>\n                      <AreaOfEffectGrid css={{ width: 100 }} skillType={eventKey} unit={unit} />\n                    </Col>\n                  </Row>\n                </NestedContainer>\n              </Col>\n            </Row>\n          </Container>\n        )\n      )}\n    </Tab.Pane>\n  );\n};\n\nexport default SkillPane;\n"],"sourceRoot":""}