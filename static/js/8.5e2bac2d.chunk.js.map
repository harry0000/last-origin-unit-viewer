{"version":3,"sources":["component/status/corelink/FullLinkBonusDropdown.tsx"],"names":["FullLinkBonusLabel","label","bonus","t","useTranslation","value","calcMilliPercentageValue","sortie_cost","damage_multiplier","buff_debuff_lv_up","hp_up","acc_up","eva_up","cri_up","calcMicroValue","spd_up","range_up","UnselectBonusItem","active","Item","FullLinkBonusItem","eventKey","FullLinkBonusToggle","React","forwardRef","ref","id","onClick","available","children","href","e","preventDefault","className","ifTruthy","FullLinkBonusDropdown","unit","items","useAvailableFullLinkBonus","useFullLinkBonus","selectedBonus","selectBonus","onSelect","undefined","Toggle","as","Menu","map","i","key","JSON","stringify"],"mappings":"8NAgBMA,EAAqE,SAAC,GAAe,IAGrFC,EAHwEC,EAAY,EAAZA,MACpEC,EAAMC,cAAND,EAyBR,OAnBEF,EAHGC,EAEM,gBAAiBA,EAClBC,EAAE,mCAAoC,CAAEE,MAAOC,YAAyBJ,EAAMK,eAC7E,sBAAuBL,EACxBC,EAAE,yCAA0C,CAAEE,MAAOC,YAAyBJ,EAAMM,qBACnF,sBAAuBN,EACxBC,EAAE,yCAA0C,CAAEE,MAAOH,EAAMO,kBAAkBJ,QAC5E,UAAWH,EACZC,EAAE,6BAA8B,CAAEE,MAAOC,YAAyBJ,EAAMQ,SACvE,WAAYR,EACbC,EAAE,8BAA+B,CAAEE,MAAOC,YAAyBJ,EAAMS,UACxE,WAAYT,EACbC,EAAE,8BAA+B,CAAEE,MAAOC,YAAyBJ,EAAMU,UACxE,WAAYV,EACbC,EAAE,8BAA+B,CAAEE,MAAOC,YAAyBJ,EAAMW,UACxE,WAAYX,EACbC,EAAE,8BAA+B,CAAEE,MAAOS,YAAeZ,EAAMa,UAE/DZ,EAAE,gCAAiC,CAAEE,MAAOH,EAAMc,SAASX,QAlB3D,OAqBF,wBAAOJ,EAChB,EAEKgB,EAAmD,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC1D,OAAQ,YAAC,IAASC,KAAV,CAAeD,OAAQA,GAAvB,OACT,EAEKE,EAID,SAAC,GAAiC,IAA/BlB,EAA8B,EAA9BA,MAAOmB,EAAuB,EAAvBA,SAAUH,EAAa,EAAbA,OACvB,OACE,YAAC,IAASC,KAAV,CAAeE,SAAUA,EAAUH,OAAQA,GACzC,YAAClB,EAAD,CAAoBE,MAAOA,IAGhC,EAEKoB,EAAsBC,IAAMC,YAQhC,WAAuCC,GAAvC,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,UAAWC,EAA3B,EAA2BA,SAA3B,OACA,iBACEC,KAAK,GACLL,IAAKA,EACLC,GAAIA,EACJC,QAAS,SAACI,GACRA,EAAEC,iBACFL,EAAQI,EACT,GAEAF,EACD,oBAAMI,UAAU,WACfC,aAAUN,EAAY,oBAAMK,UAAU,iBAZzC,IA6CaE,UA7BkD,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC5DC,EAAQC,YAA0BF,GACxC,EAAgDG,YAAiBH,GAAjE,mBAAOI,EAAP,KAAsBC,EAAtB,KAAmCb,EAAnC,KAEA,OACE,YAAC,IAAD,CACEK,UAAU,kBACVS,SAAU,SAAArB,GACRoB,EAAYpB,EAAWgB,GAAOhB,QAAYsB,EAC3C,GAED,YAAC,IAASC,OAAV,CAAiBC,GAAIvB,EAAqBI,GAAG,2BAA2BE,UAAWA,GACjF,YAAC5B,EAAD,CAAoBE,MAAOsC,KAE7B,YAAC,IAASM,KAAV,KACE,YAAC7B,EAAD,CAAmBC,QAASsB,IAC3BH,EAAMU,KAAI,SAAC7C,EAAO8C,GAAR,OACT,YAAC5B,EAAD,CACE6B,IAAKC,KAAKC,UAAUjD,GACpBA,MAAOA,EACPmB,SAAU2B,EACV9B,OAAQhB,IAAUsC,GALX,KAWlB,C","file":"static/js/8.5e2bac2d.chunk.js","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Dropdown } from 'react-bootstrap';\n\nimport { UnitBasicInfo } from '../../../domain/UnitBasicInfo';\nimport { FullLinkBonus } from '../../../domain/UnitCoreLinkBonusData';\nimport { calcMicroValue, calcMilliPercentageValue } from '../../../domain/ValueUnit';\n\nimport { useAvailableFullLinkBonus, useFullLinkBonus } from '../../../state/corelink/UnitCoreLinkHook';\n\nimport { ifTruthy } from '../../../util/react';\n\nconst FullLinkBonusLabel: React.FC<{ bonus: FullLinkBonus | undefined }> = ({ bonus }) => {\n  const { t } = useTranslation();\n\n  let label: string;\n  if (!bonus) {\n    label = '\\u00A0';\n  } else if ('sortie_cost' in bonus) {\n    label = t('form.full_link_bonus.sortie_cost', { value: calcMilliPercentageValue(bonus.sortie_cost) });\n  } else if ('damage_multiplier' in bonus) {\n    label = t('form.full_link_bonus.damage_multiplier', { value: calcMilliPercentageValue(bonus.damage_multiplier) });\n  } else if ('buff_debuff_lv_up' in bonus) {\n    label = t('form.full_link_bonus.buff_debuff_lv_up', { value: bonus.buff_debuff_lv_up.value });\n  } else if ('hp_up' in bonus) {\n    label = t('form.full_link_bonus.hp_up', { value: calcMilliPercentageValue(bonus.hp_up) });\n  } else if ('acc_up' in bonus) {\n    label = t('form.full_link_bonus.acc_up', { value: calcMilliPercentageValue(bonus.acc_up) });\n  } else if ('eva_up' in bonus) {\n    label = t('form.full_link_bonus.eva_up', { value: calcMilliPercentageValue(bonus.eva_up) });\n  } else if ('cri_up' in bonus) {\n    label = t('form.full_link_bonus.cri_up', { value: calcMilliPercentageValue(bonus.cri_up) });\n  } else if ('spd_up' in bonus) {\n    label = t('form.full_link_bonus.spd_up', { value: calcMicroValue(bonus.spd_up) });\n  } else {\n    label = t('form.full_link_bonus.range_up', { value: bonus.range_up.value });\n  }\n\n  return (<span>{label}</span>);\n};\n\nconst UnselectBonusItem: React.FC<{ active: boolean }> = ({ active }) => {\n  return (<Dropdown.Item active={active}>&nbsp;</Dropdown.Item>);\n};\n\nconst FullLinkBonusItem: React.FC<{\n  bonus: FullLinkBonus,\n  eventKey: number,\n  active: boolean\n}> = ({ bonus, eventKey, active }) => {\n  return (\n    <Dropdown.Item eventKey={eventKey} active={active}>\n      <FullLinkBonusLabel bonus={bonus}/>\n    </Dropdown.Item>\n  );\n};\n\nconst FullLinkBonusToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    id: string,\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    available: boolean,\n    children: ReactNode\n  }\n>(({ id, onClick, available, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <span className=\"toggle\"/>\n    {ifTruthy(!available, (<span className=\"unavailable\"/>))}\n  </a>\n));\n\nconst FullLinkBonusDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableFullLinkBonus(unit);\n  const [selectedBonus, selectBonus, available] = useFullLinkBonus(unit);\n\n  return (\n    <Dropdown\n      className=\"full-link-bonus\"\n      onSelect={eventKey => {\n        selectBonus(eventKey ? items[+eventKey] : undefined);\n      }}\n    >\n      <Dropdown.Toggle as={FullLinkBonusToggle} id=\"full-link-bonus-dropdown\" available={available}>\n        <FullLinkBonusLabel bonus={selectedBonus}/>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <UnselectBonusItem active={!selectedBonus}/>\n        {items.map((bonus, i) => (\n          <FullLinkBonusItem\n            key={JSON.stringify(bonus)}\n            bonus={bonus}\n            eventKey={i}\n            active={bonus === selectedBonus}\n          />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default FullLinkBonusDropdown;\n"],"sourceRoot":""}