{"version":3,"file":"static/js/351.625e4ec8.chunk.js","mappings":"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","sources":["component/skill/AreaOfEffectGrid.tsx","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","component/skill/AttributeColorStyle.ts","component/skill/DamageDealView.tsx","component/skill/EffectsAsEquipmentDescriptionView.tsx","component/skill/UnitAliasView.tsx","component/skill/SkillEffectTargetView.tsx","component/skill/SkillEffectConditionViewModel.ts","component/skill/SkillEffectConditionView.tsx","component/skill/SkillEffectsTranslator.ts","component/skill/SkillEffectDetailsView.tsx","component/skill/SkillEffectsView.tsx","component/skill/SkillPane.tsx","component/skill/UnitFormSelector.tsx","component/skill/UnitSkillList.tsx","../node_modules/react-bootstrap/esm/Col.js"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { CSSPropertiesWithMultiValues } from '@emotion/serialize/dist/declarations/types';\nimport { Interpolation } from '@emotion/serialize';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { AreaOfEffectCellType } from './AreaOfEffectCellType';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { useSkillArea } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst cellColorStyle = {\n  [AreaOfEffectCellType.Effective]: '#d0191d',\n  [AreaOfEffectCellType.High]:      '#ff8f03',\n  [AreaOfEffectCellType.Middle]:    '#ba5a03',\n  [AreaOfEffectCellType.Low]:       '#763316',\n  [AreaOfEffectCellType.Weak]:      '#6b3f31',\n  [AreaOfEffectCellType.None]:      '#4b4b4d'\n} as const satisfies { [key in AreaOfEffectCellType]: string };\n\nconst overlayStyle: (type: AreaOfEffectCellType) => CSSPropertiesWithMultiValues | Record<string, never> = (type) =>\n  type !== AreaOfEffectCellType.None ?\n    {\n      borderRadius: 2,\n      position: 'absolute',\n      top: -3,\n      bottom: 4,\n      left: -3,\n      right: 4,\n      opacity: 0.8,\n      backgroundColor: cellColorStyle[type]\n    } as const satisfies CSSPropertiesWithMultiValues :\n    {};\n\nconst AreaOfEffectCell: React.FC<{ selected: boolean, type: AreaOfEffectCellType }> = ({ selected, type, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <td\n      css={{\n        border: '5px solid transparent',\n        width: '33%',\n        position: 'relative',\n        '&::after': {\n          content: '\" \"',\n          display: 'block',\n          marginTop: '100%'\n        }\n      }}\n    >\n      <div\n        css={{\n          borderRadius: 2,\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: selected ? '#16d4d4' : cellColorStyle[AreaOfEffectCellType.None]\n        }}\n      />\n      {\n        type === AreaOfEffectCellType.High ||\n        type === AreaOfEffectCellType.Middle ||\n        type === AreaOfEffectCellType.Low ||\n        type === AreaOfEffectCellType.Weak ?\n          (<OverlayTrigger\n            {...rest}\n            placement='auto'\n            overlay={<Tooltip id='tooltip-aoe-cell'>{t(`skill.effective_rate.${type}`)}</Tooltip>}\n          >\n            <div css={overlayStyle(type)} />\n          </OverlayTrigger>) :\n          <div css={overlayStyle(type)} />\n      }\n    </td>\n  );\n};\n\nconst AreaOfEffectGrid: React.FC<{\n  css?: Interpolation<Theme>,\n  skillType: SkillType,\n  unit: UnitBasicInfo\n}> = ({ skillType, unit, ...rest }) => {\n  const { t } = useTranslation();\n  const cellType = useSkillArea(skillType, unit);\n\n  return (\n    ifNonNullable(\n      cellType,\n      cell => (\n        <div {...rest}>\n          <table\n            css={{\n              borderCollapse: 'collapse',\n              width: '100%',\n              transform: 'skewX(-9deg)'\n            }}>\n            <tbody>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 7} type={cell.area[0]} />\n                <AreaOfEffectCell selected={cell.select === 8} type={cell.area[1]} />\n                <AreaOfEffectCell selected={cell.select === 9} type={cell.area[2]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 4} type={cell.area[3]} />\n                <AreaOfEffectCell selected={cell.select === 5} type={cell.area[4]} />\n                <AreaOfEffectCell selected={cell.select === 6} type={cell.area[5]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 1} type={cell.area[6]} />\n                <AreaOfEffectCell selected={cell.select === 2} type={cell.area[7]} />\n                <AreaOfEffectCell selected={cell.select === 3} type={cell.area[8]} />\n              </tr>\n            </tbody>\n          </table>\n          {(<span css={{ color: '#16d4d4' }}>{!cell.select ? t('skill.fixed_area') : '\\u00A0'}</span>)}\n        </div>\n      )\n    )\n  );\n};\n\nexport default AreaOfEffectGrid;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import { DamageAttribute } from '../../domain/skill/UnitSkillData';\n\nexport const AttributeColorStyle: { [key in DamageAttribute]: string } = {\n  [DamageAttribute.Fire]: '#c33',\n  [DamageAttribute.Ice]: '#0cf',\n  [DamageAttribute.Electric]: '#fc0'\n};\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { calcValue } from '../../domain/ValueUnit';\n\nimport { AttributeColorStyle } from './AttributeColorStyle';\n\nimport { useDamageDeal } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst DamageDealView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const props = useDamageDeal(skillType, unit);\n  if (!props[0]) {\n    return null;\n  }\n\n  const [damage_deal, area] = props;\n\n  return (\n    <div css={{ color: '#ccc', marginTop: 10 }}>\n      <span>\n        {area === SkillAreaType.Single ?\n          t('effect:damage_deal.target.single') :\n          t('effect:damage_deal.target.area')}\n      </span>\n      {ifNonNullable(\n        damage_deal.effective,\n        effective => (<span>{t(`effect:effective.${effective}`)}{t('effect:separator')}</span>)\n      )}\n      <span>{t('status.atk')}</span>\n      <span css={{ margin: '0 5px', color: '#fc0', fontWeight: 'bold' }}>\n        {calcValue(damage_deal)}%\n      </span>\n      <span>{t('effect:as_preposition')}</span>\n      {ifNonNullable(\n        damage_deal.attribute,\n        attribute => (\n          <span css={{ margin: '0 5px', color: AttributeColorStyle[attribute], fontWeight: 600 }}>\n            {t(`effect:attribute.${attribute}`)}\n          </span>\n        )\n      )}\n      <span>{t('effect:damage')}</span>\n    </div>\n  );\n};\n\nexport default DamageDealView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport { useEffectsAsEquipmentDescription } from '../../state/skill/UnitSkillHook';\n\nimport { ifTruthy } from '../../util/react';\n\nconst EffectsAsEquipmentDescriptionView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const show = useEffectsAsEquipmentDescription(skillType, unit);\n\n  return (\n    ifTruthy(\n      show,\n      (<div css={{\n        color: '#ccc',\n        fontSize: '0.9em',\n        marginTop: 10\n      }}>\n        <span>{t('effect:effects_as_equipment.description.prefix')}</span>\n        <OverlayTrigger\n          placement='auto'\n          overlay={<Tooltip id='tooltip-effects-as-equipment'>{t('effect:effects_as_equipment.annotation')}</Tooltip>}\n        >\n          <span css={{ cursor: 'help', textDecoration: 'underline' }}>\n            {t('effect:effects_as_equipment.description.as_equipment')}\n          </span>\n        </OverlayTrigger>\n        <span>{t('effect:effects_as_equipment.description.suffix')}</span>\n      </div>)\n    )\n  );\n};\n\nexport default EffectsAsEquipmentDescriptionView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport { UnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\n\nconst UnitAliasView: React.FC<{\n  unitAlias: UnitAlias,\n  exceptUnit?: UnitNumber\n}> = ({ unitAlias, exceptUnit }) => {\n  const { t } = useTranslation();\n  const popover = (\n    <Popover id=\"popover-unit-alias\" css={{ opacity: '0.9' }}>\n      <Popover.Content>\n        {[...unitNumbersForAlias[unitAlias]]\n          .filter(n => n !== exceptUnit)\n          .map(n => (<div key={n} css={{ textAlign: 'left' }}>{t('unit:display', { number: n })}</div>))}\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      placement='auto'\n      overlay={popover}\n    >\n      <span css={{\n        display: 'inline-block',\n        cursor: 'help',\n        textDecoration: 'underline'\n      }}>\n        {t(`effect:unit.${unitAlias}`)}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nexport default UnitAliasView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport UnitAliasView from './UnitAliasView';\n\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\nimport { isUnitAlias } from '../../domain/UnitAlias';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectTargetView: React.FC<{\n  target: SkillEffectTarget,\n  selfUnitNumber: UnitNumber\n}> = ({ target, selfUnitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {t(`effect:effect.target.kind.${target.kind}`)}\n      {'conditions' in target ? t('effect:of_preposition') : null}\n      {\n        'conditions' in target && target.conditions ?\n          target.conditions.map((cond, i, arr ) => {\n            const separator: string = ++i < arr.length ? t('effect:unit_separator') : '';\n\n            if (typeof cond === 'number') {\n              return t('effect:with_quotes', { value: t('unit:display', { number: cond }) }) + separator;\n            } else if (typeof cond === 'string') {\n              return isUnitAlias(cond) ?\n                (\n                  <React.Fragment key={cond}>\n                    <UnitAliasView unitAlias={cond} exceptUnit={target.kind === SkillEffectTargetKind.AllyExceptSelf ? selfUnitNumber : undefined} />\n                    {separator}\n                  </React.Fragment>\n                ) :\n                t(`effect:unit.${cond}`) + separator;\n            } else if ('alias' in cond) {\n              const unit: string | null =\n                'type' in cond ?\n                  t(`effect:unit.${cond.type}`) :\n                  'role' in cond ?\n                    t(`effect:unit.${cond.role}`) :\n                    null;\n              const except = 'except' in cond ? cond.except : undefined;\n\n              return (\n                <React.Fragment key={cond.alias}>\n                  {ifNonNullable(\n                    except,\n                    v => (\n                      <React.Fragment>\n                        {\n                          v === selfUnitNumber ?\n                            t('effect:unit.self') :\n                            t('effect:with_quotes', { value: t('unit:display', { number: v }) })\n                        }\n                        {t('effect:except_preposition')}\n                      </React.Fragment>\n                    )\n                  )}\n                  <UnitAliasView unitAlias={cond.alias} exceptUnit={except} />\n                  {unit ? t('effect:of_preposition') : null}\n                  {unit}\n                  {separator}\n                </React.Fragment>\n              );\n            } else if ('not_alias' in cond) {\n              return (\n                <React.Fragment key={cond.not_alias}>\n                  <UnitAliasView unitAlias={cond.not_alias} />\n                  {t('effect:negative_form')}\n                  {'type' in cond ? t(`effect:unit.${cond.type}`) : t('effect:unit.unit')}\n                  {separator}\n                </React.Fragment>\n              );\n            } else {\n              return t(`effect:unit.${cond.type}`) + t(`effect:unit.${cond.role}`) + separator;\n            }\n          }) :\n          null\n      }\n    </React.Fragment>\n  );\n};\n\nexport default SkillEffectTargetView;\n","import { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillEffect, hasTargetSkillEffect, hasSelfSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { isTargetSkillEffectData } from '../../domain/skill/SkillEffectData';\n\ntype SkillEffectTargets =\n  { self?: true } |\n  { self?: true, target: true } |\n  { self?: true, target: true } & SkillEffectTarget |\n  { around?: true }\n\ntype EnemyTargetConditions<T extends SkillEffectTarget = SkillEffectTarget> =\n  Required<Extract<T, { kind: typeof SkillEffectTargetKind.Enemy }>>\n\nclass SkillEffectConditionViewModel {\n\n  readonly #effect: SkillEffect;\n\n  constructor(effect: SkillEffect) {\n    this.#effect = effect;\n  }\n\n  get enemyTargetConditions(): EnemyTargetConditions | undefined {\n    const hasNoTargetCondition =\n      !this.#effect.conditions ||\n      this.#effect.conditions.every(cond => !('state' in cond) || !('target' in cond.state));\n    const hasNoTargetEffect = !hasTargetSkillEffect(this.#effect.details);\n\n    // Neither condition view nor targets of effect view shows the target condition.\n    const needToShowTargetCondition = hasNoTargetCondition && hasNoTargetEffect;\n\n    if (\n      needToShowTargetCondition &&\n      isTargetSkillEffectData(this.#effect) &&\n      this.#effect.target.kind === SkillEffectTargetKind.Enemy\n    ) {\n      const { kind, conditions } = this.#effect.target;\n      return conditions && { kind, conditions };\n    }\n\n    return undefined;\n  }\n\n  get hasAnyConditions(): boolean {\n    return !!this.#effect.conditions || !!this.enemyTargetConditions;\n  }\n\n  get hasMultipleConditions(): boolean {\n    return (this.#effect.conditions?.length ?? 0) > 1;\n  }\n\n  get effective(): PassiveSkillEffective | undefined {\n    return 'effective' in this.#effect ? this.#effect.effective : undefined;\n  }\n\n  get scaleFactor(): SkillEffectScaleFactor | undefined {\n    return 'scale_factor' in this.#effect ? this.#effect.scale_factor : undefined;\n  }\n\n  get effectTargets(): SkillEffectTargets {\n    const hasSelfEffect   = hasSelfSkillEffect(this.#effect.details);\n    const hasTargetEffect = hasTargetSkillEffect(this.#effect.details);\n\n    if (\n      hasTargetEffect &&\n      // for type casting\n      isTargetSkillEffectData(this.#effect)\n    ) {\n      // target details already shown by condition state\n      const needNoDetails = this.#effect.conditions?.some(cond => 'state' in cond && 'target' in cond.state);\n\n      return Object.assign(\n        hasSelfEffect ? { self: true } as const : {},\n        {\n          target: true,\n          ...(needNoDetails ? {} : this.#effect.target)\n        }\n      );\n    } else {\n      return hasSelfEffect ? { self: true } : { around: true };\n    }\n  }\n\n}\n\nexport default SkillEffectConditionViewModel;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { StringMap, TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nimport SkillEffectTargetView from './SkillEffectTargetView';\nimport UnitAliasView from './UnitAliasView';\n\nimport {\n  ActivationEnemyState,\n  ActivationSelfState,\n  ActivationSquadState,\n  ActivationTargetState,\n  NumOfUnitsInSquadState,\n  SelfSkillEffectActivationCondition,\n  SelfSkillEffectActivationState,\n  SkillEffectActivationCondition,\n  SkillEffectActivationState,\n  TargetSkillEffectActivationCondition,\n  UnitAliasAndRole,\n  UnitAliasExceptUnit\n} from '../../domain/skill/SkillEffectActivationCondition';\nimport { Effect } from '../../domain/Effect';\nimport { EffectActivationState } from '../../domain/EffectActivationState';\nimport { EffectTrigger } from '../../domain/EffectTrigger';\nimport { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect, isTargetSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget } from '../../domain/skill/SkillEffectTarget';\nimport { UnitAlias, isUnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber, UnitRole, UnitType } from '../../domain/UnitBasicInfo';\n\nimport SkillEffectConditionViewModel from './SkillEffectConditionViewModel';\n\nimport { Entry, typedEntries } from '../../util/object';\nimport { ifNonNullable, ifTruthy } from '../../util/react';\nimport { isReadonlyArray, ValueOf } from '../../util/type';\n\nfunction needSeparator(array: ReadonlyArray<unknown>, index: number): boolean {\n  return ++index < array.length;\n}\n\nfunction stateValuesView(\n  entry: Entry<ActivationSelfState> | Entry<ActivationTargetState>,\n  unitNumber: UnitNumber,\n  t: TFunction\n): ReactNode {\n  switch (entry[0]) {\n  case EffectActivationState.HpGreaterOrEqual:\n  case EffectActivationState.HpLessOrEqual:\n  case EffectActivationState.HpGreaterThan:\n  case EffectActivationState.HpLessThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { value: entry[1] })}</span>);\n  case EffectActivationState.StatusGreaterThanSelf:\n  case EffectActivationState.StatusLessThanSelf:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.StatusGreaterOrEqualThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.Affected:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { effect: entry[1] })}</span>);\n  case EffectActivationState.NotAffected: {\n    const effects = entry[1]\n      .map(e => t(`effect:effect.name.${e}`))\n      .join(t('effect:and_symbolic_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { effects })}</span>);\n  }\n  case EffectActivationState.AffectedBy:\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  case EffectActivationState.Tagged: {\n    const state = entry[1];\n    return isReadonlyArray(state) ?\n      (<span>{t('effect:condition.state.multiple_tagged', { tag1: state[0], tag2: state[1] })}</span>) :\n      (<span>{t(`effect:condition.state.${entry[0]}`, { tag: state })}</span>);\n  }\n  case EffectActivationState.NotTagged:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { tag: entry[1] })}</span>);\n  case EffectActivationState.TaggedAffected:\n    return (\n      <span>\n        {t(\n          `effect:condition.state.${entry[0]}`,\n          {\n            tag: entry[1].tag,\n            effect: entry[1].effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:and_symbolic_separator'))\n          }\n        )}\n      </span>\n    );\n  case EffectActivationState.Stack:\n    if ('effect' in entry[1]) {\n      return t('effect:condition.state.tag_effect_stack_ge', entry[1]);\n    } else if ('equal' in entry[1]) {\n      return t('effect:condition.state.tag_stack_eq', entry[1]);\n    } else {\n      const { tag } = entry[1];\n      const isMultipleTag = isReadonlyArray(tag);\n      const prefix = isMultipleTag ? 'tags_' : 'tag_';\n      const suffix = 'greater_or_equal' in entry[1] ? 'stack_ge' : 'stack_le';\n      const options: StringMap = {\n        ...entry[1],\n        ...(isMultipleTag ?\n          { tags: tag.map(tagKey => t('effect:tag.format', { tag: tagKey })).join(t('effect:or_symbolic_separator')) }:\n          {}\n        )\n      };\n\n      return t(`effect:condition.state.${prefix}${suffix}`, options);\n    }\n  case EffectActivationState.Form:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { form: entry[1] })}</span>);\n  case EffectActivationState.Equipped: {\n    const equipment = t(`equipment:${entry[1]}`);\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipment })}</span>);\n  }\n  case EffectActivationState.NotEquipped: {\n    const equipments = entry[1]\n      .map(e => `${t('effect:with_quotes', { value: t(`equipment:${e}`) })}`)\n      .join(t('effect:unit_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipments })}</span>);\n  }\n  case EffectActivationState.Grid:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { grid: entry[1] })}</span>);\n  case EffectActivationState.Unit:\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  default: {\n    const _exhaustiveCheck: never = entry;\n    return _exhaustiveCheck;\n  }\n  }\n}\n\nfunction unitStateView(key: typeof EffectActivationState.AffectedBy, state: ValueOf<ActivationSelfState, typeof EffectActivationState.AffectedBy>, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.InSquad, state: ValueOf<ActivationSquadState, typeof EffectActivationState.InSquad> | ReadonlyArray<UnitNumber>, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.NotInSquad, state: ValueOf<ActivationSquadState, typeof EffectActivationState.NotInSquad> | 41, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.Unit, state: typeof UnitAlias.SteelLine, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(\n  key: typeof EffectActivationState['AffectedBy' | 'InSquad' | 'NotInSquad' | 'Unit'],\n  state:\n    UnitNumber |\n    ReadonlyArray<UnitNumber> |\n    { unit: 23, effect: typeof Effect.FollowUpAttack } |\n    { unit: 83, effect: typeof Effect.TargetProtect } |\n    UnitAliasExceptUnit<typeof UnitAlias.MongooseTeam, 80> |\n    UnitAliasAndRole<typeof UnitAlias['SteelLine' | 'AACannonier'], typeof UnitRole.Supporter> |\n    typeof UnitAlias.ElectricActive |\n    typeof UnitAlias.SteelLine |\n    typeof UnitAlias.SteelLineOfficerRanks |\n    typeof UnitAlias.SteelLineExcludingOfficerRanks |\n    typeof UnitAlias.Horizon |\n    typeof UnitAlias.KouheiChurch |\n    typeof UnitAlias.EmpressHound |\n    typeof SkillAreaType.CrossAdjacent |\n    typeof UnitType['Light' | 'Heavy'] |\n    UnitRole |\n    'golden_factory' |\n    { equipment: 'hot_pack', effect: typeof Effect.MinimumIceResistUp },\n  selfUnitNumber: UnitNumber,\n  t: TFunction\n): Exclude<ReactNode, undefined> {\n  function unitName(unit: UnitNumber): string {\n    return t('effect:with_quotes', { value: t('unit:display', { number: unit }) });\n  }\n\n  if (typeof state === 'number') {\n    return (\n      <span>{t(`effect:condition.state.${key}`, { unit: unitName(state) })}</span>\n    );\n  } else if (isReadonlyArray(state)) {\n    const units = state.map(u => unitName(u)).join(t('effect:unit_separator'));\n    return (\n      <span>{t(`effect:condition.state.${key}`, { unit: units })}</span>\n    );\n  } else if (typeof state === 'string') {\n    // TODO: Move excepting logic from view.\n    const isSquadCond = key === EffectActivationState.InSquad || key === EffectActivationState.NotInSquad;\n    if (isUnitAlias(state)) {\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && unitNumbersForAlias[state].has(selfUnitNumber),\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <UnitAliasView unitAlias={state} exceptUnit={isSquadCond ? selfUnitNumber : undefined} />\n          <span>{t(`effect:condition.state.${key}`, { unit: '' })}</span>\n        </React.Fragment>\n      );\n    } else {\n      const isTypeOrRole = state !== 'cross_adjacent' && state !== 'golden_factory';\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && isTypeOrRole,\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <span>{t(`effect:condition.state.${key}`, { unit: t(`effect:unit.${state}`) })}</span>\n        </React.Fragment>\n      );\n    }\n  } else if ('alias' in state) {\n    return 'except' in state ?\n      (\n        <React.Fragment>\n          {t('effect:with_quotes', { value: t('unit:display', { number: state.except }) })}\n          {t('effect:except_preposition')}\n          <UnitAliasView unitAlias={state.alias} exceptUnit={state.except} />\n          {t(`effect:condition.state.${key}`, { unit: '' })}\n        </React.Fragment>\n      ) :\n      (\n        <React.Fragment>\n          <UnitAliasView unitAlias={state.alias} />\n          {t('effect:of_preposition')}\n          {t(`effect:unit.${state.role}`)}\n          {t(`effect:condition.state.${key}`, { unit: '' })}\n        </React.Fragment>\n      );\n  } else {\n    const key = 'unit' in state ? 'affected_effect_by' : 'affected_equipment_effect_by';\n    return (<span>{t(`effect:condition.state.${key}`, state as StringMap)}</span>);\n  }\n}\n\nconst SelfAndTargetStateView: React.FC<{\n  state: ReadonlyArray<ActivationSelfState>,\n  unitNumber: UnitNumber\n} | {\n  state: ReadonlyArray<ActivationTargetState>,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { state, unitNumber } = props;\n\n  return (\n    <React.Fragment>\n      {\n        'target' in props ?\n          (<React.Fragment>\n            <SkillEffectTargetView target={props.target} selfUnitNumber={unitNumber} />\n            {t('effect:case_particle')}\n          </React.Fragment>) :\n          t('effect:condition.target.self')\n      }\n      {state.map((v, i: number) => {\n        return (\n          <React.Fragment key={JSON.stringify(v)}>\n            {typedEntries(v).map((entry, i, entries) => (\n              <React.Fragment key={entry[0]}>\n                {stateValuesView(entry, unitNumber, t)}\n                {ifTruthy(needSeparator(entries, i), (<span>{t('effect:and_symbolic_separator')}</span>))}\n              </React.Fragment>\n            ))}\n            {ifTruthy(needSeparator(state, i), (<span>{t('effect:or_symbolic_separator')}</span>))}\n          </React.Fragment>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\ntype NumOfCrossAdjacent = NumOfUnitsInSquadState['num_of_units'] & { unit: typeof SkillAreaType.CrossAdjacent }\n\nfunction isNumOfCrossAdjacent(arg: NumOfUnitsInSquadState['num_of_units']): arg is NumOfCrossAdjacent {\n  return arg.unit === SkillAreaType.CrossAdjacent;\n}\n\nconst SquadStateView: React.FC<{\n  state: ValueOf<SkillEffectActivationState, 'squad'>,\n  unitNumber: UnitNumber\n}> = ({ state, unitNumber }) => {\n  const { t } = useTranslation();\n\n  const numOfCrossAdjacent = (state: NumOfCrossAdjacent): string => {\n    return 'equal' in state ?\n      t('effect:condition.state.cross_adjacent_eq', state) :\n      t('effect:condition.state.cross_adjacent_ge', state);\n  };\n\n  return (\n    <React.Fragment>\n      {t('effect:condition.target.squad')}\n      {\n        isReadonlyArray(state) ?\n          state.length === 2 ?\n            (<React.Fragment>\n              {unitStateView(EffectActivationState.NotInSquad, state[0].not_in_squad, unitNumber, t)}\n              <span>{t('effect:or_symbolic_separator')}</span>\n              {unitStateView(EffectActivationState.InSquad, state[1].in_squad, unitNumber, t)}\n            </React.Fragment>) :\n            unitStateView(EffectActivationState.InSquad, state.map(s => s.in_squad), unitNumber, t) :\n          'num_of_units' in state ?\n            isNumOfCrossAdjacent(state.num_of_units) ?\n              numOfCrossAdjacent(state.num_of_units) :\n              'equal' in state.num_of_units ?\n                t('effect:condition.state.num_of_units_eq', state.num_of_units) :\n                'greater_or_equal' in state.num_of_units ?\n                  t('effect:condition.state.num_of_units_ge', state.num_of_units as StringMap) :\n                  t('effect:condition.state.num_of_units_le', state.num_of_units) :\n            'not_in_squad' in state ?\n              unitStateView(EffectActivationState.NotInSquad, state.not_in_squad, unitNumber, t) :\n              unitStateView(EffectActivationState.InSquad, state.in_squad, unitNumber, t)\n      }\n    </React.Fragment>\n  );\n};\n\nconst EnemyStateView: React.FC<{\n  state: ActivationEnemyState\n}> = ({ state }) => {\n  const { t } = useTranslation();\n  const { num_of_units } = state;\n\n  return (\n    <React.Fragment>\n      {\n        'unit' in num_of_units ?\n          t('effect:condition.target.enemy_unit', num_of_units) :\n          t('effect:condition.target.enemy')\n      }\n      {\n        'equal' in num_of_units ?\n          t('effect:condition.state.num_of_enemies_eq', num_of_units) :\n          'less_or_equal' in num_of_units ?\n            t('effect:condition.state.num_of_enemies', num_of_units as StringMap) :\n            t('effect:condition.state.num_of_enemies_ge', num_of_units as StringMap)\n      }\n    </React.Fragment>\n  );\n};\n\nconst TriggerView: React.FC<{\n  condition: SkillEffectActivationCondition,\n  unitNumber: UnitNumber\n}> = ({ condition, unitNumber }) => {\n  const { t } = useTranslation();\n\n  if (!('trigger' in condition)) {\n    return null;\n  }\n\n  switch (condition.trigger) {\n  case EffectTrigger.StartRound:\n    return (\n      <React.Fragment>\n        {\n          condition.round ?\n            'at' in condition.round ?\n              t('effect:condition.trigger.round.at', { round: condition.round.at }) :\n              'from' in condition.round ?\n                t('effect:condition.trigger.round.from', { round: condition.round.from }) :\n                t('effect:condition.trigger.round.until', { round: condition.round.until }) :\n            t('effect:condition.trigger.start_round')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.UseActive1:\n  case EffectTrigger.UseActive2:\n  case EffectTrigger.HitActive1:\n  case EffectTrigger.HitActive2:\n    return (\n      <React.Fragment>\n        {\n          [\n            ...('round' in condition ? [t(`effect:condition.trigger.round.${condition.round}`)] : []),\n            t(`effect:condition.trigger.${condition.trigger}`, { unit: unitNumber })\n          ].join('')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.SeizeOpportunity:\n    return (\n      <React.Fragment>\n        {\n          [...unitNumbersForAlias[UnitAlias.NotApplicableForSeizeOpportunity]].map(number =>\n            t('effect:with_quotes', { value: t('unit:display', { number }) })\n          ).join(t('effect:unit_separator'))\n        }\n        {t('effect:except_preposition')}\n        <UnitAliasView unitAlias={UnitAlias.ApplicableForSeizeOpportunity} />\n        {t('effect:case_particle')}\n        {t(`effect:condition.trigger.${condition.trigger}`)}\n      </React.Fragment>\n    );\n  default:\n    return (<React.Fragment>{t(`effect:condition.trigger.${condition.trigger}`)}</React.Fragment>);\n  }\n};\n\nconst ConditionStateView: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { unitNumber } = props;\n\n  if (!('state' in props.condition)) {\n    return null;\n  }\n\n  const Separator = ({ show }: { show: boolean }) => (\n    <React.Fragment>{ifTruthy(show, t('effect:and_symbolic_separator'))}</React.Fragment>\n  );\n  const NotTargetStateView = ({ entry, unitNumber, needSeparator }: {\n    entry: Entry<SelfSkillEffectActivationState>,\n    unitNumber: UnitNumber,\n    needSeparator: boolean\n  }) => {\n    const [key, value] = entry;\n    if (key === 'self') {\n      return (\n        <React.Fragment key={key}>\n          <SelfAndTargetStateView state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else if (key === 'squad') {\n      return (\n        <React.Fragment key={key}>\n          <SquadStateView key={key} state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment key={key}>\n          <EnemyStateView state={value}/>\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {'target' in props ?\n        typedEntries(props.condition.state).map((entry, i, array) =>\n          entry[0] === 'target' ?\n            (\n              <React.Fragment key={entry[0]}>\n                <SelfAndTargetStateView state={entry[1]} target={props.target} unitNumber={unitNumber} />\n                <Separator show={needSeparator(array, i)} />\n              </React.Fragment>\n            ) :\n            entry[0] === 'squad' ?\n              (\n                <React.Fragment key={entry[0]}>\n                  <SquadStateView state={entry[1]} unitNumber={unitNumber} />\n                  <Separator show={needSeparator(array, i)} />\n                </React.Fragment>\n              ) :\n              (<NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />)\n        ) :\n        typedEntries(props.condition.state).map((entry, i, array) => (\n          <NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />\n        ))\n      }\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst ConditionRow: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { condition, unitNumber } = props;\n  const needSeparator = 'trigger' in condition && 'state' in condition;\n\n  return (\n    <span>\n      <TriggerView condition={condition} unitNumber={unitNumber} />\n      {ifTruthy(needSeparator, t('effect:separator'))}\n      {'target' in props ?\n        <ConditionStateView condition={props.condition} target={props.target} unitNumber={unitNumber} /> :\n        <ConditionStateView condition={props.condition} unitNumber={unitNumber} />}\n    </span>\n  );\n};\n\nconst EnemyCondition: React.FC<{\n  target: NonNullable<SkillEffectConditionViewModel['enemyTargetConditions']>\n}> = ({ target }) => {\n  const { t } = useTranslation();\n  const unit = target.conditions.map(cond => t(`effect:unit.${cond}`)).join(t('effect:unit_separator'));\n\n  return (\n    <React.Fragment>\n      {t('effect:effect.target.kind.enemy')}\n      {t('effect:case_particle')}\n      {t('effect:condition.state.unit', { unit })}\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst EffectiveView: React.FC<{ effective: PassiveSkillEffective | undefined }> = ({ effective }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(effective, v => (<span>{t(`effect:effective.${v}`)}</span>));\n};\n\nconst EffectScaleFactorView: React.FC<{\n  scaleFactor: SkillEffectScaleFactor | undefined,\n  unitNumber: UnitNumber\n}> = ({ scaleFactor, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(\n    scaleFactor,\n    v => {\n      if ('per_stack' in v) {\n        const key = 'effect' in v.per_stack ?\n          'effect:scale_factor.per_stack_effect' :\n          'effect:scale_factor.per_stack';\n        return (<span>{t(key, v.per_stack)}</span>);\n      } else  {\n        switch (v.per_units.type) {\n        case 'all':\n          return (<span>{t('effect:scale_factor.per_units')}</span>);\n        case 'squad': {\n          const { unit = 'ally', except } = v.per_units;\n          const exceptSelf = !!except;\n          return (\n            <React.Fragment>\n              {ifTruthy(exceptSelf, (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>))}\n              {\n                isReadonlyArray(unit) ?\n                  (<React.Fragment>\n                    <UnitAliasView unitAlias={unit[0]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                    <span>&nbsp;{t('effect:unit_separator')}&nbsp;</span>\n                    <UnitAliasView unitAlias={unit[1]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                  </React.Fragment>) :\n                  isUnitAlias(unit) ?\n                    (<UnitAliasView unitAlias={unit} exceptUnit={exceptSelf ? unitNumber : undefined} />) :\n                    (<span>{t(`effect:unit.${unit}`)}</span>)\n              }\n              <span>{t('effect:scale_factor.num_of_allies')}</span>\n            </React.Fragment>\n          );\n        }\n        case 'enemy':\n          return (\n            <span>\n              {t('effect:unit.enemy')}\n              {ifNonNullable(v.per_units.unit, unit => t(`effect:unit.${unit}`))}\n              {t(`effect:scale_factor.${v.per_units.variation}`)}\n            </span>\n          );\n        }\n      }\n    }\n  );\n};\n\nconst EffectTargetsView: React.FC<{\n  targets: SkillEffectConditionViewModel['effectTargets'],\n  unitNumber: UnitNumber\n}> = ({ targets, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span>\n      {ifTruthy('self' in targets, t('effect:effect.target.self'))}\n      {ifTruthy('self' in targets && 'target' in targets, t('effect:and_separator'))}\n      {\n        'target' in targets ?\n          'kind' in targets ?\n            <SkillEffectTargetView target={targets} selfUnitNumber={unitNumber} /> :\n            t('effect:effect.target.target') :\n          null\n      }\n      {ifTruthy('around' in targets, t('effect:effect.target.around'))}\n      {t('effect:to_preposition')}\n    </span>\n  );\n};\n\nconst SkillEffectConditionView: React.FC<{\n  effect: SkillEffect,\n  unitNumber: UnitNumber\n}> = ({ effect, unitNumber }) => {\n  const { t } = useTranslation();\n  const model = new SkillEffectConditionViewModel(effect);\n\n  const OrConjunction = () => (<div css={{ fontSize: '0.7em' }}>{t('effect:or_conjunction')}</div>);\n  const Conditions = () => {\n    if (isTargetSkillEffect(effect)) {\n      const conditions =\n        effect.conditions ?\n          effect.conditions.length === 1 ?\n            (<ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={effect.conditions[1]} target={effect.target} unitNumber={unitNumber} />\n              </React.Fragment>\n            ) :\n          null;\n      return (\n        <React.Fragment>\n          {conditions}\n          {ifNonNullable(model.enemyTargetConditions, enemyTarget => (\n            <React.Fragment>\n              {ifTruthy(!!conditions, t('effect:separator'))}\n              <EnemyCondition target={enemyTarget} />\n            </React.Fragment>\n          ))}\n        </React.Fragment>\n      );\n    } else {\n      return ifNonNullable(\n        effect.conditions,\n        conds =>\n          conds.length === 1 ?\n            (<ConditionRow condition={conds[0]} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={conds[0]} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={conds[1]} unitNumber={unitNumber} />\n              </React.Fragment>\n            )\n      );\n    }\n  };\n  const Additional = ({ children }: { children: ReactNode }) => {\n    return (\n      model.hasAnyConditions ?\n        model.hasMultipleConditions ?\n          (<div css={{ marginTop: 5 }}>{children}</div>) :\n          (<span>{t('effect:separator')}{children}</span>) :\n        (<span>{children}</span>)\n    );\n  };\n\n  return (\n    <div>\n      <Conditions />\n      <Additional>\n        <EffectiveView effective={model.effective} />\n        <EffectScaleFactorView scaleFactor={model.scaleFactor} unitNumber={unitNumber} />\n        <EffectTargetsView targets={model.effectTargets} unitNumber={unitNumber} />\n        {t('effect:below_effects')}\n      </Additional>\n    </div>\n  );\n};\n\nexport default SkillEffectConditionView;\n","import { TFunction } from 'i18next';\n\nimport { AroundSkillEffectValue, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { Effect } from '../../domain/Effect';\nimport {\n  calcMicroValue,\n  calcMilliPercentageValue,\n  calcMilliValue,\n  MilliPercentageValue\n} from '../../domain/ValueUnit';\nimport { isFormChangeUnitNumber, UnitForms } from '../../domain/UnitFormValue';\n\nimport { Entry } from '../../util/object';\nimport { notFalsy } from '../../util/type';\n\nexport type SkillEffectDetailsEntry =\n  Entry<SkillEffectValue> |\n  Entry<AroundSkillEffectValue>\n\ntype SkillEffectDetailsProps = { tag?: string, detail: string, term?: string }\n\nfunction getDetail(body: string, value: SkillEffectDetailsEntry[1], t: TFunction): string {\n  const rate = 'rate' in value && value.rate ?\n    typeof value.rate === 'string' ?\n      `${t(`effect:rate.${value.rate}`)}${t('effect:separator')}` :\n      `${t('effect:rate.percentage', { value: calcMilliPercentageValue(value.rate) })}${t('effect:separator')}` :\n    '';\n  const additions = [\n    'times' in value && value.times ?\n      t('effect:times', { count: value.times }) : undefined,\n    'max_stack' in value && typeof value.max_stack === 'number' ?\n      value.max_stack === 1 ?\n        t('effect:does_not_stack') :\n        t('effect:max_stack', { count: value.max_stack }) :\n      undefined,\n    'cannot_be_dispelled' in value && value.cannot_be_dispelled ?\n      t('effect:cannot_be_dispelled') : undefined\n  ].filter(notFalsy)\n    .join(t('effect:separator'));\n\n  return `${rate}${body}${additions ? ` (${additions})` : '' }`;\n}\n\nfunction getTerm(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'term' in value ?\n    typeof value.term === 'string' ?\n      t(`effect:term.${value.term}`) :\n      value.term && t('effect:term.for_rounds', { value: value.term.for_rounds }) :\n    undefined;\n}\n\nfunction getTag(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'tag' in value ?\n    value.tag && t('effect:tag.format', { tag: value.tag }) :\n    undefined;\n}\n\nfunction translateMilliPercentageDetail(\n  effect: string,\n  value: SkillEffectDetailsEntry[1] & MilliPercentageValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    tag: getTag(value, t),\n    detail: getDetail(t(`effect:effect.description.${effect}`, { value: calcMilliPercentageValue(value) }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\ntype TagStackEffectValue = NonNullable<SkillEffectValue[typeof Effect.TagStack]>\n\nfunction translateTagStackDetail(\n  key: typeof Effect['TagStack' | 'TagRelease'],\n  value: TagStackEffectValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    detail: getDetail(t(`effect:effect.description.${key}`, { tag: value.tag }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\nfunction translateEffectNames(value: { effect: Effect } | { effects: ReadonlyArray<Effect> }, t: TFunction): string {\n  return 'effect' in value ?\n    t(`effect:effect.name.${value.effect}`) :\n    value.effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:separator'));\n}\n\nexport function translateSkillEffectDetails(\n  entry: SkillEffectDetailsEntry,\n  t: TFunction\n): SkillEffectDetailsProps | ReadonlyArray<SkillEffectDetailsProps>{\n  const term = getTerm(entry[1], t);\n\n  switch (entry[0]) {\n  case Effect.ActionCountUp:\n  case Effect.ActionCountDown:\n  case Effect.MinimizeDamage:\n  case Effect.NullifyDamage:\n  case Effect.AllBuffBlocking:\n  case Effect.AllBuffRemoval:\n  case Effect.AllDebuffRemoval:\n  case Effect.ColumnProtect:\n  case Effect.RowProtect:\n  case Effect.TargetProtect:\n  case Effect.ReAttack:\n  case Effect.FollowUpAttack:\n  case Effect.IgnoreBarrierDr:\n  case Effect.IgnoreProtect:\n  case Effect.IgnoreProtectDeactivate:\n  case Effect.Reconnaissance:\n  case Effect.Marked:\n  case Effect.Provoked:\n  case Effect.Immovable:\n  case Effect.Silenced:\n  case Effect.Stunned:\n  case Effect.RefundAp:\n  case Effect.AttackHit:\n  case Effect.AttackCritical:\n  case Effect.IgnoreDef:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`), entry[1], t),\n      term\n    };\n  case Effect.AMG11Construction:\n  case Effect.DeployRabbitDField:\n  case Effect.SummonHologramTiger:\n  case Effect.GoldenFactoryConstruction:\n    return {\n      tag: getTag(entry[1], t),\n      detail: t(`effect:effect.description.${entry[0]}`, { times: entry[1].times }),\n      term\n    };\n  case Effect.CooperativeAttack: {\n    const { unit, active } = entry[1];\n    return {\n      tag: getTag(entry[1], t),\n      detail:\n        isFormChangeUnitNumber(unit) ?\n          t('effect:effect.description.cooperative_attack_form_active', { unit, no: active, form: UnitForms[unit].default }) :\n          t('effect:effect.description.cooperative_attack', { unit, no: active }),\n      term\n    };\n  }\n  case Effect.Push:\n  case Effect.Pull:\n  case Effect.RangeUp:\n  case Effect.RangeDown:\n  case Effect.RangeUpActive2:\n  case Effect.FixedDamageOverTime:\n  case Effect.FixedFireDamageOverTime:\n  case Effect.FixedIceDamageOverTime:\n  case Effect.FixedElectricDamageOverTime:\n  case Effect.MinimizeDamageLessThanValue:\n  case Effect.Barrier:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BattleContinuation: {\n    const body = 'value' in entry[1] ?\n      t('effect:effect.description.battle_continuation', { value: entry[1].value }) :\n      t('effect:effect.description.battle_continuation_with_hp_rate', { value: calcMilliPercentageValue(entry[1]) });\n\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(body, entry[1], t),\n      term\n    };\n  }\n  case Effect.AtkValueUp:\n  case Effect.DefValueUp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMilliValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ApUp:\n  case Effect.ApDown:\n  case Effect.SetAp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMicroValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BuffRemoval:\n  case Effect.DebuffRemoval: {\n    const effects = translateEffectNames(entry[1], t);\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t(`effect:effect.description.tagged_${entry[0]}`, { tag: entry[1].tag, effects }) :\n          t(`effect:effect.description.${entry[0]}`, { effects }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.PreventsEffect:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { effects: translateEffectNames(entry[1], t) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ActivationRatePercentageUp: {\n    const value  = calcMilliPercentageValue(entry[1]);\n    const effect = entry[1].effect;\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t('effect:effect.description.tagged_activation_rate_percentage_up', { tag: entry[1].tag, effect, value }) :\n          t('effect:effect.description.activation_rate_percentage_up', { effect, value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.AbsolutelyActivated:\n    return {\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, entry[1]), entry[1], t),\n      term\n    };\n  case Effect.FormChange:\n  case Effect.FormRelease:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, { form: entry[1].form }), entry[1], t),\n      term\n    };\n  case Effect.TagStack:\n  case Effect.TagRelease:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateTagStackDetail(entry[0], v, t)) :\n      translateTagStackDetail(entry[0], entry[1], t);\n  case Effect.TagUnstack:\n    return {\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { tag: entry[1].tag, value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierUpByStatus:\n  case Effect.DamageMultiplierReductionByStatus:\n  case Effect.CriReductionByStatus:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { status: entry[1].status, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.AtkValueUpByUnitValue:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { unit: entry[1].unit, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierDown:\n  case Effect.DefDown:\n  case Effect.AccDown:\n  case Effect.CriDown:\n  case Effect.EvaUp:\n  case Effect.StatusResistUp:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateMilliPercentageDetail(entry[0], v, t)) :\n      translateMilliPercentageDetail(entry[0], entry[1], t);\n  default: {\n    return translateMilliPercentageDetail(entry[0], entry[1], t);\n  }\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge } from 'react-bootstrap';\nimport { SkillEffectDetailsEntry, translateSkillEffectDetails } from './SkillEffectsTranslator';\n\nimport { AroundSkillEffectValue, SkillEffect, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\n\nimport { ifNonNullable } from '../../util/react';\nimport { typedEntries } from '../../util/object';\nimport { Keyof } from '../../util/type';\n\nconst EffectDetailRow: React.FC<{\n  tag?: string,\n  detail: string,\n  term?: string\n}> = ({ tag, detail, term }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        fontWeight: 'bold',\n        borderRadius: 3,\n        backgroundColor: '#1c3042',\n        padding: '3px 8px',\n        marginTop: 5\n      }}\n    >\n      <div>\n        {ifNonNullable(tag, v => (<span>{v}{t('effect:tag_separator')}</span>))}\n        <span>{detail}</span>\n      </div>\n      <div\n        css={{\n          marginLeft: 'auto',\n          textAlign: 'right',\n          flexShrink: 0\n        }}>\n        {ifNonNullable(term, v => (<span css={{ marginLeft: 10, color: '#aaa', fontSize: '0.9em' }}>{v}</span>))}\n      </div>\n    </div>\n  );\n};\n\nconst EffectDetail: React.FC<{\n  entry: SkillEffectDetailsEntry\n}> = ({ entry }) => {\n  const { t } = useTranslation();\n  const details = translateSkillEffectDetails(entry, t);\n\n  return 'length' in details ?\n    (<React.Fragment>\n      {details.map(detail => (<EffectDetailRow key={JSON.stringify(detail)} {...detail} />))}\n    </React.Fragment>) :\n    (<EffectDetailRow {...details} />);\n};\n\nconst SkillEffectDetailsView: React.FC<{\n  className?: string,\n  target: Keyof<SkillEffect['details']>,\n  details: NonNullable<SkillEffectValue | AroundSkillEffectValue>,\n  area: SkillAreaType\n}> = ({ className, target, details, area }) => {\n  const { t } = useTranslation();\n  const targetKey =\n    target === 'target' ?\n      area === 'single' ? 'single' : 'area' :\n      target;\n\n  return (\n    <div className={className}>\n      <div><Badge variant=\"light\">{t(`effect:effect.target.${targetKey}`)}</Badge></div>\n      {typedEntries(details).map(entry => (<EffectDetail key={entry[0]} entry={entry} />))}\n    </div>\n  );\n};\n\nexport default SkillEffectDetailsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\n\nimport SkillEffectConditionView from './SkillEffectConditionView';\nimport SkillEffectDetailsView from './SkillEffectDetailsView';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo, UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { useSkillEffects } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectView: React.FC<{ effect: SkillEffect, unitNumber: UnitNumber, area: SkillAreaType }> = ({ effect, unitNumber, area }) => {\n  const self   = 'self'   in effect.details ? effect.details.self   : undefined;\n  const target = 'target' in effect.details ? effect.details.target : undefined;\n  const around = 'around' in effect.details ? effect.details.around : undefined;\n\n  return (\n    <div\n      css={{\n        border: '1px solid rgba(255, 255, 255, 0.3)',\n        borderRadius: 5,\n        marginTop: 10,\n        padding: 5,\n        '& > .skill-effect-details': {\n          marginTop: 10\n        }\n      }}\n    >\n      <SkillEffectConditionView effect={effect} unitNumber={unitNumber} />\n      {ifNonNullable(self  , v => (<SkillEffectDetailsView className='skill-effect-details' target='self' details={v} area={area} />))}\n      {ifNonNullable(target, v => (<SkillEffectDetailsView className='skill-effect-details' target='target' details={v} area={area} />))}\n      {ifNonNullable(around, v => (<SkillEffectDetailsView className='skill-effect-details' target='around' details={v} area={area} />))}\n    </div>\n  );\n};\n\nconst SkillEffectsView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const values = useSkillEffects(skillType, unit);\n\n  return (\n    ifNonNullable(\n      values,\n      ([effects, area, unitNumber]) => (\n        <div css={{ color: '#ccc', fontSize: '0.8em' }}>\n          {effects.map(effect => (<SkillEffectView key={JSON.stringify(effect)} effect={effect} unitNumber={unitNumber} area={area} />))}\n        </div>\n      )\n    )\n  );\n};\n\nexport default SkillEffectsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { CSSPropertiesWithMultiValues } from '@emotion/serialize/dist/declarations/types';\nimport { Interpolation } from '@emotion/serialize';\nimport React, { ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport AreaOfEffectGrid from './AreaOfEffectGrid';\nimport { Badge, Col, Container, Row, Tab } from 'react-bootstrap';\nimport DamageDealView from './DamageDealView';\nimport EffectsAsEquipmentDescriptionView from './EffectsAsEquipmentDescriptionView';\nimport NumberValueDropdown from '../common/NumberValueDropdown';\nimport SkillEffectsView from './SkillEffectsView';\n\nimport { SkillLv } from '../../domain/skill/UnitSkillLvValue';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport {\n  useFormChangeSkillBadge,\n  useRankUpSkillBadge,\n  useSkillCost,\n  useSkillLvState,\n  useSkillName,\n  useSkillRange\n} from '../../state/skill/UnitSkillHook';\nimport { useSelectedUnit } from '../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable, ifTruthy } from '../../util/react';\n\nimport './RankUpSkillBadge.css';\n\nconst skillLabelFontStyle: CSSPropertiesWithMultiValues = {\n  fontSize: '1.2em',\n  color: '#ccc'\n};\nconst skillValueFontSizeStyle: CSSPropertiesWithMultiValues = {\n  fontSize: '1.2em',\n  fontWeight: 'bold'\n};\nconst skillLabelStyle: CSSPropertiesWithMultiValues = {\n  ...skillLabelFontStyle,\n  display: 'inline-block',\n  width: '4em'\n};\nconst skillBadgeStyle = {\n  ...{\n    fontSize: '1.2em',\n  } as const satisfies CSSPropertiesWithMultiValues,\n  '& > .badge': {\n    whiteSpace: 'normal'\n  } as const satisfies CSSPropertiesWithMultiValues\n};\n\nconst NestedContainer: React.FC<{ css?: Interpolation<Theme>, children: ReactNode }> = ({ children, ...rest }) => (\n  <Container\n    {...rest}\n    fluid\n    css={{ padding: 0 }}\n  >\n    {children}\n  </Container>\n);\n\nconst SkillNameView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const name = useSkillName(skillType, unit);\n\n  return (\n    <div\n      css={{\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n      }}\n      title={name}\n    >\n      {name}\n    </div>\n  );\n};\n\nconst SkillCostView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const cost = useSkillCost(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#0af' }}>{cost}</span>);\n};\n\nconst SkillRangeView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const range = useSkillRange(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#cc0' }}>{range}</span>);\n};\n\nconst RankUpSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const isRankUpSkill = useRankUpSkillBadge(skillType, unit);\n\n  return (\n    ifTruthy(\n      isRankUpSkill,\n      (<div css={skillBadgeStyle}><Badge variant=\"rank-up-skill\">{t('skill.rank_up')}</Badge></div>)\n    )\n  );\n};\n\nconst FormChangeSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const form = useFormChangeSkillBadge(skillType, unit);\n\n  return (\n    ifNonNullable(\n      form,\n      v => (<div css={skillBadgeStyle}><Badge variant=\"secondary\">{t(`effect:form.${v}`)}</Badge></div>)\n    )\n  );\n};\n\nconst skillLvItems = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] as const satisfies ReadonlyArray<SkillLv>;\n\nconst SkillLvDropdown: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const [skillLv, setSkillLv] = useSkillLvState(skillType, unit);\n\n  return (\n    <div css={{\n      display: 'flex',\n      userSelect: 'none',\n      '& > .dropdown.numeric': {\n        flexShrink: 0,\n        width: 70\n      }\n    }}>\n      <span css={{ marginRight: 5 }}>{t('lv')}</span>\n      <NumberValueDropdown\n        id=\"skill-lv-dropdown\"\n        items={skillLvItems}\n        value={skillLv}\n        onChange={setSkillLv}\n      />\n    </div>\n  );\n};\n\nconst SkillPane: React.FC<{ eventKey: SkillType }> = ({ eventKey }) => {\n  const { t } = useTranslation();\n  const selectedUnit = useSelectedUnit();\n\n  return (\n    <Tab.Pane eventKey={eventKey}>\n      {ifNonNullable(\n        selectedUnit,\n        unit => (\n          <Container\n            fluid\n            css={{ paddingTop: 5 }}\n          >\n            <Row css={{ fontSize: '1.4em', color: '#eee' }}>\n              <Col xs={8} sm={9}>\n                <SkillNameView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={4} sm={3}>\n                <SkillLvDropdown skillType={eventKey} unit={unit} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={{ order: 'last', span: 12 }} sm={{ order: 'first', span: 9 }}>\n                <DamageDealView skillType={eventKey} unit={unit} />\n                <EffectsAsEquipmentDescriptionView skillType={eventKey} unit={unit} />\n                <SkillEffectsView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={{ order: 'first', span: 12 }} sm={{ order: 'last', span: 3 }}>\n                <NestedContainer css={{ userSelect: 'none' }}>\n                  <Row>\n                    <Col xs={8} sm={12}>\n                      <NestedContainer>\n                        <Row css={{ '& > div': { marginTop: 5 } }}>\n                          <Col xs={{ order: 1, span: 12 }} sm={{ order: 2, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.ap')}</span>\n                            <SkillCostView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 2, span: 12 }} sm={{ order: 3, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.range')}</span>\n                            <SkillRangeView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 3, span: 12 }} sm={{ order: 1, span: 12 }}>\n                            <FormChangeSkillBadge skillType={eventKey} unit={unit} />\n                            <RankUpSkillBadge skillType={eventKey} unit={unit} />\n                          </Col>\n                        </Row>\n                      </NestedContainer>\n                    </Col>\n                    <Col xs={4} sm={12} css={{ '& > div': { marginTop: 5 } }}>\n                      <div>\n                        <span css={{ color: '#ccc' }}>{t('skill.area')}</span>\n                      </div>\n                      <AreaOfEffectGrid css={{ width: 100 }} skillType={eventKey} unit={unit} />\n                    </Col>\n                  </Row>\n                </NestedContainer>\n              </Col>\n            </Row>\n          </Container>\n        )\n      )}\n    </Tab.Pane>\n  );\n};\n\nexport default SkillPane;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ArrowSync } from '../icon/FluentIcons';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport SVGButton from '../common/SVGButton';\n\nimport { useUnitForm } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst UnitFormSelector: React.FC = () => {\n  const { t } = useTranslation();\n  const [formChangeUnit, changeForm] = useUnitForm();\n\n  return ifNonNullable(\n    formChangeUnit,\n    unit => (\n      <div css={{ display: 'flex', alignItems: 'center', padding: '10px 8px' }}>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='tooltip-form-change'>{t('form_change')}</Tooltip>}\n        >\n          <SVGButton\n            aria-label=\"Change unit form\"\n            variant=\"secondary\"\n            svg={<ArrowSync />}\n            onClick={changeForm}\n          />\n        </OverlayTrigger>\n        <span css={{ color: '#eee', marginLeft: 10 }}>\n          {t(`effect:form.${unit.unitForm()}`)}\n        </span>\n      </div>\n    )\n  );\n};\n\nexport default UnitFormSelector;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { Interpolation } from '@emotion/serialize';\nimport React, { ReactNode } from 'react';\n\nimport {\n  ActiveSkillIcon,\n  DisableActiveSkillIcon,\n  DisablePassiveSkillIcon,\n  PassiveSkillIcon\n} from '../icon/SkillIcons';\nimport { Nav, Tab } from 'react-bootstrap';\nimport SkillPane from './SkillPane';\nimport UnitFormSelector from './UnitFormSelector';\n\nimport { SkillType } from '../../domain/skill/SkillType';\n\nimport {\n  useActive1SkillNav,\n  useActive2SkillNav,\n  usePassive1SkillNav,\n  usePassive2SkillNav,\n  usePassive3SkillNav\n} from '../../state/skill/UnitSkillHook';\nimport { useSkillTab } from '../../state/ui/UnitSkillTabState';\n\nimport './SkillNavTab.css';\n\nconst SkillNavItem: React.FC<{\n  eventKey: SkillType,\n  active: boolean,\n  disabled: boolean,\n  children: ReactNode\n}> = ({ eventKey, active, disabled, children }) => {\n  const className = eventKey.startsWith('active') ? 'active-skill' : 'passive-skill';\n\n  return (\n    <Nav.Item>\n      <Nav.Link className={className} eventKey={eventKey} active={active} disabled={disabled}>\n        <span\n          css={{\n            display: 'inline-block',\n            '@media (max-width: 480px)': { width: 32 },\n            '@media (min-width: 480px)': { width: 50 }\n          }}\n        >\n          {children}\n        </span>\n      </Nav.Link>\n    </Nav.Item>\n  );\n};\n\nconst Active1SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = useActive1SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<ActiveSkillIcon skillType={SkillType.Active1} />) : (<DisableActiveSkillIcon />)}\n      <span className=\"sr-only\">Active skill 1</span>\n    </SkillNavItem>\n  );\n};\n\nconst Active2SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = useActive2SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<ActiveSkillIcon skillType={SkillType.Active2} />) : (<DisableActiveSkillIcon />)}\n      <span className=\"sr-only\">Active skill 2</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive1SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive1SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive1} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 1</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive2SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive2SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive2} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 2</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive3SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive3SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive3} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 3</span>\n    </SkillNavItem>\n  );\n};\n\nconst UnitSkillList: React.FC<{ css?: Interpolation<Theme> }> = (props) => {\n  const [activeTab, setActiveTab] = useSkillTab();\n\n  return (\n    <div {...props}>\n      <UnitFormSelector />\n      <Tab.Container\n        id=\"unit-skill-viewer\"\n        activeKey={activeTab}\n        onSelect={eventKey => { setActiveTab(eventKey ?? undefined); }}\n      >\n        <Nav variant=\"tabs\" className={`skill ${activeTab ? activeTab.startsWith('active') ? 'active-skill' : 'passive-skill' : ''}`}>\n          <Active1SkillNavItem />\n          <Active2SkillNavItem />\n          <Passive1SkillNavItem />\n          <Passive2SkillNavItem />\n          <Passive3SkillNavItem />\n        </Nav>\n        <Tab.Content css={{ minHeight: 300 }}>\n          <SkillPane eventKey=\"active1\" />\n          <SkillPane eventKey=\"active2\" />\n          <SkillPane eventKey=\"passive1\" />\n          <SkillPane eventKey=\"passive2\" />\n          <SkillPane eventKey=\"passive3\" />\n        </Tab.Content>\n      </Tab.Container>\n    </div>\n  );\n};\n\nexport default UnitSkillList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"names":["cellColorStyle","AreaOfEffectCellType","overlayStyle","type","borderRadius","position","top","bottom","left","right","opacity","backgroundColor","AreaOfEffectCell","selected","rest","t","useTranslation","css","border","width","content","display","marginTop","inset","OverlayTrigger","placement","overlay","Tooltip","id","skillType","unit","cellType","useSkillArea","ifNonNullable","cell","borderCollapse","transform","select","area","color","_excluded","Container","React","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","_extends","classNames","displayName","defaultProps","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","concat","AttributeColorStyle","DamageAttribute","useDamageDeal","damage_deal","SkillAreaType","effective","margin","fontWeight","calcValue","attribute","show","useEffectsAsEquipmentDescription","ifTruthy","fontSize","cursor","textDecoration","unitAlias","exceptUnit","popover","Popover","unitNumbersForAlias","filter","n","map","key","textAlign","number","target","selfUnitNumber","kind","conditions","cond","i","arr","separator","length","value","isUnitAlias","SkillEffectTargetKind","undefined","role","except","alias","v","not_alias","effect","this","hasNoTargetCondition","every","state","hasNoTargetEffect","hasTargetSkillEffect","details","isTargetSkillEffectData","enemyTargetConditions","scale_factor","hasSelfEffect","hasSelfSkillEffect","needNoDetails","some","Object","assign","self","around","needSeparator","array","index","unitStateView","unitName","isReadonlyArray","units","u","join","isSquadCond","EffectActivationState","has","isTypeOrRole","SelfAndTargetStateView","unitNumber","JSON","stringify","typedEntries","entry","entries","effects","e","tag1","tag2","tag","isMultipleTag","options","tags","tagKey","form","equipment","equipments","grid","stateValuesView","SquadStateView","not_in_squad","in_squad","s","num_of_units","numOfCrossAdjacent","EnemyStateView","TriggerView","condition","trigger","EffectTrigger","round","at","from","until","UnitAlias","ConditionStateView","Separator","NotTargetStateView","ConditionRow","EnemyCondition","EffectiveView","EffectScaleFactorView","scaleFactor","per_stack","per_units","exceptSelf","variation","EffectTargetsView","targets","model","SkillEffectConditionViewModel","OrConjunction","isTargetSkillEffect","enemyTarget","conds","children","hasAnyConditions","hasMultipleConditions","effectTargets","getDetail","body","rate","calcMilliPercentageValue","additions","times","count","max_stack","cannot_be_dispelled","notFalsy","getTerm","term","for_rounds","getTag","translateMilliPercentageDetail","detail","translateTagStackDetail","translateEffectNames","EffectDetailRow","padding","marginLeft","flexShrink","EffectDetail","Effect","active","isFormChangeUnitNumber","no","UnitForms","default","calcMilliValue","calcMicroValue","status","translateSkillEffectDetails","targetKey","Badge","variant","SkillEffectView","values","useSkillEffects","skillValueFontSizeStyle","skillLabelStyle","skillBadgeStyle","whiteSpace","NestedContainer","SkillNameView","name","useSkillName","textOverflow","overflow","title","SkillCostView","cost","useSkillCost","SkillRangeView","range","useSkillRange","RankUpSkillBadge","isRankUpSkill","useRankUpSkillBadge","FormChangeSkillBadge","useFormChangeSkillBadge","skillLvItems","SkillLvDropdown","useSkillLvState","skillLv","setSkillLv","userSelect","marginRight","NumberValueDropdown","items","onChange","eventKey","selectedUnit","useSelectedUnit","Tab","paddingTop","Col","xs","sm","order","span","useUnitForm","formChangeUnit","changeForm","alignItems","SVGButton","svg","onClick","unitForm","SkillNavItem","disabled","startsWith","Nav","Active1SkillNavItem","useActive1SkillNav","enable","SkillType","Active2SkillNavItem","useActive2SkillNav","Passive1SkillNavItem","usePassive1SkillNav","Passive2SkillNavItem","usePassive2SkillNav","Passive3SkillNavItem","usePassive3SkillNav","useSkillTab","activeTab","setActiveTab","activeKey","onSelect","minHeight","spans","offset","_propValue$span"],"sourceRoot":""}