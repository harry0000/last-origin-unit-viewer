{"version":3,"sources":["service/EffectIconSrcUrlBuilder.ts","component/status/parameters/EffectIcon.tsx","component/status/parameters/SquadUnitStatusParameter.tsx"],"names":["buildIconSrcUrl","effect","process","placeHolderStyle","width","height","PlaceHolder","css","EffectIcon","others","t","useTranslation","src","Effect","DamageMultiplierUpByStatus","DamageMultiplierReductionByStatus","DamageMultiplierUp","AdditionalDamageFocusing","AtkUp","FixedDamage","AdditionalDamage","AtkValueUp","AtkValueUpByUnitValue","DefValueUp","DefUp","SpdUp","SetAp","RefundAp","ApUp","SpdDown","ApDown","RangeDownActive1","RangeDown","RangeUpActive2","RangeUp","DamageReductionDown","MinimizeDamage","MinimizeDamageLessThanValue","DamageReductionUp","AreaDamageDispersionUp","AreaDamageDispersionDown","DefDown","BuffRemoval","AllBuffRemoval","DebuffRemoval","AllDebuffRemoval","AbsolutelyActivated","ActivationRatePercentageUp","ReAttack","FollowUpAttack","AttackHit","AccUp","CriReductionByStatus","AttackCritical","CriUp","IgnoreDef","DefensePenetration","FormRelease","FormChange","HpUp","HpDown","TagStack","TagUnstack","TagRelease","AMG11Construction","DeployRabbitDField","SummonHologramTiger","GoldenFactoryConstruction","buildEffectIconSrcUrl","Image","rounded","draggable","alt","srcSet","StatusIconOverlay","status","children","OverlayTrigger","placement","overlay","Tooltip","id","StatusValueView","value","useSquadUnitStatusValue","percentage","appendPercentage","StatusParameterCol","className","UnitStatusIcon","parameter","HpParameter","useSquadUnitHpValues","current","max","HpBar","damaged","useSquadUnitDamagedState","HpCol","ApCol","apValue","useSquadUnitApValue","EffectLabel","label","text","key","EffectDetails","description","options","additions","PreventsEffect","effects","map","e","join","length","addition","type","count","EffectTerm","term","EffectSource","affected","isAllySkill","source","originalWidth","popover","Popover","Content","skill","name","lv","EffectRow","EffectList","useSquadUnitApplyingEffects","nanoid","SquadUnitStatusParameter"],"mappings":"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","file":"static/js/6.43fe1764.chunk.js","sourcesContent":["import { Effect } from '../domain/Effect';\n\nfunction buildIconSrcUrl(effect: Effect): string {\n  return `${process.env.PUBLIC_URL}/effect_icon/${effect}.webp`;\n}\n\nexport function buildEffectIconSrcUrl(effect: Effect): string | undefined {\n  switch (effect) {\n  case Effect.DamageMultiplierUpByStatus:\n  case Effect.DamageMultiplierReductionByStatus:\n    return buildIconSrcUrl(Effect.DamageMultiplierUp);\n  case Effect.AdditionalDamageFocusing:\n    return buildIconSrcUrl(Effect.AtkUp);\n  case Effect.FixedDamage:\n    return buildIconSrcUrl(Effect.AdditionalDamage);\n  case Effect.AtkValueUp:\n  case Effect.AtkValueUpByUnitValue:\n    return buildIconSrcUrl(Effect.AtkUp);\n  case Effect.DefValueUp:\n    return buildIconSrcUrl(Effect.DefUp);\n  case Effect.SpdUp:\n  case Effect.SetAp:\n  case Effect.RefundAp:\n    return buildIconSrcUrl(Effect.ApUp);\n  case Effect.SpdDown:\n    return buildIconSrcUrl(Effect.ApDown);\n  case Effect.RangeDownActive1:\n    return buildIconSrcUrl(Effect.RangeDown);\n  case Effect.RangeUpActive2:\n    return buildIconSrcUrl(Effect.RangeUp);\n  case Effect.DamageReductionDown:\n  case Effect.MinimizeDamage:\n  case Effect.MinimizeDamageLessThanValue:\n    return buildIconSrcUrl(Effect.DamageReductionUp);\n  case Effect.AreaDamageDispersionUp:\n    return buildIconSrcUrl(Effect.DefUp);\n  case Effect.AreaDamageDispersionDown:\n    return buildIconSrcUrl(Effect.DefDown);\n  case Effect.BuffRemoval:\n    return buildIconSrcUrl(Effect.AllBuffRemoval);\n  case Effect.DebuffRemoval:\n    return buildIconSrcUrl(Effect.AllDebuffRemoval);\n  case Effect.AbsolutelyActivated:\n    return buildIconSrcUrl(Effect.ActivationRatePercentageUp);\n  case Effect.ReAttack:\n    return buildIconSrcUrl(Effect.FollowUpAttack);\n  case Effect.AttackHit:\n    return buildIconSrcUrl(Effect.AccUp);\n  case Effect.CriReductionByStatus:\n  case Effect.AttackCritical:\n    return buildIconSrcUrl(Effect.CriUp);\n  case Effect.IgnoreDef:\n    return buildIconSrcUrl(Effect.DefensePenetration);\n  case Effect.FormRelease:\n    return buildIconSrcUrl(Effect.FormChange);\n  case Effect.HpUp:\n  case Effect.HpDown:\n  case Effect.TagStack:\n  case Effect.TagUnstack:\n  case Effect.TagRelease:\n  case Effect.AMG11Construction:\n  case Effect.DeployRabbitDField:\n  case Effect.SummonHologramTiger:\n  case Effect.GoldenFactoryConstruction:\n    return undefined;\n  default:\n    return buildIconSrcUrl(effect);\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx, CSSObject } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\nimport { ImageSizeProps } from '../../common/ImageSizeProps';\n\nimport { Effect } from '../../../domain/Effect';\n\nimport { buildEffectIconSrcUrl } from '../../../service/EffectIconSrcUrlBuilder';\n\nconst placeHolderStyle: CSSObject = {\n  width: 24,\n  height: 24\n};\n\nconst PlaceHolder: React.FC = () => {\n  return (<div css={placeHolderStyle} />);\n};\n\nconst EffectIcon: React.FC<\n  { effect: Effect } & ImageSizeProps\n> = ({ effect, ...others }) => {\n  const { t } = useTranslation();\n  const src = buildEffectIconSrcUrl(effect);\n\n  return src ? (\n    <Image\n      {...others}\n      rounded\n      draggable=\"false\"\n      alt={t(`effect:effect.name.${effect}`)}\n      src={src}\n      srcSet={`${src} 48w`}\n    />\n  ) : (\n    <PlaceHolder />\n  );\n};\n\nexport default EffectIcon;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactElement } from 'react';\nimport { nanoid } from 'nanoid';\nimport { useTranslation } from 'react-i18next';\n\nimport { Effect } from '../../../domain/Effect';\n\nimport EffectIcon from './EffectIcon';\nimport { Image, OverlayTrigger, Popover, Tooltip } from 'react-bootstrap';\nimport { SquadUnitElectricResist, SquadUnitFireResist, SquadUnitIceResist } from './AttributeResist';\nimport { SquadUnitApEffectsPopoverView, SquadUnitStatusEffectsView } from './StatusEffectsView';\nimport { SquadUnitApplyingEffectViewModel } from './SquadUnitStatusEffectsViewModel';\nimport UnitStatusIcon from './UnitStatusIcon';\nimport { appendPercentage } from './UnitStatusParameterFormatter';\n\nimport { EnhanceableStatus } from '../../../state/status/parameters/UnitLvStatusState';\nimport {\n  useSquadUnitApplyingEffects,\n  useSquadUnitStatusValue,\n  useSquadUnitApValue,\n  useSquadUnitDamagedState,\n  useSquadUnitHpValues\n} from '../../../state/status/parameters/SquadUnitStatusParameterHook';\n\nimport './StatusParameter.css';\nimport './SquadUnitStatusParameter.css';\n\nconst StatusIconOverlay: React.FC<{ status: EnhanceableStatus | 'spd', children: ReactElement }> = ({ status, children }) => {\n  const { t } = useTranslation();\n\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      overlay={<Tooltip id={`tooltip-${status}-status-in-squad`}>{t(`status.${status}`)}</Tooltip>}\n    >\n      {children}\n    </OverlayTrigger>\n  );\n};\n\nconst StatusValueView: React.FC<{ status: Exclude<EnhanceableStatus, 'hp'> | 'spd' }> = ({ status }) => {\n  const value = useSquadUnitStatusValue(status);\n  const percentage = status === 'cri' || status === 'acc' || status === 'eva';\n\n  return (<div>{percentage ? appendPercentage(value) : value}</div>);\n};\n\nconst StatusParameterCol: React.FC<{ status: Exclude<EnhanceableStatus, 'hp'> | 'spd' }> = ({ status }) => {\n  return (\n    <div className=\"status-parameter-col\">\n      <StatusIconOverlay status={status}>\n        <UnitStatusIcon height={24} width={24} status={status} />\n      </StatusIconOverlay>\n      <div className=\"status-parameter-body\">\n        <div className=\"status-parameter-value\">\n          <StatusValueView status={status} />\n          <SquadUnitStatusEffectsView className=\"effects\" parameter={status} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst HpParameter: React.FC = () => {\n  const [current, max] = useSquadUnitHpValues();\n\n  return (<div className=\"hp-value\">{current}&nbsp;/&nbsp;{max}</div>);\n};\n\nconst HpBar: React.FC = () => {\n  const damaged = useSquadUnitDamagedState();\n\n  return (<div className={`hp-bar ${damaged ?? 'nope'}`} />);\n};\n\nconst HpCol: React.FC = () => {\n  return (\n    <div className=\"status-parameter-col\">\n      <StatusIconOverlay status=\"hp\">\n        <UnitStatusIcon height={24} width={24} status=\"hp\" />\n      </StatusIconOverlay>\n      <div className=\"status-parameter-body\">\n        <HpParameter />\n        <HpBar />\n      </div>\n    </div>\n  );\n};\n\nconst ApCol: React.FC = () => {\n  const apValue = useSquadUnitApValue();\n\n  return (\n    <div className=\"status-parameter-col\">\n      <span className=\"ap-label\">AP</span>\n      <div className=\"status-parameter-body\">\n        <div className=\"status-parameter-value ap-value\">\n          <SquadUnitApEffectsPopoverView>\n            <span>{apValue}</span>\n          </SquadUnitApEffectsPopoverView>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst EffectLabel: React.FC<{ effect: SquadUnitApplyingEffectViewModel }> = ({ effect: { label } }) => {\n  const { t } = useTranslation();\n  const text = 'tag' in label ? t('effect:tag.format', label) : t(label.key);\n\n  return (<div className=\"effect-label\">{text}{t('effect:tag_separator')}</div>);\n};\n\nconst EffectDetails: React.FC<{ effect: SquadUnitApplyingEffectViewModel }> = ({ effect: { description: { key, options }, additions } }) => {\n  const { t } = useTranslation();\n  const translateEffects = (): string => {\n    return 'effect' in options && options.effect ?\n      t(`effect:effect.name.${options.effect}`) :\n      'effects' in options && options.effects ?\n        options.effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:separator')) :\n        '';\n  };\n  const translateAddition = (addition: SquadUnitApplyingEffectViewModel['additions'][number]): string  => {\n    switch (addition.type) {\n    case 'rate':\n      return t(`status.effect.rate.${addition.key}`, addition.options);\n    case 'times':\n      return t('effect:times', { count: addition.value });\n    case 'cannot_be_dispelled':\n      return t('effect:cannot_be_dispelled');\n    default: {\n      const _exhaustiveCheck: never = addition;\n      return _exhaustiveCheck;\n    }\n    }\n  };\n\n  return (\n    <div className=\"effect-value\">\n      {\n        key === Effect.PreventsEffect ?\n          t(`effect:effect.description.${key}`, { ...options, effects: translateEffects() }) :\n          t(`effect:effect.description.${key}`, options)\n      }\n      {\n        additions.length > 0 ?\n          ` (${additions.map(translateAddition).join(t('effect:separator'))})` :\n          null\n      }\n    </div>\n  );\n};\n\nconst EffectTerm: React.FC<{ effect: SquadUnitApplyingEffectViewModel }> = ({ effect: { term } }) => {\n  const { t } = useTranslation();\n\n  return (<div className=\"effect-term\">{term ? t(term.key, term.options) : ''}</div>);\n};\n\nconst EffectSource: React.FC<{ effect: SquadUnitApplyingEffectViewModel }> = ({ effect: { type, affected } }) => {\n  const { t } = useTranslation();\n  const isAllySkill = affected.type === 'ally';\n  const source = t(affected.source.key, affected.source.options);\n  const [src, originalWidth] =\n    isAllySkill ?\n      [`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`, '64w'] :\n      [`${process.env.PUBLIC_URL}/icon/placeholder_${affected.type}.webp`, '96w'];\n\n  const popover = (\n    <Popover id=\"popover-effect-source\" className=\"skill-effect-details\">\n      <Popover.Content>\n        <div className=\"skill-effect-details-body\">\n          <div>{source}</div>\n          {isAllySkill ?\n            (<div>\n              {t(\n                'status.effect.source.skill',\n                {\n                  type: t(`skill.type.${affected.skill.type}`),\n                  name: t(affected.skill.name),\n                  lv: affected.skill.lv\n                }\n              )}\n            </div>) :\n            null}\n          <div className=\"skill-effect-type\">{t(`skill.effect.type.${type}`)}</div>\n        </div>\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <div className=\"effect-source\">\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={popover}\n      >\n        <Image\n          width={20}\n          height={20}\n          rounded\n          draggable=\"false\"\n          alt={source}\n          src={src}\n          srcSet={`${src} ${originalWidth}`}\n        />\n      </OverlayTrigger>\n    </div>\n  );\n};\n\nconst EffectRow: React.FC<{ effect: SquadUnitApplyingEffectViewModel }> = ({ effect }) => {\n  return (\n    <div className=\"effect-row-in-squad\">\n      <EffectIcon height={24} width={24} effect={effect.effect} />\n      <EffectLabel effect={effect} />\n      <EffectDetails effect={effect} />\n      <EffectTerm effect={effect} />\n      <EffectSource effect={effect} />\n    </div>\n  );\n};\n\nconst EffectList: React.FC = () => {\n  const effects = useSquadUnitApplyingEffects();\n\n  return (\n    <div className=\"effect-list-in-squad\">\n      {effects.map(e => (<EffectRow key={nanoid()} effect={e} />))}\n    </div>\n  );\n};\n\nconst SquadUnitStatusParameter: React.FC = () => {\n  return (\n    <div className=\"status-parameter-container\">\n      <div className=\"status-parameter-row\">\n        <HpCol />\n        <ApCol />\n      </div>\n      <div className=\"status-parameter-row\">\n        <StatusParameterCol status=\"atk\" />\n        <StatusParameterCol status=\"cri\" />\n      </div>\n      <div className=\"status-parameter-row\">\n        <StatusParameterCol status=\"def\" />\n        <StatusParameterCol status=\"acc\" />\n      </div>\n      <div className=\"status-parameter-row\">\n        <StatusParameterCol status=\"spd\" />\n        <StatusParameterCol status=\"eva\" />\n      </div>\n      <div className=\"attribute-resist-row\">\n        <SquadUnitFireResist />\n        <SquadUnitIceResist />\n        <SquadUnitElectricResist />\n      </div>\n      <EffectList />\n    </div>\n  );\n};\n\nexport default SquadUnitStatusParameter;\n"],"sourceRoot":""}