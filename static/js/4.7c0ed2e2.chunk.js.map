{"version":3,"sources":["component/status/SlotUnavailableOverlay.tsx","component/status/equipment/EquipmentItemView.tsx","component/status/equipment/EquipmentPlaceholder.tsx","state/equipment/availableEquipment.ts","component/status/equipment/EquipmentSelector.tsx"],"names":["SlotUnavailableOverlay","React","memo","show","availableLv","t","useTranslation","ifTruthy","css","display","flexDirection","alignItems","justifyContent","position","inset","backgroundColor","height","width","color","fontWeight","EquipmentItemView","equipmentId","equipmentType","equipmentRank","enhancementLv","Image","fluid","rounded","draggable","sizes","alt","src","process","top","left","right","fontSize","textShadow","join","EquipmentPlaceholder","type","opacity","filterEquipment","unit","equipment","matchExclusive","chipEquipment","constSelector","Object","values","equipmentData","filter","e","EquipmentType","Chip","osEquipment","Os","gearEquipment","Gear","availableChipEquipmentState","selectorFamily","key","get","availableOsEquipmentState","availableGearEquipmentState","useAvailableEquipment","slot","useRecoilValue","no","EquipmentEnhancementLvSelector","SelectorButton","enhanceLv","useEquipmentEnhanceLvSelector","selected","select","RoundedToggleButton","onChange","className","map","n","EquipmentStatusEffects","effects","useEquipmentStatusEffects","Badge","pill","variant","EffectDetailList","Fragment","condition","details","JSON","stringify","ifNonNullable","cond","detail","term","v","EquipmentEffects","useEquipmentEffects","EquipmentEffectsAsSkill","useEquipmentEffectsAsSkill","EquipmentItem","eventKey","active","label","others","Dropdown","Item","RemoveEquipmentItem","EquipmentSelectorMenu","value","items","Menu","id","item","EquipmentSlotUnavailableOverlay","useEquipmentAvailable","available","EquipmentToggle","forwardRef","ref","onClick","children","href","preventDefault","EquipmentDropdown","onSelect","find","undefined","Toggle","as","rank","Chip1EquipmentDropdown","useUnitEquipment","equip","Chip2EquipmentDropdown","OsEquipmentDropdown","GearEquipmentDropdown","EquipmentSelector","useSelectedUnit"],"mappings":"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","file":"static/js/4.7c0ed2e2.chunk.js","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport SVGIcon from '../icon/SVGIcon';\nimport { LockClosed } from '../icon/FluentIcons';\n\nimport { CoreLinkSlotAvailableLv } from '../../domain/UnitCoreLink';\nimport { EquipmentSlotAvailableLv } from '../../domain/equipment/UnitEquipment';\n\nimport { ifTruthy } from '../../util/react';\n\nconst SlotUnavailableOverlay: React.FC<{\n  show: boolean,\n  availableLv: CoreLinkSlotAvailableLv | EquipmentSlotAvailableLv\n}> = React.memo(({ show, availableLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    ifTruthy(\n      show,\n      (<span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.75)'\n        }}>\n        <SVGIcon css={{ height: 24, width: 24 }}>\n          <LockClosed/>\n        </SVGIcon>\n        <span css={{ color: '#ccc', fontWeight: 'bold' }}>\n          {t('lv')}&nbsp;{availableLv}\n        </span>\n      </span>)\n    )\n  );\n});\n\nexport default SlotUnavailableOverlay;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\n\nimport { EquipmentEnhancementLevel, EquipmentId, EquipmentRank, EquipmentType } from '../../../domain/equipment/EquipmentData';\n\nconst EquipmentItemView: React.FC<{\n  equipmentId: EquipmentId,\n  equipmentType: EquipmentType,\n  equipmentRank: EquipmentRank,\n  enhancementLv: EquipmentEnhancementLevel\n}> = ({ equipmentId, equipmentType, equipmentRank, enhancementLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ position: 'relative', display: 'inline-block' }}>\n      <Image\n        fluid\n        rounded\n        draggable=\"false\"\n        sizes=\"(max-width: 480px) 47px, (min-width: 480px) 62px\"\n        alt={t(`equipment:${equipmentId}`)}\n        src={`${process.env.PUBLIC_URL}/equip_icon/${equipmentType}_${equipmentId}_${equipmentRank}.webp`}\n      />\n      <Image\n        draggable=\"false\"\n        css={{ position: 'absolute', top: -10, left: -5 }}\n        height={28}\n        width={28}\n        alt={`${t(`equipment:rank.${equipmentRank}`)} ${t(`equipment:type.${equipmentType}`)}`}\n        src={`${process.env.PUBLIC_URL}/icon/${equipmentType}_${equipmentRank}.webp`}\n      />\n      <span\n        css={{\n          position: 'absolute',\n          top: -5,\n          right: 0,\n          color: '#fff',\n          fontSize: '0.9em',\n          fontWeight: 'bold',\n          textShadow: [\n            '1px 1px 0px #000, -1px -1px 0px #000',\n            '-1px 1px 0px #000,  1px -1px 0px #000',\n            '1px 0px 0px #000, -1px  0px 0px #000',\n            '0px 1px 0px #000,  0px -1px 0px #000'\n          ].join()\n        }}\n      >\n        +{enhancementLv}\n      </span>\n    </span>\n  );\n};\n\nexport default EquipmentItemView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\n\nimport { EquipmentType } from '../../../domain/equipment/EquipmentData';\n\nconst EquipmentPlaceholder: React.FC<{ type: EquipmentType }> = React.memo(({ type }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span\n      css={{\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        opacity: 0.5\n      }}\n    >\n      <Image\n        rounded\n        draggable=\"false\"\n        height={32}\n        width={32}\n        alt={t(`equipment:type.${type}`)}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_${type}.webp`}\n      />\n    </span>\n  );\n});\n\nexport default EquipmentPlaceholder;\n","import { constSelector, selectorFamily, useRecoilValue } from 'recoil';\n\nimport {\n  Chip,\n  EquipmentData,\n  EquipmentType,\n  Gear,\n  matchExclusive,\n  Os\n} from '../../domain/equipment/EquipmentData';\nimport { UnitBasicInfo, UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { equipmentData } from '../../data/equipmentData';\n\nimport { EquipmentSlot } from './unitEquipmentState';\n\nfunction filterEquipment(unit: UnitNumber) {\n  return function<T extends EquipmentData>(equipment: T) {\n    return matchExclusive(unit, equipment);\n  };\n}\n\nconst chipEquipment = constSelector<ReadonlyArray<Chip>>(\n  Object.values(equipmentData).filter(e => e.type === EquipmentType.Chip) as ReadonlyArray<Chip>\n);\n\nconst osEquipment = constSelector<ReadonlyArray<Os>>(\n  Object.values(equipmentData).filter(e => e.type === EquipmentType.Os) as ReadonlyArray<Os>\n);\n\nconst gearEquipment = constSelector<ReadonlyArray<Gear>>(\n  Object.values(equipmentData).filter(e => e.type === EquipmentType.Gear) as ReadonlyArray<Gear>\n);\n\nconst availableChipEquipmentState = selectorFamily<ReadonlyArray<Chip>, UnitNumber>({\n  key: 'availableChipEquipmentState',\n  get: (unit) => ({ get }) => get(chipEquipment).filter(filterEquipment(unit))\n});\n\nconst availableOsEquipmentState = selectorFamily<ReadonlyArray<Os>, UnitNumber>({\n  key: 'availableOsEquipmentState',\n  get: (unit) => ({ get }) => get(osEquipment).filter(filterEquipment(unit))\n});\n\nconst availableGearEquipmentState = selectorFamily<ReadonlyArray<Gear>, UnitNumber>({\n  key: 'availableGearEquipmentState',\n  get: (unit) => ({ get }) => get(gearEquipment).filter(filterEquipment(unit))\n});\n\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: 'chip1' | 'chip2'): ReadonlyArray<Chip>\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: 'os'): ReadonlyArray<Os>\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: 'gear'): ReadonlyArray<Gear>\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: EquipmentSlot): ReadonlyArray<Chip | Os | Gear> {\n  switch (slot) {\n  case 'chip1':\n  case 'chip2':\n    return useRecoilValue(availableChipEquipmentState(unit.no));\n  case 'os':\n    return useRecoilValue(availableOsEquipmentState(unit.no));\n  case 'gear':\n    return useRecoilValue(availableGearEquipmentState(unit.no));\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge, Dropdown, Image } from 'react-bootstrap';\nimport EquipmentItemView from './EquipmentItemView';\nimport EquipmentPlaceholder from './EquipmentPlaceholder';\nimport RoundedToggleButton from '../../common/RoundedToggleButton';\nimport SlotUnavailableOverlay from '../SlotUnavailableOverlay';\n\nimport { Chip, EquipmentEnhancementLevel, EquipmentId, EquipmentType, Gear, Os } from '../../../domain/equipment/EquipmentData';\nimport { ChipEquipment, GearEquipment, OsEquipment } from '../../../domain/equipment/UnitEquipment';\nimport { UnitBasicInfo, UnitNumber } from '../../../domain/UnitBasicInfo';\n\nimport {\n  EquipmentSlot,\n  useEquipmentAvailable,\n  useEquipmentEffects,\n  useEquipmentEffectsAsSkill,\n  useEquipmentEnhanceLvSelector,\n  useEquipmentStatusEffects,\n  useUnitEquipment\n} from '../../../state/equipment/unitEquipmentState';\nimport { TranslatedEquipmentEffect } from '../../../state/equipment/EquipmentEffectsTranslator';\nimport { useAvailableEquipment } from '../../../state/equipment/availableEquipment';\nimport { useSelectedUnit } from '../../../state/selector/unitSelectorState';\n\nimport { ifNonNullable } from '../../../util/react';\n\nimport './EquipmentSelector.css';\n\ntype SlotEquipment<S extends EquipmentSlot> =\n  S extends 'chip1' | 'chip2' ? Chip :\n  S extends 'os' ? Os :\n  S extends 'gear' ? Gear :\n    never\n\ntype SlotEquipmentType<S extends EquipmentSlot> =\n  S extends 'chip1' | 'chip2' ? typeof EquipmentType.Chip :\n  S extends 'os' ? typeof EquipmentType.Os :\n  S extends 'gear' ? typeof EquipmentType.Gear :\n    never\n\ntype Props<S extends EquipmentSlot> = {\n  unit: UnitBasicInfo,\n  id: string,\n  slot: S,\n  type: SlotEquipmentType<S>,\n  value?:\n    S extends 'chip1' | 'chip2' ? ChipEquipment :\n    S extends 'os' ? OsEquipment :\n    S extends 'gear' ? GearEquipment :\n      never,\n  items: ReadonlyArray<SlotEquipment<S>>,\n  onSelect: (equipment: SlotEquipment<S> | undefined) => void\n}\n\nconst EquipmentEnhancementLvSelector: React.FC<{ slot: EquipmentSlot, unit: UnitNumber }> = ({ slot, unit }) => {\n  const SelectorButton = ({ enhanceLv }: { enhanceLv: EquipmentEnhancementLevel }) => {\n    const [selected, select] = useEquipmentEnhanceLvSelector(slot, unit, enhanceLv);\n\n    return (<RoundedToggleButton selected={selected} onChange={select}>+&nbsp;{enhanceLv}</RoundedToggleButton>);\n  };\n\n  return (\n    <div className=\"equipment-enhancement\">\n      {([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] as const).map(n => (\n        <SelectorButton key={n} enhanceLv={n} />\n      ))}\n    </div>\n  );\n};\n\nconst EquipmentStatusEffects: React.FC<{ slot: EquipmentSlot, equipment: EquipmentId }> = ({ slot, equipment }) => {\n  const { t } = useTranslation();\n  const effects = useEquipmentStatusEffects(slot, equipment);\n\n  return (\n    <div className=\"status-effects\">\n      <div><Badge pill variant=\"light\">{t('status.equipment_status_effect')}</Badge></div>\n      <div className=\"details\">{effects}</div>\n    </div>\n  );\n};\n\nconst EffectDetailList: React.FC<{ effects: ReadonlyArray<TranslatedEquipmentEffect> }> = ({ effects }) => {\n  return (\n    <React.Fragment>\n      {effects.map(e => {\n        const { condition, details } = e;\n        return (\n          <div key={JSON.stringify(e)}>\n            {ifNonNullable(condition, cond => (<div className=\"condition\">{cond}</div>))}\n            {details.map(({ detail, term }) => {\n              return (\n                <div key={detail} className=\"detail\">\n                  <div>{detail}</div>\n                  {ifNonNullable(term, v => (\n                    <div className=\"term\"><span>{v}</span></div>\n                  ))}\n                </div>\n              );\n            })}\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nconst EquipmentEffects: React.FC<{ slot: EquipmentSlot, equipment: EquipmentId }> = ({ slot, equipment }) => {\n  const { t } = useTranslation();\n  const effects = useEquipmentEffects(slot, equipment);\n\n  return ifNonNullable(\n    effects,\n    e => (\n      <div className=\"effects\">\n        <div><Badge pill variant=\"light\">{t('status.equipment_effect')}</Badge></div>\n        <EffectDetailList effects={e} />\n      </div>\n    )\n  );\n};\n\nconst EquipmentEffectsAsSkill: React.FC<{ slot: EquipmentSlot, equipment: EquipmentId }> = ({ slot, equipment }) => {\n  const { t } = useTranslation();\n  const effects = useEquipmentEffectsAsSkill(slot, equipment);\n\n  return ifNonNullable(\n    effects,\n    e => (\n      <div className=\"effects\">\n        <div><Badge pill variant=\"light\">{t('status.equipment_effect_as_skill')}</Badge></div>\n        <EffectDetailList effects={e} />\n      </div>\n    )\n  );\n};\n\nconst EquipmentItem: React.FC<{\n  slot: EquipmentSlot,\n  eventKey: EquipmentId,\n  active: boolean,\n  label: string,\n  src: string\n}> = ({ slot, eventKey, active, label, src, ...others }) => {\n  return (\n    <Dropdown.Item\n      {...others}\n      className=\"equipment\"\n      eventKey={eventKey}\n      active={active}\n    >\n      <div className=\"icon\">\n        <Image\n          draggable=\"false\"\n          height={48}\n          width={48}\n          alt={label}\n          src={src}\n        />\n        <span className=\"label\">{label}</span>\n      </div>\n      <div className=\"details\">\n        <EquipmentStatusEffects slot={slot} equipment={eventKey} />\n        <EquipmentEffects slot={slot} equipment={eventKey} />\n        <EquipmentEffectsAsSkill slot={slot} equipment={eventKey} />\n      </div>\n    </Dropdown.Item>\n  );\n};\n\nconst RemoveEquipmentItem: React.FC<{\n  active: boolean,\n  type: SlotEquipmentType<EquipmentSlot>\n}> = ({ active, type, ...others }) => {\n  const { t } = useTranslation();\n  const label = t('status.remove_equipment');\n\n  return (\n    <Dropdown.Item\n      {...others}\n      className=\"equipment remove\"\n      active={active}\n    >\n      <div className=\"icon\">\n        <Image\n          draggable=\"false\"\n          height={48}\n          width={48}\n          alt={label}\n          src={`${process.env.PUBLIC_URL}/icon/placeholder_${type}.webp`}\n        />\n      </div>\n      <div className=\"details\">{label}</div>\n    </Dropdown.Item>\n  );\n};\n\nconst EquipmentSelectorMenu = <T extends EquipmentSlot>(\n  { unit, slot, type, value, items, ...others }: Omit<Props<T>, 'id' | 'onSelect'>\n): ReturnType<React.FC<Omit<Props<T>, 'id' | 'onSelect'>>> => {\n  const { t } = useTranslation();\n\n  return (\n    <Dropdown.Menu {...others} className=\"equipment\">\n      <EquipmentEnhancementLvSelector slot={slot} unit={unit.no} />\n      <div className=\"equipment-list\">\n        <RemoveEquipmentItem type={type} active={!value?.id} />\n        {items.map(item => (\n          <EquipmentItem\n            key={item.id}\n            slot={slot}\n            eventKey={item.id}\n            active={item.id === value?.id}\n            label={t(`equipment:${item.id}`)}\n            src={`${process.env.PUBLIC_URL}/equip_icon/${item.type}_${item.id}_ss.webp`}\n          />\n        ))}\n      </div>\n    </Dropdown.Menu>\n  );\n};\n\nconst EquipmentSlotUnavailableOverlay: React.FC<{ unit: UnitBasicInfo, slot: EquipmentSlot }> = ({ unit, slot }) => {\n  const [available, availableLv] = useEquipmentAvailable(unit, slot);\n  return (<SlotUnavailableOverlay show={!available} availableLv={availableLv} />);\n};\n\nconst EquipmentToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    id: string,\n    children: ReactNode\n  }\n>(({ onClick, id, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\nconst EquipmentDropdown = <T extends EquipmentSlot>(\n  { id, unit, slot, type, value, onSelect, items }: Props<T>\n): ReturnType<React.FC<Props<T>>> => {\n  return (\n    <Dropdown\n      className=\"slot equipment\"\n      onSelect={(eventKey) => {\n        if (eventKey) {\n          const item = items.find((item: SlotEquipment<T>) => item.id === eventKey);\n          item && onSelect(item);\n        } else {\n          onSelect(undefined);\n        }\n      }}\n    >\n      <Dropdown.Toggle as={EquipmentToggle} id={id}>\n        <span className=\"equipment-toggle-view\">\n          {value ?\n            (<EquipmentItemView\n              equipmentId={value.id}\n              equipmentType={type}\n              equipmentRank={value.rank}\n              enhancementLv={value.enhanceLv}\n            />) :\n            <EquipmentPlaceholder type={type} />}\n          <EquipmentSlotUnavailableOverlay unit={unit} slot={slot} />\n        </span>\n      </Dropdown.Toggle>\n      <EquipmentSelectorMenu unit={unit} slot={slot} type={type} value={value} items={items} />\n    </Dropdown>\n  );\n};\n\nconst Chip1EquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'chip1');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'chip1');\n  return (\n    <EquipmentDropdown\n      id=\"chip1-equipment-dropdown\"\n      unit={unit}\n      slot=\"chip1\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst Chip2EquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'chip2');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'chip2');\n  return (\n    <EquipmentDropdown\n      id=\"chip2-equipment-dropdown\"\n      unit={unit}\n      slot=\"chip2\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst OsEquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'os');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'os');\n  return (\n    <EquipmentDropdown\n      id=\"os-equipment-dropdown\"\n      unit={unit}\n      slot=\"os\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst GearEquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'gear');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'gear');\n  return (\n    <EquipmentDropdown\n      id=\"gear-equipment-dropdown\"\n      unit={unit}\n      slot=\"gear\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst EquipmentSelector: React.FC<{ slot: EquipmentSlot }> = ({ slot }) => {\n  const selected = useSelectedUnit();\n\n  return ifNonNullable(\n    selected,\n    unit => {\n      switch (slot) {\n      case 'chip1': return (<Chip1EquipmentDropdown unit={unit} />);\n      case 'chip2': return (<Chip2EquipmentDropdown unit={unit} />);\n      case 'os':    return (<OsEquipmentDropdown unit={unit} />);\n      case 'gear':  return (<GearEquipmentDropdown unit={unit} />);\n      }\n    }\n  );\n};\n\nexport default EquipmentSelector;\n"],"sourceRoot":""}