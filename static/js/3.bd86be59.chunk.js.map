{"version":3,"sources":["component/status/SlotUnavailableOverlay.tsx","component/status/corelink/CoreLinkPlaceholder.tsx","component/status/corelink/CoreLinkUnitView.tsx","component/status/corelink/CoreLinkSelector.tsx"],"names":["SlotUnavailableOverlay","React","memo","show","availableLv","t","useTranslation","ifTruthy","css","display","flexDirection","alignItems","justifyContent","position","inset","backgroundColor","height","width","color","fontWeight","EquipmentPlaceholder","slot","opacity","Image","rounded","alt","src","process","FitUnitView","unit","fluid","sizes","PartialFitUnitView","rank","type","role","rate","paddingTop","fontSize","top","right","textShadow","join","CoreLinkUnitView","linkedUnit","CoreLinkUnitItem","eventKey","active","others","Dropdown","Item","className","UnlinkItem","label","CoreLinkSelectorMenu","value","items","Menu","map","item","index","key","JSON","stringify","CoreLinkToggle","forwardRef","ref","onClick","id","children","href","e","preventDefault","CoreLinkDropdown","useAvailableCoreLinkUnit","useUnitCoreLink","linkSlot","available","onSelect","undefined","Toggle","as","CoreLinkPlaceholder","CoreLinkSelector","selected","useRecoilValue","selectedUnitBasicInfoState","ifNonNullable"],"mappings":"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","file":"static/js/3.bd86be59.chunk.js","sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport SVGIcon from '../icon/SVGIcon';\nimport { LockClosed } from '../icon/FluentIcons';\n\nimport { CoreLinkSlotAvailableLv } from '../../domain/UnitCoreLink';\nimport { EquipmentSlotAvailableLv } from '../../domain/status/UnitEquipment';\n\nimport { ifTruthy } from '../../util/react';\n\nconst SlotUnavailableOverlay: React.FC<{\n  show: boolean,\n  availableLv: CoreLinkSlotAvailableLv | EquipmentSlotAvailableLv\n}> = React.memo(({ show, availableLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    ifTruthy(\n      show,\n      (<span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.75)'\n        }}>\n        <SVGIcon css={{ height: 24, width: 24 }}>\n          <LockClosed/>\n        </SVGIcon>\n        <span css={{ color: '#ccc', fontWeight: 'bold' }}>\n          {t('lv')}&nbsp;{availableLv}\n        </span>\n      </span>)\n    )\n  );\n});\n\nexport default SlotUnavailableOverlay;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\nimport { CoreLinkSlot } from '../../../state/corelink/unitCoreLinkState';\n\nconst EquipmentPlaceholder: React.FC<{ slot: CoreLinkSlot }> = React.memo(({ slot }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span\n      css={{\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        opacity: 0.5\n      }}\n    >\n      <Image\n        rounded\n        height={32}\n        width={32}\n        alt={t(`status.core_link_${slot}`)}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`}\n      />\n    </span>\n  );\n});\n\nexport default EquipmentPlaceholder;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\n\nimport { CoreLinkUnit } from '../../../domain/UnitCoreLink';\nimport { UnitNumber, UnitRank, UnitRole, UnitType } from '../../../domain/UnitBasicInfo';\n\nconst FitUnitView: React.FC<{ unit: UnitNumber }> = ({ unit }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ display: 'inline-block', height: '100%', width: '100%' }}>\n      <Image\n        fluid\n        rounded\n        sizes=\"(max-width: 480px) 47px, (min-width: 480px) 62px\"\n        alt={t(`unit:name.${unit}`)}\n        src={`${process.env.PUBLIC_URL}/unit_icon/${unit}.webp`}\n      />\n    </span>\n  );\n};\n\nconst PartialFitUnitView: React.FC<{\n  rank: UnitRank,\n  type: UnitType,\n  role: UnitRole,\n  rate: number\n}> = ({ rank, type, role, rate }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ display: 'inline-block', height: '100%', width: '100%' }}>\n      <span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingTop: 10,\n          '@media (max-width: 480px)': { height: 47, width: 47 },\n          '@media (min-width: 480px)': { height: 62, width: 62 }\n        }}\n      >\n        <Image\n          sizes=\"(max-width: 480px) 24px, (min-width: 480px) 30px\"\n          css={{\n            '@media (max-width: 480px)': { height: 24, width: 24 },\n            '@media (min-width: 480px)': { height: 30, width: 30 }\n          }}\n          alt={`${t(`unit.rank.${rank}`)} ${t(`unit.role.${role}`)}`}\n          src={`${process.env.PUBLIC_URL}/icon/${rank}_${role}.webp`}\n        />\n        <span\n          css={{\n            color: '#ccc',\n            fontWeight: 'bold',\n            '@media (max-width: 480px)': { fontSize: '0.7em' },\n            '@media (min-width: 480px)': { fontSize: '0.9em' }\n          }}\n        >\n          {t(`unit.type.${type}`)}\n        </span>\n      </span>\n      <span\n        css={{\n          position: 'absolute',\n          top: -5,\n          right: 0,\n          color: '#0cf',\n          fontWeight: 'bold',\n          textShadow: [\n            '1px 1px 0px #000, -1px -1px 0px #000',\n            '-1px 1px 0px #000,  1px -1px 0px #000',\n            '1px 0px 0px #000, -1px  0px 0px #000',\n            '0px 1px 0px #000,  0px -1px 0px #000'\n          ].join(),\n          '@media (max-width: 480px)': { fontSize: '0.7em' },\n          '@media (min-width: 480px)': { fontSize: '0.9em' }\n        }}\n      >\n        +{rate}%\n      </span>\n    </span>\n  );\n};\n\nconst CoreLinkUnitView: React.FC<{ linkedUnit: CoreLinkUnit }> = ({ linkedUnit }) => {\n  return 'unit' in linkedUnit ?\n    (<FitUnitView unit={linkedUnit.unit} />) :\n    (<PartialFitUnitView rank={linkedUnit.rank} type={linkedUnit.type} role={linkedUnit.role} rate={linkedUnit.rate} />);\n};\n\nexport default CoreLinkUnitView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { useTranslation } from 'react-i18next';\n\nimport { Dropdown, Image } from 'react-bootstrap';\nimport CoreLinkPlaceholder from './CoreLinkPlaceholder';\nimport SlotUnavailableOverlay from '../SlotUnavailableOverlay';\n\nimport CoreLinkUnitView from './CoreLinkUnitView';\nimport { CoreLinkUnit } from '../../../domain/UnitCoreLink';\nimport { UnitBasicInfo } from '../../../domain/UnitBasicInfo';\n\nimport { CoreLinkSlot, useAvailableCoreLinkUnit, useUnitCoreLink } from '../../../state/corelink/unitCoreLinkState';\nimport { selectedUnitBasicInfoState } from '../../../state/selector/unitSelectorState';\n\nimport { ifNonNullable } from '../../../util/react';\n\nimport './CoreLinkSelector.css';\n\nconst CoreLinkUnitItem: React.FC<{\n  eventKey?: string,\n  active: boolean,\n  unit: CoreLinkUnit\n}> = ({ eventKey, active, unit, ...others }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Dropdown.Item\n      {...others}\n      className=\"core-link\"\n      eventKey={eventKey}\n      active={active}\n    >\n      {'unit' in unit ?\n        (<Image\n          className=\"unit\"\n          height={48}\n          width={48}\n          alt={t(`unit:name.${unit.unit}`)}\n          src={`${process.env.PUBLIC_URL}/unit_icon/${unit.unit}.webp`}\n        />) :\n        (<span className=\"partial-fit-unit\">\n          <Image\n            className=\"basic-info-icon\"\n            height={32}\n            width={32}\n            alt={`${t(`unit.rank.${unit.rank}`)} ${t(`unit.type.${unit.type}`)} ${t(`unit.role.${unit.role}`)}`}\n            src={`${process.env.PUBLIC_URL}/icon/${unit.rank}_${unit.role}.webp`}\n          />\n          <span className=\"unit-type\">\n            {t(`unit.type.${unit.type}`)}\n          </span>\n        </span>)}\n      <span className=\"label\">+&nbsp;{unit.rate}&nbsp;%</span>\n    </Dropdown.Item>\n  );\n};\n\nconst UnlinkItem: React.FC<{ active: boolean }> = ({  active }) => {\n  const { t } = useTranslation();\n  const label = t('status.unlink');\n\n  return (\n    <Dropdown.Item\n      className=\"core-link\"\n      active={active}\n    >\n      <Image\n        className=\"unit\"\n        height={48}\n        width={48}\n        alt={label}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`}\n      />\n      <span className=\"label\">{label}</span>\n    </Dropdown.Item>\n  );\n};\n\nconst CoreLinkSelectorMenu: React.FC<{\n  value: CoreLinkUnit | undefined,\n  items: ReadonlyArray<CoreLinkUnit>\n}> = ({ value, items }) => {\n\n\n  return (\n    <Dropdown.Menu className=\"core-link\">\n      <div className=\"core-link-unit-list\">\n        <UnlinkItem active={!value} />\n        {items.map((item, index) => (\n          <CoreLinkUnitItem\n            key={JSON.stringify(item)}\n            eventKey={index + ''}\n            active={item.rate === value?.rate}\n            unit={item}\n          />\n        ))}\n      </div>\n    </Dropdown.Menu>\n  );\n};\n\nconst CoreLinkToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    id: string,\n    children: ReactNode\n  }\n>(({ onClick, id, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\nconst CoreLinkDropdown: React.FC<{ unit: UnitBasicInfo, slot: CoreLinkSlot }> = ({ unit, slot }) => {\n  const items = useAvailableCoreLinkUnit(unit);\n  const [linkedUnit, linkSlot, available, availableLv] = useUnitCoreLink(unit, slot);\n\n  return (\n    <Dropdown\n      className=\"slot core-link\"\n      onSelect={(eventKey) => {\n        linkSlot(eventKey ? items[+eventKey] : undefined);\n      }}\n    >\n      <Dropdown.Toggle as={CoreLinkToggle} id={`core-link-${slot}-dropdown`}>\n        <span className=\"core-link-toggle-view\">\n          {linkedUnit ?\n            (<CoreLinkUnitView linkedUnit={linkedUnit} />) :\n            (<CoreLinkPlaceholder slot={slot} />)\n          }\n          <SlotUnavailableOverlay show={!available} availableLv={availableLv}/>\n        </span>\n      </Dropdown.Toggle>\n      <CoreLinkSelectorMenu value={linkedUnit} items={items} />\n    </Dropdown>\n  );\n};\n\nconst CoreLinkSelector: React.FC<{ slot: CoreLinkSlot }> = ({ slot }) => {\n  const selected = useRecoilValue(selectedUnitBasicInfoState);\n\n  return ifNonNullable(\n    selected,\n    unit => (<CoreLinkDropdown unit={unit} slot={slot} />)\n  );\n};\n\nexport default CoreLinkSelector;\n"],"sourceRoot":""}