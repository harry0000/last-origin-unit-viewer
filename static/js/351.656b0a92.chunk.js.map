{"version":3,"file":"static/js/351.656b0a92.chunk.js","mappings":"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","sources":["component/skill/AreaOfEffectGrid.tsx","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","component/skill/AttributeColorStyle.ts","component/skill/DamageDealView.tsx","component/skill/EffectsAsEquipmentDescriptionView.tsx","component/skill/UnitAliasView.tsx","component/skill/SkillEffectTargetView.tsx","component/skill/SkillEffectConditionViewModel.ts","component/skill/SkillEffectConditionView.tsx","component/skill/SkillEffectsTranslator.ts","component/skill/SkillEffectDetailsView.tsx","component/skill/SkillEffectsView.tsx","component/skill/SkillPane.tsx","component/skill/UnitFormSelector.tsx","component/skill/UnitSkillList.tsx","../node_modules/react-bootstrap/esm/Col.js"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { CSSPropertiesWithMultiValues } from '@emotion/serialize/dist/declarations/types';\nimport { Interpolation } from '@emotion/serialize';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { AreaOfEffectCellType } from './AreaOfEffectCellType';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { useSkillArea } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst cellColorStyle = {\n  [AreaOfEffectCellType.Effective]: '#d0191d',\n  [AreaOfEffectCellType.High]:      '#ff8f03',\n  [AreaOfEffectCellType.Middle]:    '#ba5a03',\n  [AreaOfEffectCellType.Low]:       '#763316',\n  [AreaOfEffectCellType.Weak]:      '#6b3f31',\n  [AreaOfEffectCellType.None]:      '#4b4b4d'\n} as const satisfies { [key in AreaOfEffectCellType]: string };\n\nconst overlayStyle: (type: AreaOfEffectCellType) => CSSPropertiesWithMultiValues | Record<string, never> = (type) =>\n  type !== AreaOfEffectCellType.None ?\n    {\n      borderRadius: 2,\n      position: 'absolute',\n      top: -3,\n      bottom: 4,\n      left: -3,\n      right: 4,\n      opacity: 0.8,\n      backgroundColor: cellColorStyle[type]\n    } as const satisfies CSSPropertiesWithMultiValues :\n    {};\n\nconst AreaOfEffectCell: React.FC<{ selected: boolean, type: AreaOfEffectCellType }> = ({ selected, type, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <td\n      css={{\n        border: '5px solid transparent',\n        width: '33%',\n        position: 'relative',\n        '&::after': {\n          content: '\" \"',\n          display: 'block',\n          marginTop: '100%'\n        }\n      }}\n    >\n      <div\n        css={{\n          borderRadius: 2,\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: selected ? '#16d4d4' : cellColorStyle[AreaOfEffectCellType.None]\n        }}\n      />\n      {\n        type === AreaOfEffectCellType.High ||\n        type === AreaOfEffectCellType.Middle ||\n        type === AreaOfEffectCellType.Low ||\n        type === AreaOfEffectCellType.Weak ?\n          (<OverlayTrigger\n            {...rest}\n            placement='auto'\n            overlay={<Tooltip id='tooltip-aoe-cell'>{t(`skill.effective_rate.${type}`)}</Tooltip>}\n          >\n            <div css={overlayStyle(type)} />\n          </OverlayTrigger>) :\n          <div css={overlayStyle(type)} />\n      }\n    </td>\n  );\n};\n\nconst AreaOfEffectGrid: React.FC<{\n  css?: Interpolation<Theme>,\n  skillType: SkillType,\n  unit: UnitBasicInfo\n}> = ({ skillType, unit, ...rest }) => {\n  const { t } = useTranslation();\n  const cellType = useSkillArea(skillType, unit);\n\n  return (\n    ifNonNullable(\n      cellType,\n      cell => (\n        <div {...rest}>\n          <table\n            css={{\n              borderCollapse: 'collapse',\n              width: '100%',\n              transform: 'skewX(-9deg)'\n            }}>\n            <tbody>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 7} type={cell.area[0]} />\n                <AreaOfEffectCell selected={cell.select === 8} type={cell.area[1]} />\n                <AreaOfEffectCell selected={cell.select === 9} type={cell.area[2]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 4} type={cell.area[3]} />\n                <AreaOfEffectCell selected={cell.select === 5} type={cell.area[4]} />\n                <AreaOfEffectCell selected={cell.select === 6} type={cell.area[5]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 1} type={cell.area[6]} />\n                <AreaOfEffectCell selected={cell.select === 2} type={cell.area[7]} />\n                <AreaOfEffectCell selected={cell.select === 3} type={cell.area[8]} />\n              </tr>\n            </tbody>\n          </table>\n          {(<span css={{ color: '#16d4d4' }}>{!cell.select ? t('skill.fixed_area') : '\\u00A0'}</span>)}\n        </div>\n      )\n    )\n  );\n};\n\nexport default AreaOfEffectGrid;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import { DamageAttribute } from '../../domain/skill/UnitSkillData';\n\nexport const AttributeColorStyle: { [key in DamageAttribute]: string } = {\n  [DamageAttribute.Fire]: '#c33',\n  [DamageAttribute.Ice]: '#0cf',\n  [DamageAttribute.Electric]: '#fc0'\n};\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { calcValue } from '../../domain/ValueUnit';\n\nimport { AttributeColorStyle } from './AttributeColorStyle';\n\nimport { useDamageDeal } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst DamageDealView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const props = useDamageDeal(skillType, unit);\n  if (!props[0]) {\n    return null;\n  }\n\n  const [damage_deal, area] = props;\n\n  return (\n    <div css={{ color: '#ccc', marginTop: 10 }}>\n      <span>\n        {area === SkillAreaType.Single ?\n          t('effect:damage_deal.target.single') :\n          t('effect:damage_deal.target.area')}\n      </span>\n      {ifNonNullable(\n        damage_deal.effective,\n        effective => (<span>{t(`effect:effective.${effective}`)}{t('effect:separator')}</span>)\n      )}\n      <span>{t('status.atk')}</span>\n      <span css={{ margin: '0 5px', color: '#fc0', fontWeight: 'bold' }}>\n        {calcValue(damage_deal)}%\n      </span>\n      <span>{t('effect:as_preposition')}</span>\n      {ifNonNullable(\n        damage_deal.attribute,\n        attribute => (\n          <span css={{ margin: '0 5px', color: AttributeColorStyle[attribute], fontWeight: 600 }}>\n            {t(`effect:attribute.${attribute}`)}\n          </span>\n        )\n      )}\n      <span>{t('effect:damage')}</span>\n    </div>\n  );\n};\n\nexport default DamageDealView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport { useEffectsAsEquipmentDescription } from '../../state/skill/UnitSkillHook';\n\nimport { ifTruthy } from '../../util/react';\n\nconst EffectsAsEquipmentDescriptionView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const show = useEffectsAsEquipmentDescription(skillType, unit);\n\n  return (\n    ifTruthy(\n      show,\n      (<div css={{\n        color: '#ccc',\n        fontSize: '0.9em',\n        marginTop: 10\n      }}>\n        <span>{t('effect:effects_as_equipment.description.prefix')}</span>\n        <OverlayTrigger\n          placement='auto'\n          overlay={<Tooltip id='tooltip-effects-as-equipment'>{t('effect:effects_as_equipment.annotation')}</Tooltip>}\n        >\n          <span css={{ cursor: 'help', textDecoration: 'underline' }}>\n            {t('effect:effects_as_equipment.description.as_equipment')}\n          </span>\n        </OverlayTrigger>\n        <span>{t('effect:effects_as_equipment.description.suffix')}</span>\n      </div>)\n    )\n  );\n};\n\nexport default EffectsAsEquipmentDescriptionView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport { UnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\n\nconst UnitAliasView: React.FC<{\n  unitAlias: UnitAlias,\n  exceptUnit?: UnitNumber\n}> = ({ unitAlias, exceptUnit }) => {\n  const { t } = useTranslation();\n  const popover = (\n    <Popover id=\"popover-unit-alias\" css={{ opacity: '0.9' }}>\n      <Popover.Content>\n        {[...unitNumbersForAlias[unitAlias]]\n          .filter(n => n !== exceptUnit)\n          .map(n => (<div key={n} css={{ textAlign: 'left' }}>{t('unit:display', { number: n })}</div>))}\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      placement='auto'\n      overlay={popover}\n    >\n      <span css={{\n        display: 'inline-block',\n        cursor: 'help',\n        textDecoration: 'underline'\n      }}>\n        {t(`effect:unit.${unitAlias}`)}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nexport default UnitAliasView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport UnitAliasView from './UnitAliasView';\n\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\nimport { isUnitAlias } from '../../domain/UnitAlias';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectTargetView: React.FC<{\n  target: SkillEffectTarget,\n  selfUnitNumber: UnitNumber\n}> = ({ target, selfUnitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {t(`effect:effect.target.kind.${target.kind}`)}\n      {'conditions' in target ? t('effect:of_preposition') : null}\n      {\n        'conditions' in target && target.conditions ?\n          target.conditions.map((cond, i, arr ) => {\n            const separator: string = ++i < arr.length ? t('effect:unit_separator') : '';\n\n            if (typeof cond === 'number') {\n              return t('effect:with_quotes', { value: t('unit:display', { number: cond }) }) + separator;\n            } else if (typeof cond === 'string') {\n              return isUnitAlias(cond) ?\n                (\n                  <React.Fragment key={cond}>\n                    <UnitAliasView unitAlias={cond} exceptUnit={target.kind === SkillEffectTargetKind.AllyExceptSelf ? selfUnitNumber : undefined} />\n                    {separator}\n                  </React.Fragment>\n                ) :\n                t(`effect:unit.${cond}`) + separator;\n            } else if ('alias' in cond) {\n              const unit: string | null =\n                'type' in cond ?\n                  t(`effect:unit.${cond.type}`) :\n                  'role' in cond ?\n                    t(`effect:unit.${cond.role}`) :\n                    null;\n              const except = 'except' in cond ? cond.except : undefined;\n\n              return (\n                <React.Fragment key={JSON.stringify(cond)}>\n                  {ifNonNullable(\n                    except,\n                    v => (\n                      <React.Fragment>\n                        {\n                          v === selfUnitNumber ?\n                            t('effect:unit.self') :\n                            t('effect:with_quotes', { value: t('unit:display', { number: v }) })\n                        }\n                        {t('effect:except_preposition')}\n                      </React.Fragment>\n                    )\n                  )}\n                  <UnitAliasView unitAlias={cond.alias} exceptUnit={except} />\n                  {unit ? t('effect:of_preposition') : null}\n                  {unit}\n                  {separator}\n                </React.Fragment>\n              );\n            } else if ('not_alias' in cond) {\n              return (\n                <React.Fragment key={JSON.stringify(cond)}>\n                  <UnitAliasView unitAlias={cond.not_alias} />\n                  {t('effect:negative_form')}\n                  {'type' in cond ?\n                    t(`effect:unit.${cond.type}`) :\n                    'role' in cond ?\n                      t(`effect:unit.${cond.role}`) :\n                      t('effect:unit.unit')}\n                  {separator}\n                </React.Fragment>\n              );\n            } else if ('except' in cond) {\n              return (\n                <React.Fragment key={JSON.stringify(cond)}>\n                  {t('effect:with_quotes', { value: t('unit:display', { number: cond.except }) })}\n                  {t('effect:except_preposition')}\n                  {t('effect:unit.unit')}\n                  {separator}\n                </React.Fragment>\n              );\n            } else {\n              return t(`effect:unit.${cond.type}`) + t(`effect:unit.${cond.role}`) + separator;\n            }\n          }) :\n          null\n      }\n    </React.Fragment>\n  );\n};\n\nexport default SkillEffectTargetView;\n","import { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillEffect, hasTargetSkillEffect, hasSelfSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { isTargetSkillEffectData } from '../../domain/skill/SkillEffectData';\n\ntype SkillEffectTargets =\n  { self?: true } |\n  { self?: true, target: true } |\n  { self?: true, target: true } & SkillEffectTarget |\n  { around?: true }\n\ntype EnemyTargetConditions<T extends SkillEffectTarget = SkillEffectTarget> =\n  Required<Extract<T, { kind: typeof SkillEffectTargetKind.Enemy }>>\n\nclass SkillEffectConditionViewModel {\n\n  readonly #effect: SkillEffect;\n\n  constructor(effect: SkillEffect) {\n    this.#effect = effect;\n  }\n\n  get enemyTargetConditions(): EnemyTargetConditions | undefined {\n    const hasNoTargetCondition =\n      !this.#effect.conditions ||\n      this.#effect.conditions.every(cond => !('state' in cond) || !('target' in cond.state));\n    const hasNoTargetEffect = !hasTargetSkillEffect(this.#effect.details);\n\n    // Neither condition view nor targets of effect view shows the target condition.\n    const needToShowTargetCondition = hasNoTargetCondition && hasNoTargetEffect;\n\n    if (\n      needToShowTargetCondition &&\n      isTargetSkillEffectData(this.#effect) &&\n      this.#effect.target.kind === SkillEffectTargetKind.Enemy\n    ) {\n      const { kind, conditions } = this.#effect.target;\n      return conditions && { kind, conditions };\n    }\n\n    return undefined;\n  }\n\n  get hasAnyConditions(): boolean {\n    return !!this.#effect.conditions || !!this.enemyTargetConditions;\n  }\n\n  get hasMultipleConditions(): boolean {\n    return (this.#effect.conditions?.length ?? 0) > 1;\n  }\n\n  get effective(): PassiveSkillEffective | undefined {\n    return 'effective' in this.#effect ? this.#effect.effective : undefined;\n  }\n\n  get scaleFactor(): SkillEffectScaleFactor | undefined {\n    return 'scale_factor' in this.#effect ? this.#effect.scale_factor : undefined;\n  }\n\n  get effectTargets(): SkillEffectTargets {\n    const hasSelfEffect   = hasSelfSkillEffect(this.#effect.details);\n    const hasTargetEffect = hasTargetSkillEffect(this.#effect.details);\n\n    if (\n      hasTargetEffect &&\n      // for type casting\n      isTargetSkillEffectData(this.#effect)\n    ) {\n      // target details already shown by condition state\n      const needNoDetails = this.#effect.conditions?.some(cond => 'state' in cond && 'target' in cond.state);\n\n      return Object.assign(\n        hasSelfEffect ? { self: true } as const : {},\n        {\n          target: true,\n          ...(needNoDetails ? {} : this.#effect.target)\n        }\n      );\n    } else {\n      return hasSelfEffect ? { self: true } : { around: true };\n    }\n  }\n\n}\n\nexport default SkillEffectConditionViewModel;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { StringMap, TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nimport SkillEffectTargetView from './SkillEffectTargetView';\nimport UnitAliasView from './UnitAliasView';\n\nimport {\n  ActivationEnemyState,\n  ActivationSelfState,\n  ActivationSquadState,\n  ActivationTargetState,\n  ArmoredBulgasari,\n  DefenderAndArmoredBulgasari,\n  NumOfUnitsInSquadState,\n  SelfSkillEffectActivationCondition,\n  SelfSkillEffectActivationState,\n  SkillEffectActivationCondition,\n  SkillEffectActivationState,\n  TargetSkillEffectActivationCondition,\n  UnitAliasAndRole,\n  isDefenderAndArmoredBulgasari,\n  isUnitsInSquadCondition\n} from '../../domain/skill/SkillEffectActivationCondition';\nimport { Effect } from '../../domain/Effect';\nimport { EffectActivationState } from '../../domain/EffectActivationState';\nimport { EffectTrigger } from '../../domain/EffectTrigger';\nimport { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect, isTargetSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget } from '../../domain/skill/SkillEffectTarget';\nimport { UnitAlias, isUnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber, UnitRole, UnitType } from '../../domain/UnitBasicInfo';\n\nimport SkillEffectConditionViewModel from './SkillEffectConditionViewModel';\n\nimport { Entry, typedEntries } from '../../util/object';\nimport { ifNonNullable, ifTruthy } from '../../util/react';\nimport { isReadonlyArray, ValueOf } from '../../util/type';\n\nfunction needSeparator(array: ReadonlyArray<unknown>, index: number): boolean {\n  return ++index < array.length;\n}\n\nfunction stateValuesView(\n  entry: Entry<ActivationSelfState> | Entry<ActivationTargetState>,\n  unitNumber: UnitNumber,\n  t: TFunction\n): ReactNode {\n  switch (entry[0]) {\n  case EffectActivationState.HpGreaterOrEqual:\n  case EffectActivationState.HpLessOrEqual:\n  case EffectActivationState.HpGreaterThan:\n  case EffectActivationState.HpLessThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { value: entry[1] })}</span>);\n  case EffectActivationState.HpRateGreaterOrEqualThanSelf:\n    return (<span>{t(`effect:condition.state.${entry[0]}`)}</span>);\n  case EffectActivationState.StatusGreaterThanSelf:\n  case EffectActivationState.StatusLessThanSelf:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.StatusGreaterOrEqualThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.RankGreaterOrEqual:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { rank: entry[1] })}</span>);\n  case EffectActivationState.Affected: {\n    const effect = entry[1];\n    return isReadonlyArray(effect) ?\n      (<span>{t('effect:condition.state.affected_both', { effect: { 0: effect[0], 1: effect[1] } })}</span>) :\n      (<span>{t(`effect:condition.state.${entry[0]}`, { effect })}</span>);\n  }\n  case EffectActivationState.NotAffected: {\n    const effects = entry[1]\n      .map(e => t(`effect:effect.name.${e}`))\n      .join(t('effect:and_symbolic_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { effects })}</span>);\n  }\n  case EffectActivationState.AffectedBy:\n    return affectedByStateView(entry[1], t);\n  case EffectActivationState.Tagged: {\n    const state = entry[1];\n    return isReadonlyArray(state) ?\n      (<span>{t('effect:condition.state.multiple_tagged', { tag1: state[0], tag2: state[1] })}</span>) :\n      (<span>{t(`effect:condition.state.${entry[0]}`, { tag: state })}</span>);\n  }\n  case EffectActivationState.NotTagged:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { tag: entry[1] })}</span>);\n  case EffectActivationState.TaggedAffected:\n  case EffectActivationState.NotTaggedAffected:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.Stack:\n    if ('effect' in entry[1]) {\n      return t('effect:condition.state.tag_effect_stack_ge', entry[1]);\n    } else if ('equal' in entry[1]) {\n      return t('effect:condition.state.tag_stack_eq', entry[1]);\n    } else {\n      const { tag } = entry[1];\n      const isMultipleTag = isReadonlyArray(tag);\n      const prefix = isMultipleTag ? 'tags_' : 'tag_';\n      const suffix = 'greater_or_equal' in entry[1] ? 'stack_ge' : 'stack_le';\n      const options: StringMap = {\n        ...entry[1],\n        ...(isMultipleTag ?\n          { tags: tag.map(tagKey => t('effect:tag.format', { tag: tagKey })).join(t('effect:or_symbolic_separator')) }:\n          {}\n        )\n      };\n\n      return t(`effect:condition.state.${prefix}${suffix}`, options);\n    }\n  case EffectActivationState.Form:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { form: entry[1] })}</span>);\n  case EffectActivationState.Equipped: {\n    const equipment = t(`equipment:${entry[1]}`);\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipment })}</span>);\n  }\n  case EffectActivationState.NotEquipped: {\n    const equipments = entry[1]\n      .map(e => `${t('effect:with_quotes', { value: t(`equipment:${e}`) })}`)\n      .join(t('effect:unit_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipments })}</span>);\n  }\n  case EffectActivationState.Grid:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { grid: entry[1] })}</span>);\n  case EffectActivationState.Unit:\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  default: {\n    const _exhaustiveCheck: never = entry;\n    return _exhaustiveCheck;\n  }\n  }\n}\n\nfunction affectedByStateView(\n  state: ValueOf<ActivationSelfState, typeof EffectActivationState.AffectedBy>,\n  t: TFunction\n): Exclude<ReactNode, undefined> {\n  if ('alias' in state) {\n    return (\n      <React.Fragment>\n        {t('effect:with_quotes', { value: t('unit:display', { number: state.except }) })}\n        {t('effect:except_preposition')}\n        <UnitAliasView unitAlias={state.alias} exceptUnit={state.except} />\n        {t('effect:condition.state.affected_by_alias')}\n      </React.Fragment>\n    );\n  } else {\n    if ('effect' in state) {\n      const key = 'unit' in state ? 'affected_effect_by' : 'affected_equipment_effect_by';\n      return (<span>{t(`effect:condition.state.${key}`, state as StringMap)}</span>);\n    } else {\n      return (<span>{t('effect:condition.state.affected_by', state)}</span>);\n    }\n  }\n}\n\nfunction unitStateView(key: typeof EffectActivationState.InSquad, state: ValueOf<ActivationSquadState, typeof EffectActivationState.InSquad> | ReadonlyArray<UnitNumber>, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.NotInSquad, state: ValueOf<ActivationSquadState, typeof EffectActivationState.NotInSquad> | 41, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.Unit, state: typeof UnitAlias.SteelLine | typeof UnitType.Flying, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(\n  key: typeof EffectActivationState['InSquad' | 'NotInSquad' | 'Unit' | 'NumOfUnitsLessThanEnemies'],\n  state:\n    UnitNumber |\n    ReadonlyArray<UnitNumber> |\n    UnitAliasAndRole<typeof UnitAlias['SteelLine' | 'AACannonier'], typeof UnitRole.Supporter> |\n    UnitAliasAndRole<typeof UnitAlias['MongooseTeam'], typeof UnitRole.Defender> |\n    UnitAliasAndRole<typeof UnitAlias.Strikers, typeof UnitRole.Attacker> |\n    typeof UnitAlias[\n      'ElectricActive' |\n      'SteelLine' |\n      'SteelLineOfficerRanks' |\n      'SteelLineExcludingOfficerRanks' |\n      'Horizon' |\n      'Kunoichi' |\n      'DEntertainment' |\n      'KouheiChurch' |\n      'EmpressHound' |\n      'Mermaid'\n    ] |\n    typeof SkillAreaType.CrossAdjacent |\n    UnitType |\n    UnitRole |\n    ArmoredBulgasari |\n    DefenderAndArmoredBulgasari |\n    'golden_factory' |\n    { equipment: 'hot_pack', effect: typeof Effect.MinimumIceResistUp } |\n    { [EffectActivationState.Tagged]: 'younger_sister' | 'reinforced_exoskeleton' } |\n    { [EffectActivationState.AffectedBy]: { unit: 83, effect: typeof Effect.TargetProtect } },\n  selfUnitNumber: UnitNumber,\n  t: TFunction\n): Exclude<ReactNode, undefined> {\n  function unitName(unit: UnitNumber): string {\n    return t('effect:with_quotes', { value: t('unit:display', { number: unit }) });\n  }\n\n  if (typeof state === 'number') {\n    return (\n      <span>{t(`effect:condition.state.${key}`, { unit: unitName(state) })}</span>\n    );\n  } else if (isReadonlyArray(state)) {\n    let unit;\n    if (isDefenderAndArmoredBulgasari(state)) {\n      unit = `${t(`effect:unit.${state[0]}`)}${t('effect:unit_separator')}${t(`effect:unit.${state[1]}`)}`;\n    } else {\n      const separator =\n        key === EffectActivationState.NotInSquad ?\n          t('effect:and_separator') :\n          t('effect:unit_separator');\n      unit = state.map(u => unitName(u)).join(separator);\n    }\n    return (<span>{t(`effect:condition.state.${key}`, { unit })}</span>);\n  } else if (typeof state === 'string') {\n    // TODO: Move excepting logic from view.\n    const isSquadCond = key === EffectActivationState.InSquad || key === EffectActivationState.NotInSquad;\n    if (isUnitAlias(state)) {\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && unitNumbersForAlias[state].has(selfUnitNumber),\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <UnitAliasView unitAlias={state} exceptUnit={isSquadCond ? selfUnitNumber : undefined} />\n          <span>{t(`effect:condition.state.${key}`, { unit: '' })}</span>\n        </React.Fragment>\n      );\n    } else {\n      const isTypeOrRole = state !== 'cross_adjacent' && state !== 'golden_factory';\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && isTypeOrRole,\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <span>{t(`effect:condition.state.${key}`, { unit: t(`effect:unit.${state}`) })}</span>\n        </React.Fragment>\n      );\n    }\n  } else if ('alias' in state) {\n    return (\n      <React.Fragment>\n        <UnitAliasView unitAlias={state.alias} />\n        {t('effect:of_preposition')}\n        {t(`effect:unit.${state.role}`)}\n        {t(`effect:condition.state.${key}`, { unit: '' })}\n      </React.Fragment>\n    );\n  } else if ('equipment' in state) {\n    return (<span>{t('effect:condition.state.affected_equipment_effect_by', state)}</span>);\n  } else {\n    // only in_squad conditions.\n    // TODO: Move this logic from view.\n    if (EffectActivationState.Tagged in state) {\n      return (\n        <span>\n          {t('effect:condition.state.tagged', { tag: state.tagged })}\n          {t('effect:condition.state.in_squad', { unit: t('effect:unit.ally') })}\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          {t('effect:condition.state.affected_effect_by', state.affected_by)}\n          {t('effect:condition.state.in_squad', { unit: t('effect:unit.ally') })}\n        </span>\n      );\n    }\n  }\n}\n\nconst SelfAndTargetStateView: React.FC<{\n  state: ReadonlyArray<ActivationSelfState>,\n  unitNumber: UnitNumber\n} | {\n  state: ReadonlyArray<ActivationTargetState>,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { state, unitNumber } = props;\n\n  return (\n    <React.Fragment>\n      {\n        'target' in props ?\n          (<React.Fragment>\n            <SkillEffectTargetView target={props.target} selfUnitNumber={unitNumber} />\n            {t('effect:case_particle')}\n          </React.Fragment>) :\n          t('effect:condition.target.self')\n      }\n      {state.map((v, i: number) => {\n        return (\n          <React.Fragment key={JSON.stringify(v)}>\n            {typedEntries(v).map((entry, i, entries) => (\n              <React.Fragment key={entry[0]}>\n                {stateValuesView(entry, unitNumber, t)}\n                {ifTruthy(needSeparator(entries, i), (<span>{t('effect:and_symbolic_separator')}</span>))}\n              </React.Fragment>\n            ))}\n            {ifTruthy(needSeparator(state, i), (<span>{t('effect:or_symbolic_separator')}</span>))}\n          </React.Fragment>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\ntype NumOfCrossAdjacent = Extract<NumOfUnitsInSquadState['num_of_units'], { unit: typeof SkillAreaType.CrossAdjacent }>\n\nfunction isNumOfCrossAdjacent(\n  arg: NumOfUnitsInSquadState['num_of_units']\n): arg is NumOfCrossAdjacent {\n  return arg.unit === SkillAreaType.CrossAdjacent;\n}\n\ntype NumOfDefenderAndArmoredBulgasari = Extract<NumOfUnitsInSquadState['num_of_units'], { unit: DefenderAndArmoredBulgasari }>\n\nfunction isNumOfDefenderAndArmoredBulgasari(\n  arg: NumOfUnitsInSquadState['num_of_units']\n): arg is NumOfDefenderAndArmoredBulgasari {\n  return isDefenderAndArmoredBulgasari(arg.unit);\n}\n\nconst SquadStateView: React.FC<{\n  state: ValueOf<SkillEffectActivationState, 'squad'>,\n  unitNumber: UnitNumber\n}> = ({ state, unitNumber }) => {\n  const { t } = useTranslation();\n\n  const numOfCrossAdjacent = (state: NumOfCrossAdjacent): string => {\n    return 'equal' in state ?\n      t('effect:condition.state.cross_adjacent_eq', state) :\n      'less_or_equal' in state ?\n        t('effect:condition.state.cross_adjacent', state) :\n        t('effect:condition.state.cross_adjacent_ge', state);\n  };\n  const numOfDefenderAndArmoredBulgasari = (state: NumOfDefenderAndArmoredBulgasari): string => {\n    return t('effect:condition.state.num_of_defender_armored_bulgasari', state);\n  };\n\n  if (isReadonlyArray(state)) {\n    return (\n      <React.Fragment>\n        {t('effect:condition.target.squad')}\n        {\n          isUnitsInSquadCondition(state) ?\n            unitStateView(EffectActivationState.InSquad, state.map(s => s.in_squad), unitNumber, t) :\n            (<React.Fragment>\n              {unitStateView(EffectActivationState.NotInSquad, state[0].not_in_squad, unitNumber, t)}\n              <span>{t('effect:or_symbolic_separator')}</span>\n              {unitStateView(EffectActivationState.InSquad, state[1].in_squad, unitNumber, t)}\n            </React.Fragment>)\n        }\n      </React.Fragment>\n    );\n  } else {\n    return EffectActivationState.NumOfUnitsLessThanEnemies in state ?\n      (<span>{t(`effect:condition.state.${EffectActivationState.NumOfUnitsLessThanEnemies}`)}</span>) :\n      (<React.Fragment>\n        {t('effect:condition.target.squad')}\n        {\n          typedEntries(state).map((entry, i, array) => {\n            const Separator = () => (\n              <React.Fragment>{ifTruthy(needSeparator(array, i), t('effect:and_symbolic_separator'))}</React.Fragment>\n            );\n\n            switch (entry[0]) {\n            case EffectActivationState.InSquad:\n              return (\n                <React.Fragment key={entry[0]}>\n                  {unitStateView(EffectActivationState.InSquad, entry[1], unitNumber, t)}\n                  <Separator />\n                </React.Fragment>\n              );\n            case EffectActivationState.NotInSquad:\n              return (\n                <React.Fragment key={entry[0]}>\n                  {unitStateView(EffectActivationState.NotInSquad, entry[1], unitNumber, t)}\n                  <Separator />\n                </React.Fragment>\n              );\n            case EffectActivationState.NumOfUnits: {\n              const squadState = entry[1];\n              return (\n                <React.Fragment key={entry[0]}>\n                  {\n                    isNumOfCrossAdjacent(squadState) ?\n                      numOfCrossAdjacent(squadState) :\n                      isNumOfDefenderAndArmoredBulgasari(squadState) ?\n                        numOfDefenderAndArmoredBulgasari(squadState) :\n                        'equal' in squadState ?\n                          t('effect:condition.state.num_of_units_eq', squadState) :\n                          'greater_or_equal' in squadState ?\n                            t('effect:condition.state.num_of_units_ge', squadState as StringMap) :\n                            t('effect:condition.state.num_of_units_le', squadState as StringMap)\n                  }\n                  <Separator />\n                </React.Fragment>\n              );\n            }\n            default: {\n              const _exhaustiveCheck: never = entry;\n              return _exhaustiveCheck;\n            }\n            }\n          })\n        }\n      </React.Fragment>);\n  }\n};\n\nconst EnemyStateView: React.FC<{\n  state: ActivationEnemyState\n}> = ({ state }) => {\n  const { t } = useTranslation();\n  const { num_of_units } = state;\n\n  return (\n    <React.Fragment>\n      {\n        'unit' in num_of_units ?\n          t('effect:condition.target.enemy_unit', num_of_units) :\n          t('effect:condition.target.enemy')\n      }\n      {\n        'equal' in num_of_units ?\n          t('effect:condition.state.num_of_enemies_eq', num_of_units) :\n          'less_or_equal' in num_of_units ?\n            t('effect:condition.state.num_of_enemies', num_of_units as StringMap) :\n            t('effect:condition.state.num_of_enemies_ge', num_of_units as StringMap)\n      }\n    </React.Fragment>\n  );\n};\n\nconst TriggerView: React.FC<{\n  condition: SkillEffectActivationCondition,\n  unitNumber: UnitNumber\n}> = ({ condition, unitNumber }) => {\n  const { t } = useTranslation();\n\n  if (!('trigger' in condition)) {\n    return null;\n  }\n\n  switch (condition.trigger) {\n  case EffectTrigger.StartRound:\n    return (\n      <React.Fragment>\n        {\n          condition.round ?\n            typeof condition.round === 'string' ?\n              t(`effect:condition.trigger.start_${condition.round}_round`) :\n              'at' in condition.round ?\n                t('effect:condition.trigger.round.at', { round: condition.round.at }) :\n                'from' in condition.round ?\n                  t('effect:condition.trigger.round.from', { round: condition.round.from }) :\n                  t('effect:condition.trigger.round.until', { round: condition.round.until }) :\n            t('effect:condition.trigger.start_round')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.UseActive1:\n  case EffectTrigger.UseActive2:\n  case EffectTrigger.HitActive1:\n  case EffectTrigger.HitActive2:\n    return (\n      <React.Fragment>\n        {\n          [\n            ...('round' in condition ? [t(`effect:condition.trigger.round.${condition.round}`)] : []),\n            t(`effect:condition.trigger.${condition.trigger}`, { unit: unitNumber })\n          ].join('')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.SeizeOpportunity:\n    return (\n      <React.Fragment>\n        {\n          [...unitNumbersForAlias[UnitAlias.NotApplicableForSeizeOpportunity]].map(number =>\n            t('effect:with_quotes', { value: t('unit:display', { number }) })\n          ).join(t('effect:unit_separator'))\n        }\n        {t('effect:except_preposition')}\n        <UnitAliasView unitAlias={UnitAlias.ApplicableForSeizeOpportunity} />\n        {t('effect:case_particle')}\n        {t(`effect:condition.trigger.${condition.trigger}`)}\n      </React.Fragment>\n    );\n  default:\n    return (<React.Fragment>{t(`effect:condition.trigger.${condition.trigger}`)}</React.Fragment>);\n  }\n};\n\nconst ConditionStateView: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { unitNumber } = props;\n\n  if (!('state' in props.condition)) {\n    return null;\n  }\n\n  const Separator = ({ show }: { show: boolean }) => (\n    <React.Fragment>{ifTruthy(show, t('effect:and_symbolic_separator'))}</React.Fragment>\n  );\n  const NotTargetStateView = ({ entry, unitNumber, needSeparator }: {\n    entry: Entry<SelfSkillEffectActivationState>,\n    unitNumber: UnitNumber,\n    needSeparator: boolean\n  }) => {\n    const [key, value] = entry;\n    if (key === 'self') {\n      return (\n        <React.Fragment key={key}>\n          <SelfAndTargetStateView state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else if (key === 'squad') {\n      return (\n        <React.Fragment key={key}>\n          <SquadStateView key={key} state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment key={key}>\n          <EnemyStateView state={value}/>\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {'target' in props ?\n        typedEntries(props.condition.state).map((entry, i, array) =>\n          entry[0] === 'target' ?\n            (\n              <React.Fragment key={entry[0]}>\n                <SelfAndTargetStateView state={entry[1]} target={props.target} unitNumber={unitNumber} />\n                <Separator show={needSeparator(array, i)} />\n              </React.Fragment>\n            ) :\n            entry[0] === 'squad' ?\n              (\n                <React.Fragment key={entry[0]}>\n                  <SquadStateView state={entry[1]} unitNumber={unitNumber} />\n                  <Separator show={needSeparator(array, i)} />\n                </React.Fragment>\n              ) :\n              (<NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />)\n        ) :\n        typedEntries(props.condition.state).map((entry, i, array) => (\n          <NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />\n        ))\n      }\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst ConditionRow: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { condition, unitNumber } = props;\n  const needSeparator = 'trigger' in condition && 'state' in condition;\n\n  return (\n    <span>\n      <TriggerView condition={condition} unitNumber={unitNumber} />\n      {ifTruthy(needSeparator, t('effect:separator'))}\n      {'target' in props ?\n        <ConditionStateView condition={props.condition} target={props.target} unitNumber={unitNumber} /> :\n        <ConditionStateView condition={props.condition} unitNumber={unitNumber} />}\n    </span>\n  );\n};\n\nconst EnemyCondition: React.FC<{\n  target: NonNullable<SkillEffectConditionViewModel['enemyTargetConditions']>\n}> = ({ target }) => {\n  const { t } = useTranslation();\n  const unit = target.conditions.map(cond => t(`effect:unit.${cond}`)).join(t('effect:unit_separator'));\n\n  return (\n    <React.Fragment>\n      {t('effect:effect.target.kind.enemy')}\n      {t('effect:case_particle')}\n      {t('effect:condition.state.unit', { unit })}\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst EffectiveView: React.FC<{ effective: PassiveSkillEffective | undefined }> = ({ effective }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(effective, v => (<span>{t(`effect:effective.${v}`)}</span>));\n};\n\nconst EffectScaleFactorView: React.FC<{\n  scaleFactor: SkillEffectScaleFactor | undefined,\n  unitNumber: UnitNumber\n}> = ({ scaleFactor, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(\n    scaleFactor,\n    v => {\n      if ('per_stack' in v) {\n        const key = 'effect' in v.per_stack ?\n          'effect:scale_factor.per_stack_effect' :\n          'effect:scale_factor.per_stack';\n        return (<span>{t(key, v.per_stack)}</span>);\n      } else  {\n        switch (v.per_units.type) {\n        case 'all':\n          return (<span>{t('effect:scale_factor.per_units')}</span>);\n        case 'squad': {\n          const { unit = 'ally', except } = v.per_units;\n          const exceptSelf = !!except;\n          return (\n            <React.Fragment>\n              {ifTruthy(exceptSelf, (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>))}\n              {\n                isReadonlyArray(unit) ?\n                  (<React.Fragment>\n                    <UnitAliasView unitAlias={unit[0]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                    <span>&nbsp;{t('effect:unit_separator')}&nbsp;</span>\n                    <UnitAliasView unitAlias={unit[1]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                  </React.Fragment>) :\n                  isUnitAlias(unit) ?\n                    (<UnitAliasView unitAlias={unit} exceptUnit={exceptSelf ? unitNumber : undefined} />) :\n                    (<span>{t(`effect:unit.${unit}`)}</span>)\n              }\n              <span>{t('effect:scale_factor.num_of_allies')}</span>\n            </React.Fragment>\n          );\n        }\n        case 'enemy':\n          return (\n            <span>\n              {t('effect:unit.enemy')}\n              {ifNonNullable(v.per_units.unit, unit => t(`effect:unit.${unit}`))}\n              {t(`effect:scale_factor.${v.per_units.variation}`)}\n            </span>\n          );\n        }\n      }\n    }\n  );\n};\n\nconst EffectTargetsView: React.FC<{\n  targets: SkillEffectConditionViewModel['effectTargets'],\n  unitNumber: UnitNumber\n}> = ({ targets, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span>\n      {ifTruthy('self' in targets, t('effect:effect.target.self'))}\n      {ifTruthy('self' in targets && 'target' in targets, t('effect:and_separator'))}\n      {\n        'target' in targets ?\n          'kind' in targets ?\n            <SkillEffectTargetView target={targets} selfUnitNumber={unitNumber} /> :\n            t('effect:effect.target.target') :\n          null\n      }\n      {ifTruthy('around' in targets, t('effect:effect.target.around'))}\n      {t('effect:to_preposition')}\n    </span>\n  );\n};\n\nconst SkillEffectConditionView: React.FC<{\n  effect: SkillEffect,\n  unitNumber: UnitNumber\n}> = ({ effect, unitNumber }) => {\n  const { t } = useTranslation();\n  const model = new SkillEffectConditionViewModel(effect);\n\n  const OrConjunction = () => (<div css={{ fontSize: '0.7em' }}>{t('effect:or_conjunction')}</div>);\n  const Conditions = () => {\n    if (isTargetSkillEffect(effect)) {\n      const conditions =\n        effect.conditions ?\n          effect.conditions.length === 1 ?\n            (<ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={effect.conditions[1]} target={effect.target} unitNumber={unitNumber} />\n              </React.Fragment>\n            ) :\n          null;\n      return (\n        <React.Fragment>\n          {conditions}\n          {ifNonNullable(model.enemyTargetConditions, enemyTarget => (\n            <React.Fragment>\n              {ifTruthy(!!conditions, t('effect:separator'))}\n              <EnemyCondition target={enemyTarget} />\n            </React.Fragment>\n          ))}\n        </React.Fragment>\n      );\n    } else {\n      return ifNonNullable(\n        effect.conditions,\n        conds =>\n          conds.length === 1 ?\n            (<ConditionRow condition={conds[0]} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={conds[0]} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={conds[1]} unitNumber={unitNumber} />\n              </React.Fragment>\n            )\n      );\n    }\n  };\n  const Additional = ({ children }: { children: ReactNode }) => {\n    return (\n      model.hasAnyConditions ?\n        model.hasMultipleConditions ?\n          (<div css={{ marginTop: 5 }}>{children}</div>) :\n          (<span>{t('effect:separator')}{children}</span>) :\n        (<span>{children}</span>)\n    );\n  };\n\n  return (\n    <div>\n      <Conditions />\n      <Additional>\n        <EffectiveView effective={model.effective} />\n        <EffectScaleFactorView scaleFactor={model.scaleFactor} unitNumber={unitNumber} />\n        <EffectTargetsView targets={model.effectTargets} unitNumber={unitNumber} />\n        {t('effect:below_effects')}\n      </Additional>\n    </div>\n  );\n};\n\nexport default SkillEffectConditionView;\n","import { TFunction } from 'i18next';\n\nimport { AroundSkillEffectValue, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { Effect } from '../../domain/Effect';\nimport {\n  calcMicroValue,\n  calcMilliPercentageValue,\n  calcMilliValue,\n  MilliPercentageValue\n} from '../../domain/ValueUnit';\nimport { isFormChangeUnitNumber, UnitForms } from '../../domain/UnitFormValue';\n\nimport { Entry } from '../../util/object';\nimport { notFalsy } from '../../util/type';\n\nexport type SkillEffectDetailsEntry =\n  Entry<SkillEffectValue> |\n  Entry<AroundSkillEffectValue>\n\ntype SkillEffectDetailsProps = { tag?: string, detail: string, term?: string }\n\nfunction getDetail(body: string, value: SkillEffectDetailsEntry[1], t: TFunction): string {\n  const rate = 'rate' in value && value.rate ?\n    typeof value.rate === 'string' ?\n      `${t(`effect:rate.${value.rate}`)}${t('effect:separator')}` :\n      `${t('effect:rate.percentage', { value: calcMilliPercentageValue(value.rate) })}${t('effect:separator')}` :\n    '';\n  const additions = [\n    'times' in value && value.times ?\n      t('effect:times', { count: value.times }) : undefined,\n    'max_stack' in value && typeof value.max_stack === 'number' ?\n      value.max_stack === 1 ?\n        t('effect:does_not_stack') :\n        t('effect:max_stack', { count: value.max_stack }) :\n      undefined,\n    'cannot_be_dispelled' in value && value.cannot_be_dispelled ?\n      t('effect:cannot_be_dispelled') : undefined\n  ].filter(notFalsy)\n    .join(t('effect:separator'));\n\n  return `${rate}${body}${additions ? ` (${additions})` : '' }`;\n}\n\nfunction getTerm(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'term' in value ?\n    typeof value.term === 'string' ?\n      t(`effect:term.${value.term}`) :\n      value.term && t('effect:term.for_rounds', { value: value.term.for_rounds }) :\n    undefined;\n}\n\nfunction getTag(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'tag' in value ?\n    value.tag && t('effect:tag.format', { tag: value.tag }) :\n    undefined;\n}\n\nfunction translateMilliPercentageDetail(\n  effect: string,\n  value: SkillEffectDetailsEntry[1] & MilliPercentageValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    tag: getTag(value, t),\n    detail: getDetail(t(`effect:effect.description.${effect}`, { value: calcMilliPercentageValue(value) }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\ntype TagStackEffectValue = NonNullable<SkillEffectValue[typeof Effect.TagStack]>\n\nfunction translateTagStackDetail(\n  key: typeof Effect['TagStack' | 'TagRelease'],\n  value: TagStackEffectValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    detail: getDetail(t(`effect:effect.description.${key}`, { tag: value.tag }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\nfunction translateEffectNames(value: { effect: Effect } | { effects: ReadonlyArray<Effect> }, t: TFunction): string {\n  return 'effect' in value ?\n    t(`effect:effect.name.${value.effect}`) :\n    value.effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:separator'));\n}\n\nexport function translateSkillEffectDetails(\n  entry: SkillEffectDetailsEntry,\n  t: TFunction\n): SkillEffectDetailsProps | ReadonlyArray<SkillEffectDetailsProps>{\n  const term = getTerm(entry[1], t);\n\n  switch (entry[0]) {\n  case Effect.ActionCountUp:\n  case Effect.ActionCountDown:\n  case Effect.MinimizeDamage:\n  case Effect.NullifyDamage:\n  case Effect.AllBuffBlocking:\n  case Effect.AllBuffRemoval:\n  case Effect.AllDebuffRemoval:\n  case Effect.ColumnProtect:\n  case Effect.RowProtect:\n  case Effect.TargetProtect:\n  case Effect.ReAttack:\n  case Effect.FollowUpAttack:\n  case Effect.IgnoreBarrierDr:\n  case Effect.IgnoreProtect:\n  case Effect.IgnoreProtectDeactivate:\n  case Effect.Reconnaissance:\n  case Effect.Marked:\n  case Effect.Provoked:\n  case Effect.Immovable:\n  case Effect.Silenced:\n  case Effect.Stunned:\n  case Effect.RefundAp:\n  case Effect.AttackHit:\n  case Effect.AttackCritical:\n  case Effect.IgnoreDef:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`), entry[1], t),\n      term\n    };\n  case Effect.AMG11Construction:\n  case Effect.DeployRabbitDField:\n  case Effect.SummonHologramTiger:\n  case Effect.GoldenFactoryConstruction:\n    return {\n      tag: getTag(entry[1], t),\n      detail: t(`effect:effect.description.${entry[0]}`, { times: entry[1].times }),\n      term\n    };\n  case Effect.CooperativeAttack: {\n    const { unit, active } = entry[1];\n    return {\n      tag: getTag(entry[1], t),\n      detail:\n        isFormChangeUnitNumber(unit) ?\n          t('effect:effect.description.cooperative_attack_form_active', { unit, no: active, form: UnitForms[unit].default }) :\n          t('effect:effect.description.cooperative_attack', { unit, no: active }),\n      term\n    };\n  }\n  case Effect.Push:\n  case Effect.Pull:\n  case Effect.RangeUp:\n  case Effect.RangeDown:\n  case Effect.RangeUpActive2:\n  case Effect.FixedDamageOverTime:\n  case Effect.FixedFireDamageOverTime:\n  case Effect.FixedIceDamageOverTime:\n  case Effect.FixedElectricDamageOverTime:\n  case Effect.MinimizeDamageLessThanValue:\n  case Effect.Barrier:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BattleContinuation: {\n    const body = 'value' in entry[1] ?\n      t('effect:effect.description.battle_continuation', { value: entry[1].value }) :\n      t('effect:effect.description.battle_continuation_with_hp_rate', { value: calcMilliPercentageValue(entry[1]) });\n\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(body, entry[1], t),\n      term\n    };\n  }\n  case Effect.AtkValueUp:\n  case Effect.DefValueUp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMilliValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ApUp:\n  case Effect.ApDown:\n  case Effect.SetAp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMicroValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BuffRemoval:\n  case Effect.DebuffRemoval:\n  case Effect.EffectRemoval: {\n    const effects = translateEffectNames(entry[1], t);\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t(`effect:effect.description.tagged_${entry[0]}`, { tag: entry[1].tag, effects }) :\n          t(`effect:effect.description.${entry[0]}`, { effects }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.PreventsEffect:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { effects: translateEffectNames(entry[1], t) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ActivationRatePercentageUp: {\n    const value  = calcMilliPercentageValue(entry[1]);\n    const effect = entry[1].effect;\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t('effect:effect.description.tagged_activation_rate_percentage_up', { tag: entry[1].tag, effect, value }) :\n          t('effect:effect.description.activation_rate_percentage_up', { effect, value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.AbsolutelyActivated:\n    return {\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, entry[1]), entry[1], t),\n      term\n    };\n  case Effect.FormChange:\n  case Effect.FormRelease:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, { form: entry[1].form }), entry[1], t),\n      term\n    };\n  case Effect.TagStack:\n  case Effect.TagRelease:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateTagStackDetail(entry[0], v, t)) :\n      translateTagStackDetail(entry[0], entry[1], t);\n  case Effect.TagUnstack:\n    return {\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { tag: entry[1].tag, value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierUpByStatus:\n  case Effect.DamageMultiplierReductionByStatus:\n  case Effect.CriReductionByStatus:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { status: entry[1].status, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.AtkValueUpByUnitValue:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { unit: entry[1].unit, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierDown:\n  case Effect.DefDown:\n  case Effect.AccDown:\n  case Effect.CriDown:\n  case Effect.EvaUp:\n  case Effect.StatusResistUp:\n  case Effect.DamageReductionUp:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateMilliPercentageDetail(entry[0], v, t)) :\n      translateMilliPercentageDetail(entry[0], entry[1], t);\n  default: {\n    return translateMilliPercentageDetail(entry[0], entry[1], t);\n  }\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge } from 'react-bootstrap';\nimport { SkillEffectDetailsEntry, translateSkillEffectDetails } from './SkillEffectsTranslator';\n\nimport { AroundSkillEffectValue, SkillEffect, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\n\nimport { ifNonNullable } from '../../util/react';\nimport { typedEntries } from '../../util/object';\nimport { Keyof } from '../../util/type';\n\nconst EffectDetailRow: React.FC<{\n  tag?: string,\n  detail: string,\n  term?: string\n}> = ({ tag, detail, term }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        fontWeight: 'bold',\n        borderRadius: 3,\n        backgroundColor: '#1c3042',\n        padding: '3px 8px',\n        marginTop: 5\n      }}\n    >\n      <div>\n        {ifNonNullable(tag, v => (<span>{v}{t('effect:tag_separator')}</span>))}\n        <span>{detail}</span>\n      </div>\n      <div\n        css={{\n          marginLeft: 'auto',\n          textAlign: 'right',\n          flexShrink: 0\n        }}>\n        {ifNonNullable(term, v => (<span css={{ marginLeft: 10, color: '#aaa', fontSize: '0.9em' }}>{v}</span>))}\n      </div>\n    </div>\n  );\n};\n\nconst EffectDetail: React.FC<{\n  entry: SkillEffectDetailsEntry\n}> = ({ entry }) => {\n  const { t } = useTranslation();\n  const details = translateSkillEffectDetails(entry, t);\n\n  return 'length' in details ?\n    (<React.Fragment>\n      {details.map(detail => (<EffectDetailRow key={JSON.stringify(detail)} {...detail} />))}\n    </React.Fragment>) :\n    (<EffectDetailRow {...details} />);\n};\n\nconst SkillEffectDetailsView: React.FC<{\n  className?: string,\n  target: Keyof<SkillEffect['details']>,\n  details: NonNullable<SkillEffectValue | AroundSkillEffectValue>,\n  area: SkillAreaType\n}> = ({ className, target, details, area }) => {\n  const { t } = useTranslation();\n  const targetKey =\n    target === 'target' ?\n      area === 'single' ? 'single' : 'area' :\n      target;\n\n  return (\n    <div className={className}>\n      <div><Badge variant=\"light\">{t(`effect:effect.target.${targetKey}`)}</Badge></div>\n      {typedEntries(details).map(entry => (<EffectDetail key={entry[0]} entry={entry} />))}\n    </div>\n  );\n};\n\nexport default SkillEffectDetailsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\n\nimport SkillEffectConditionView from './SkillEffectConditionView';\nimport SkillEffectDetailsView from './SkillEffectDetailsView';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo, UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { useSkillEffects } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectView: React.FC<{ effect: SkillEffect, unitNumber: UnitNumber, area: SkillAreaType }> = ({ effect, unitNumber, area }) => {\n  const self   = 'self'   in effect.details ? effect.details.self   : undefined;\n  const target = 'target' in effect.details ? effect.details.target : undefined;\n  const around = 'around' in effect.details ? effect.details.around : undefined;\n\n  return (\n    <div\n      css={{\n        border: '1px solid rgba(255, 255, 255, 0.3)',\n        borderRadius: 5,\n        marginTop: 10,\n        padding: 5,\n        '& > .skill-effect-details': {\n          marginTop: 10\n        }\n      }}\n    >\n      <SkillEffectConditionView effect={effect} unitNumber={unitNumber} />\n      {ifNonNullable(self  , v => (<SkillEffectDetailsView className='skill-effect-details' target='self' details={v} area={area} />))}\n      {ifNonNullable(target, v => (<SkillEffectDetailsView className='skill-effect-details' target='target' details={v} area={area} />))}\n      {ifNonNullable(around, v => (<SkillEffectDetailsView className='skill-effect-details' target='around' details={v} area={area} />))}\n    </div>\n  );\n};\n\nconst SkillEffectsView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const values = useSkillEffects(skillType, unit);\n\n  return (\n    ifNonNullable(\n      values,\n      ([effects, area, unitNumber]) => (\n        <div css={{ color: '#ccc', fontSize: '0.8em' }}>\n          {effects.map(effect => (<SkillEffectView key={JSON.stringify(effect)} effect={effect} unitNumber={unitNumber} area={area} />))}\n        </div>\n      )\n    )\n  );\n};\n\nexport default SkillEffectsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { CSSPropertiesWithMultiValues } from '@emotion/serialize/dist/declarations/types';\nimport { Interpolation } from '@emotion/serialize';\nimport React, { ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport AreaOfEffectGrid from './AreaOfEffectGrid';\nimport { Badge, Col, Container, Row, Tab } from 'react-bootstrap';\nimport DamageDealView from './DamageDealView';\nimport EffectsAsEquipmentDescriptionView from './EffectsAsEquipmentDescriptionView';\nimport NumberValueDropdown from '../common/NumberValueDropdown';\nimport SkillEffectsView from './SkillEffectsView';\n\nimport { SkillLv } from '../../domain/skill/UnitSkillLvValue';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport {\n  useFormChangeSkillBadge,\n  useRankUpSkillBadge,\n  useSkillCost,\n  useSkillLvState,\n  useSkillName,\n  useSkillRange\n} from '../../state/skill/UnitSkillHook';\nimport { useSelectedUnit } from '../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable, ifTruthy } from '../../util/react';\n\nimport './RankUpSkillBadge.css';\n\nconst skillLabelFontStyle: CSSPropertiesWithMultiValues = {\n  fontSize: '1.2em',\n  color: '#ccc'\n};\nconst skillValueFontSizeStyle: CSSPropertiesWithMultiValues = {\n  fontSize: '1.2em',\n  fontWeight: 'bold'\n};\nconst skillLabelStyle: CSSPropertiesWithMultiValues = {\n  ...skillLabelFontStyle,\n  display: 'inline-block',\n  width: '4em'\n};\nconst skillBadgeStyle = {\n  ...{\n    fontSize: '1.2em',\n  } as const satisfies CSSPropertiesWithMultiValues,\n  '& > .badge': {\n    whiteSpace: 'normal'\n  } as const satisfies CSSPropertiesWithMultiValues\n};\n\nconst NestedContainer: React.FC<{ css?: Interpolation<Theme>, children: ReactNode }> = ({ children, ...rest }) => (\n  <Container\n    {...rest}\n    fluid\n    css={{ padding: 0 }}\n  >\n    {children}\n  </Container>\n);\n\nconst SkillNameView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const name = useSkillName(skillType, unit);\n\n  return (\n    <div\n      css={{\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n      }}\n      title={name}\n    >\n      {name}\n    </div>\n  );\n};\n\nconst SkillCostView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const cost = useSkillCost(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#0af' }}>{cost}</span>);\n};\n\nconst SkillRangeView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const range = useSkillRange(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#cc0' }}>{range}</span>);\n};\n\nconst RankUpSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const isRankUpSkill = useRankUpSkillBadge(skillType, unit);\n\n  return (\n    ifTruthy(\n      isRankUpSkill,\n      (<div css={skillBadgeStyle}><Badge variant=\"rank-up-skill\">{t('skill.rank_up')}</Badge></div>)\n    )\n  );\n};\n\nconst FormChangeSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const form = useFormChangeSkillBadge(skillType, unit);\n\n  return (\n    ifNonNullable(\n      form,\n      v => (<div css={skillBadgeStyle}><Badge variant=\"secondary\">{t(`effect:form.${v}`)}</Badge></div>)\n    )\n  );\n};\n\nconst skillLvItems = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] as const satisfies ReadonlyArray<SkillLv>;\n\nconst SkillLvDropdown: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const [skillLv, setSkillLv] = useSkillLvState(skillType, unit);\n\n  return (\n    <div css={{\n      display: 'flex',\n      userSelect: 'none',\n      '& > .dropdown.numeric': {\n        flexShrink: 0,\n        width: 70\n      }\n    }}>\n      <span css={{ marginRight: 5 }}>{t('lv')}</span>\n      <NumberValueDropdown\n        id=\"skill-lv-dropdown\"\n        items={skillLvItems}\n        value={skillLv}\n        onChange={setSkillLv}\n      />\n    </div>\n  );\n};\n\nconst SkillPane: React.FC<{ eventKey: SkillType }> = ({ eventKey }) => {\n  const { t } = useTranslation();\n  const selectedUnit = useSelectedUnit();\n\n  return (\n    <Tab.Pane eventKey={eventKey}>\n      {ifNonNullable(\n        selectedUnit,\n        unit => (\n          <Container\n            fluid\n            css={{ paddingTop: 5 }}\n          >\n            <Row css={{ fontSize: '1.4em', color: '#eee' }}>\n              <Col xs={8} sm={9}>\n                <SkillNameView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={4} sm={3}>\n                <SkillLvDropdown skillType={eventKey} unit={unit} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={{ order: 'last', span: 12 }} sm={{ order: 'first', span: 9 }}>\n                <DamageDealView skillType={eventKey} unit={unit} />\n                <EffectsAsEquipmentDescriptionView skillType={eventKey} unit={unit} />\n                <SkillEffectsView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={{ order: 'first', span: 12 }} sm={{ order: 'last', span: 3 }}>\n                <NestedContainer css={{ userSelect: 'none' }}>\n                  <Row>\n                    <Col xs={8} sm={12}>\n                      <NestedContainer>\n                        <Row css={{ '& > div': { marginTop: 5 } }}>\n                          <Col xs={{ order: 1, span: 12 }} sm={{ order: 2, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.ap')}</span>\n                            <SkillCostView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 2, span: 12 }} sm={{ order: 3, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.range')}</span>\n                            <SkillRangeView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 3, span: 12 }} sm={{ order: 1, span: 12 }}>\n                            <FormChangeSkillBadge skillType={eventKey} unit={unit} />\n                            <RankUpSkillBadge skillType={eventKey} unit={unit} />\n                          </Col>\n                        </Row>\n                      </NestedContainer>\n                    </Col>\n                    <Col xs={4} sm={12} css={{ '& > div': { marginTop: 5 } }}>\n                      <div>\n                        <span css={{ color: '#ccc' }}>{t('skill.area')}</span>\n                      </div>\n                      <AreaOfEffectGrid css={{ width: 100 }} skillType={eventKey} unit={unit} />\n                    </Col>\n                  </Row>\n                </NestedContainer>\n              </Col>\n            </Row>\n          </Container>\n        )\n      )}\n    </Tab.Pane>\n  );\n};\n\nexport default SkillPane;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ArrowSync } from '../icon/FluentIcons';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport SVGButton from '../common/SVGButton';\n\nimport { useUnitForm } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst UnitFormSelector: React.FC = () => {\n  const { t } = useTranslation();\n  const [formChangeUnit, changeForm] = useUnitForm();\n\n  return ifNonNullable(\n    formChangeUnit,\n    unit => (\n      <div css={{ display: 'flex', alignItems: 'center', padding: '10px 8px' }}>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='tooltip-form-change'>{t('form_change')}</Tooltip>}\n        >\n          <SVGButton\n            aria-label=\"Change unit form\"\n            variant=\"secondary\"\n            svg={<ArrowSync />}\n            onClick={changeForm}\n          />\n        </OverlayTrigger>\n        <span css={{ color: '#eee', marginLeft: 10 }}>\n          {t(`effect:form.${unit.unitForm()}`)}\n        </span>\n      </div>\n    )\n  );\n};\n\nexport default UnitFormSelector;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { Interpolation } from '@emotion/serialize';\nimport React, { ReactNode } from 'react';\n\nimport {\n  ActiveSkillIcon,\n  DisableActiveSkillIcon,\n  DisablePassiveSkillIcon,\n  PassiveSkillIcon\n} from '../icon/SkillIcons';\nimport { Nav, Tab } from 'react-bootstrap';\nimport SkillPane from './SkillPane';\nimport UnitFormSelector from './UnitFormSelector';\n\nimport { SkillType } from '../../domain/skill/SkillType';\n\nimport {\n  useActive1SkillNav,\n  useActive2SkillNav,\n  usePassive1SkillNav,\n  usePassive2SkillNav,\n  usePassive3SkillNav\n} from '../../state/skill/UnitSkillHook';\nimport { useSkillTab } from '../../state/ui/UnitSkillTabState';\n\nimport './SkillNavTab.css';\n\nconst SkillNavItem: React.FC<{\n  eventKey: SkillType,\n  active: boolean,\n  disabled: boolean,\n  children: ReactNode\n}> = ({ eventKey, active, disabled, children }) => {\n  const className = eventKey.startsWith('active') ? 'active-skill' : 'passive-skill';\n\n  return (\n    <Nav.Item>\n      <Nav.Link className={className} eventKey={eventKey} active={active} disabled={disabled}>\n        <span\n          css={{\n            display: 'inline-block',\n            '@media (max-width: 480px)': { width: 32 },\n            '@media (min-width: 480px)': { width: 50 }\n          }}\n        >\n          {children}\n        </span>\n      </Nav.Link>\n    </Nav.Item>\n  );\n};\n\nconst Active1SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = useActive1SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<ActiveSkillIcon skillType={SkillType.Active1} />) : (<DisableActiveSkillIcon />)}\n      <span className=\"sr-only\">Active skill 1</span>\n    </SkillNavItem>\n  );\n};\n\nconst Active2SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = useActive2SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<ActiveSkillIcon skillType={SkillType.Active2} />) : (<DisableActiveSkillIcon />)}\n      <span className=\"sr-only\">Active skill 2</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive1SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive1SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive1} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 1</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive2SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive2SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive2} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 2</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive3SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive3SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive3} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 3</span>\n    </SkillNavItem>\n  );\n};\n\nconst UnitSkillList: React.FC<{ css?: Interpolation<Theme> }> = (props) => {\n  const [activeTab, setActiveTab] = useSkillTab();\n\n  return (\n    <div {...props}>\n      <UnitFormSelector />\n      <Tab.Container\n        id=\"unit-skill-viewer\"\n        activeKey={activeTab}\n        onSelect={eventKey => { setActiveTab(eventKey ?? undefined); }}\n      >\n        <Nav variant=\"tabs\" className={`skill ${activeTab ? activeTab.startsWith('active') ? 'active-skill' : 'passive-skill' : ''}`}>\n          <Active1SkillNavItem />\n          <Active2SkillNavItem />\n          <Passive1SkillNavItem />\n          <Passive2SkillNavItem />\n          <Passive3SkillNavItem />\n        </Nav>\n        <Tab.Content css={{ minHeight: 300 }}>\n          <SkillPane eventKey=\"active1\" />\n          <SkillPane eventKey=\"active2\" />\n          <SkillPane eventKey=\"passive1\" />\n          <SkillPane eventKey=\"passive2\" />\n          <SkillPane eventKey=\"passive3\" />\n        </Tab.Content>\n      </Tab.Container>\n    </div>\n  );\n};\n\nexport default UnitSkillList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"names":["cellColorStyle","_cellColorStyle","_defineProperty","AreaOfEffectCellType","overlayStyle","type","borderRadius","position","top","bottom","left","right","opacity","backgroundColor","AreaOfEffectCell","_ref","selected","rest","_objectWithoutProperties","_excluded","t","useTranslation","jsx","css","border","width","content","display","marginTop","inset","OverlayTrigger","_extends","placement","overlay","Tooltip","id","concat","_ref2","skillType","unit","_excluded2","cellType","useSkillArea","ifNonNullable","cell","borderCollapse","transform","select","area","color","Container","React","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","classNames","displayName","defaultProps","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","AttributeColorStyle","_AttributeColorStyle","DamageAttribute","useDamageDeal","_props","_slicedToArray","damage_deal","SkillAreaType","effective","margin","fontWeight","calcValue","attribute","show","useEffectsAsEquipmentDescription","ifTruthy","fontSize","cursor","textDecoration","unitAlias","exceptUnit","popover","Popover","_toConsumableArray","unitNumbersForAlias","filter","n","map","key","textAlign","number","target","selfUnitNumber","kind","conditions","cond","i","arr","separator","length","value","isUnitAlias","UnitAliasView","SkillEffectTargetKind","undefined","role","except","JSON","stringify","v","alias","not_alias","_effect","_classPrivateFieldLooseKey","SkillEffectConditionViewModel","effect","_classCallCheck","Object","defineProperty","writable","_classPrivateFieldLooseBase","this","_createClass","get","hasNoTargetCondition","every","state","hasNoTargetEffect","hasTargetSkillEffect","details","isTargetSkillEffectData","_classPrivateFieldLoo","enemyTargetConditions","_classPrivateFieldLoo2","_classPrivateFieldLoo3","scale_factor","hasSelfEffect","hasSelfSkillEffect","_classPrivateFieldLoo4","needNoDetails","some","assign","self","_objectSpread","around","needSeparator","array","index","stateValuesView","entry","unitNumber","EffectActivationState","rank","isReadonlyArray","effects","e","join","affectedByStateView","tag1","tag2","tag","isMultipleTag","options","tags","tagKey","form","equipment","equipments","grid","unitStateView","unitName","isDefenderAndArmoredBulgasari","u","isSquadCond","has","isTypeOrRole","tagged","affected_by","SelfAndTargetStateView","SkillEffectTargetView","typedEntries","entries","SquadStateView","isUnitsInSquadCondition","s","in_squad","not_in_squad","Separator","squadState","numOfCrossAdjacent","arg","isNumOfDefenderAndArmoredBulgasari","numOfDefenderAndArmoredBulgasari","EnemyStateView","num_of_units","TriggerView","_ref3","condition","trigger","EffectTrigger","round","at","from","until","UnitAlias","ConditionStateView","_ref4","NotTargetStateView","_ref5","_entry","ConditionRow","EnemyCondition","_ref6","EffectiveView","_ref7","EffectScaleFactorView","_ref8","scaleFactor","per_stack","per_units","_v$per_units","_v$per_units$unit","exceptSelf","variation","EffectTargetsView","_ref9","targets","_ref10","model","OrConjunction","isTargetSkillEffect","enemyTarget","conds","_ref11","children","hasAnyConditions","hasMultipleConditions","effectTargets","getDetail","body","rate","calcMilliPercentageValue","additions","times","count","max_stack","cannot_be_dispelled","notFalsy","getTerm","term","for_rounds","getTag","translateMilliPercentageDetail","detail","translateTagStackDetail","translateEffectNames","EffectDetailRow","padding","marginLeft","flexShrink","EffectDetail","Effect","_entry$","active","isFormChangeUnitNumber","no","UnitForms","default","calcMilliValue","calcMicroValue","status","translateSkillEffectDetails","targetKey","Badge","variant","SkillEffectView","SkillEffectConditionView","SkillEffectDetailsView","values","useSkillEffects","skillValueFontSizeStyle","skillLabelStyle","skillBadgeStyle","whiteSpace","NestedContainer","SkillNameView","name","useSkillName","textOverflow","overflow","title","SkillCostView","cost","useSkillCost","SkillRangeView","range","useSkillRange","RankUpSkillBadge","isRankUpSkill","useRankUpSkillBadge","FormChangeSkillBadge","useFormChangeSkillBadge","skillLvItems","SkillLvDropdown","_useSkillLvState","useSkillLvState","_useSkillLvState2","skillLv","setSkillLv","userSelect","marginRight","NumberValueDropdown","items","onChange","eventKey","selectedUnit","useSelectedUnit","Tab","paddingTop","Col","xs","sm","order","span","DamageDealView","EffectsAsEquipmentDescriptionView","SkillEffectsView","AreaOfEffectGrid","_useUnitForm","useUnitForm","_useUnitForm2","formChangeUnit","changeForm","alignItems","SVGButton","svg","ArrowSync","onClick","unitForm","SkillNavItem","disabled","startsWith","Nav","Active1SkillNavItem","_useActive1SkillNav","useActive1SkillNav","_useActive1SkillNav2","enable","ActiveSkillIcon","SkillType","DisableActiveSkillIcon","Active2SkillNavItem","_useActive2SkillNav","useActive2SkillNav","_useActive2SkillNav2","Passive1SkillNavItem","_usePassive1SkillNav","usePassive1SkillNav","_usePassive1SkillNav2","PassiveSkillIcon","DisablePassiveSkillIcon","Passive2SkillNavItem","_usePassive2SkillNav","usePassive2SkillNav","_usePassive2SkillNav2","Passive3SkillNavItem","_usePassive3SkillNav","usePassive3SkillNav","_usePassive3SkillNav2","_useSkillTab","useSkillTab","_useSkillTab2","activeTab","setActiveTab","UnitFormSelector","activeKey","onSelect","minHeight","SkillPane","spans","offset","_propValue$span"],"sourceRoot":""}