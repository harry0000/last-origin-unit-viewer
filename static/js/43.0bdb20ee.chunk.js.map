{"version":3,"file":"static/js/43.0bdb20ee.chunk.js","mappings":"8NAkBMA,G,QAAqE,SAAH,GAAmB,IAGrFC,EAHwEC,EAAK,EAALA,MACpEC,GAAMC,EAAAA,EAAAA,MAAND,EAyBR,OAnBEF,EAHGC,EAEM,gBAAiBA,EAClBC,EAAE,mCAAoC,CAAEE,OAAOC,EAAAA,EAAAA,IAAyBJ,EAAMK,eAC7E,sBAAuBL,EACxBC,EAAE,yCAA0C,CAAEE,OAAOC,EAAAA,EAAAA,IAAyBJ,EAAMM,qBACnF,sBAAuBN,EACxBC,EAAE,yCAA0C,CAAEE,MAAOH,EAAMO,kBAAkBJ,QAC5E,UAAWH,EACZC,EAAE,6BAA8B,CAAEE,OAAOC,EAAAA,EAAAA,IAAyBJ,EAAMQ,SACvE,WAAYR,EACbC,EAAE,8BAA+B,CAAEE,OAAOC,EAAAA,EAAAA,IAAyBJ,EAAMS,UACxE,WAAYT,EACbC,EAAE,8BAA+B,CAAEE,OAAOC,EAAAA,EAAAA,IAAyBJ,EAAMU,UACxE,WAAYV,EACbC,EAAE,8BAA+B,CAAEE,OAAOC,EAAAA,EAAAA,IAAyBJ,EAAMW,UACxE,WAAYX,EACbC,EAAE,8BAA+B,CAAEE,OAAOS,EAAAA,EAAAA,IAAeZ,EAAMa,UAE/DZ,EAAE,gCAAiC,CAAEE,MAAOH,EAAMc,SAASX,QAlB3D,QAqBF,oBAAOJ,EACjB,GAEMgB,EAAmD,SAAH,GAAoB,IAAdC,EAAM,EAANA,OAC1D,OAAQ,QAAC,SAAa,CAACA,OAAQA,GAAQ,OACzC,EAEMC,EAID,SAAH,GAAqC,IAA/BjB,EAAK,EAALA,MAAOkB,EAAQ,EAARA,SAAUF,EAAM,EAANA,OACvB,OACE,QAAC,SAAa,CAACE,SAAUA,EAAUF,OAAQA,IACzC,QAAClB,EAAkB,CAACE,MAAOA,IAGjC,EAEMmB,EAAsBC,EAAAA,YAQ1B,WAAuCC,GAAG,IAAvCC,EAAE,EAAFA,GAAIC,EAAO,EAAPA,QAASC,EAAS,EAATA,UAAWC,EAAQ,EAARA,SAAQ,OACnC,aACEC,KAAK,GACLL,IAAKA,EACLC,GAAIA,EACJC,QAAS,SAACI,GACRA,EAAEC,iBACFL,EAAQI,EACV,GAECF,GACD,gBAAMI,UAAU,YACfC,EAAAA,EAAAA,IAAUN,GAAY,gBAAMK,UAAU,iBACrC,IAgCN,UA7BiE,SAAH,GAAkB,IAAZE,EAAI,EAAJA,KAC5DC,GAAQC,EAAAA,EAAAA,IAA0BF,GACxC,GAAgDG,EAAAA,EAAAA,IAAiBH,GAAK,eAA/DI,EAAa,KAAEC,EAAW,KAAEZ,EAAS,KAE5C,OACE,QAAC,IAAQ,CACPK,UAAU,aACVQ,SAAU,SAAAnB,GACRkB,EAAYlB,EAAWc,GAAOd,QAAYoB,EAC5C,IAEA,QAAC,WAAe,CAACC,GAAIpB,EAAqBG,GAAG,2BAA2BE,UAAWA,IACjF,QAAC1B,EAAkB,CAACE,MAAOmC,MAE7B,QAAC,SAAa,MACZ,QAACpB,EAAiB,CAACC,QAASmB,IAC3BH,EAAMQ,KAAI,SAACxC,EAAOyC,GAAC,OAClB,QAACxB,EAAiB,CAChByB,IAAKC,KAAKC,UAAU5C,GACpBA,MAAOA,EACPkB,SAAUuB,EACVzB,OAAQhB,IAAUmC,GAClB,KAKZ,C","sources":["component/status/corelink/FullLinkBonusDropdown.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Dropdown } from 'react-bootstrap';\n\nimport { UnitBasicInfo } from '../../../domain/UnitBasicInfo';\nimport { FullLinkBonus } from '../../../domain/UnitCoreLinkBonusData';\nimport { calcMicroValue, calcMilliPercentageValue } from '../../../domain/ValueUnit';\n\nimport { useAvailableFullLinkBonus, useFullLinkBonus } from '../../../state/corelink/UnitCoreLinkHook';\n\nimport { ifTruthy } from '../../../util/react';\n\nimport '../dropdown.css';\n\nconst FullLinkBonusLabel: React.FC<{ bonus: FullLinkBonus | undefined }> = ({ bonus }) => {\n  const { t } = useTranslation();\n\n  let label: string;\n  if (!bonus) {\n    label = '\\u00A0';\n  } else if ('sortie_cost' in bonus) {\n    label = t('form.full_link_bonus.sortie_cost', { value: calcMilliPercentageValue(bonus.sortie_cost) });\n  } else if ('damage_multiplier' in bonus) {\n    label = t('form.full_link_bonus.damage_multiplier', { value: calcMilliPercentageValue(bonus.damage_multiplier) });\n  } else if ('buff_debuff_lv_up' in bonus) {\n    label = t('form.full_link_bonus.buff_debuff_lv_up', { value: bonus.buff_debuff_lv_up.value });\n  } else if ('hp_up' in bonus) {\n    label = t('form.full_link_bonus.hp_up', { value: calcMilliPercentageValue(bonus.hp_up) });\n  } else if ('acc_up' in bonus) {\n    label = t('form.full_link_bonus.acc_up', { value: calcMilliPercentageValue(bonus.acc_up) });\n  } else if ('eva_up' in bonus) {\n    label = t('form.full_link_bonus.eva_up', { value: calcMilliPercentageValue(bonus.eva_up) });\n  } else if ('cri_up' in bonus) {\n    label = t('form.full_link_bonus.cri_up', { value: calcMilliPercentageValue(bonus.cri_up) });\n  } else if ('spd_up' in bonus) {\n    label = t('form.full_link_bonus.spd_up', { value: calcMicroValue(bonus.spd_up) });\n  } else {\n    label = t('form.full_link_bonus.range_up', { value: bonus.range_up.value });\n  }\n\n  return (<span>{label}</span>);\n};\n\nconst UnselectBonusItem: React.FC<{ active: boolean }> = ({ active }) => {\n  return (<Dropdown.Item active={active}>&nbsp;</Dropdown.Item>);\n};\n\nconst FullLinkBonusItem: React.FC<{\n  bonus: FullLinkBonus,\n  eventKey: number,\n  active: boolean\n}> = ({ bonus, eventKey, active }) => {\n  return (\n    <Dropdown.Item eventKey={eventKey} active={active}>\n      <FullLinkBonusLabel bonus={bonus}/>\n    </Dropdown.Item>\n  );\n};\n\nconst FullLinkBonusToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    id: string,\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    available: boolean,\n    children: ReactNode\n  }\n>(({ id, onClick, available, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n    <span className=\"toggle\" />\n    {ifTruthy(!available, (<span className=\"unavailable\" />))}\n  </a>\n));\n\nconst FullLinkBonusDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableFullLinkBonus(unit);\n  const [selectedBonus, selectBonus, available] = useFullLinkBonus(unit);\n\n  return (\n    <Dropdown\n      className=\"unit-state\"\n      onSelect={eventKey => {\n        selectBonus(eventKey ? items[+eventKey] : undefined);\n      }}\n    >\n      <Dropdown.Toggle as={FullLinkBonusToggle} id=\"full-link-bonus-dropdown\" available={available}>\n        <FullLinkBonusLabel bonus={selectedBonus}/>\n      </Dropdown.Toggle>\n      <Dropdown.Menu>\n        <UnselectBonusItem active={!selectedBonus}/>\n        {items.map((bonus, i) => (\n          <FullLinkBonusItem\n            key={JSON.stringify(bonus)}\n            bonus={bonus}\n            eventKey={i}\n            active={bonus === selectedBonus}\n          />\n        ))}\n      </Dropdown.Menu>\n    </Dropdown>\n  );\n};\n\nexport default FullLinkBonusDropdown;\n"],"names":["FullLinkBonusLabel","label","bonus","t","useTranslation","value","calcMilliPercentageValue","sortie_cost","damage_multiplier","buff_debuff_lv_up","hp_up","acc_up","eva_up","cri_up","calcMicroValue","spd_up","range_up","UnselectBonusItem","active","FullLinkBonusItem","eventKey","FullLinkBonusToggle","React","ref","id","onClick","available","children","href","e","preventDefault","className","ifTruthy","unit","items","useAvailableFullLinkBonus","useFullLinkBonus","selectedBonus","selectBonus","onSelect","undefined","as","map","i","key","JSON","stringify"],"sourceRoot":""}