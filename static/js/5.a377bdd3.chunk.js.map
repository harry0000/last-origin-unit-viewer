{"version":3,"sources":["domain/skill/SkillAreaOfEffect.ts","component/skill/AreaOfEffectCellType.ts","component/skill/AreaOfEffectGrid.tsx","hook/skill/SkillArea.ts","component/skill/AttributeColorStyle.ts","component/skill/DamageDealView.tsx","hook/skill/DamageDeal.ts","component/skill/EffectsAsEquipmentDescriptionView.tsx","domain/UnitAlias.ts","component/skill/UnitAliasView.tsx","component/skill/SkillEffectConditionView.tsx","component/skill/SkillEffectsTranslator.ts","component/skill/SkillEffectDetailsView.tsx","component/skill/SkillEffectsView.tsx","hook/skill/SkillEffects.ts","component/skill/SkillPane.tsx","hook/skill/Skill.ts"],"names":["SkillAreaType","AreaOfEffectCellType","AreaOfEffectCells","select","area","cellColorStyle","overlayStyle","type","borderRadius","position","top","bottom","left","right","opacity","backgroundColor","AreaOfEffectCell","selected","others","t","useTranslation","css","border","width","content","display","marginTop","inset","OverlayTrigger","placement","overlay","Tooltip","id","AreaOfEffectGrid","skillType","cellType","skill","useRecoilValue","selectedUnitActive1SkillState","selectedUnitActive2SkillState","selectedUnitPassive1SkillState","selectedUnitPassive2SkillState","selectedUnitPassive3SkillState","useSkillArea","ifNonNullable","cell","borderCollapse","transform","color","AttributeColorStyle","DamageAttribute","Fire","Ice","Electric","DamageDealView","props","as","damage_deal","undefined","useDamageDeal","effective","margin","fontWeight","calcValue","attribute","EffectsAsEquipmentDescriptionView","show","ps1","useEffectsAsEquipmentDescription","ifTruthy","fontSize","cursor","textDecoration","UnitAlias","unitNumbersForAlias","Set","UnitAliasView","unitAlias","selfUnitNumber","popover","Popover","Content","filter","n","map","key","textAlign","number","isNeedSeparator","array","index","length","unitStateView","unit","value","role","typeAndRole","UnitKind","AGS","Bioroid","UnitType","Light","Heavy","Flying","UnitRole","Attacker","Defender","Supporter","Fragment","stateValuesPerTargetView","target","values","unitNumber","v","i","JSON","stringify","Object","entries","entry","effect","tag","form","equipment","stateValuesView","StateView","state","statePerTarget","node","SkillEffectConditionRow","condition","trigger","SkillEffectConditionView","conditions","scale_factor","conds","per_stack","num_of_units","getDetail","body","rate","additions","times","count","max_stack","cannot_be_dispelled","s","join","getTerm","term","for_rounds","getTag","translateMilliPercentageDetail","detail","EffectDetailRow","padding","marginLeft","flexShrink","EffectDetail","details","Effect","MinimizeDamage","NullifyDamage","AllBuffRemoval","AllDebuffRemoval","ColumnProtect","RowProtect","TargetProtect","FollowUpAttack","IgnoreBarrierDr","IgnoreDr","IgnoreProtect","Reconnaissance","Marked","Provoked","Immovable","Silenced","Stunned","RefundAp","AttackCritical","CounterattackCritical","DeployDefensiveWall","AMG11Construction","DeployRabbitDField","SummonHologramTiger","Push","Pull","RangeUp","RangeDown","FixedDamageOverTime","FixedFireDamageOverTime","FixedIceDamageOverTime","FixedElectricDamageOverTime","Barrier","BattleContinuation","ApUp","ApDown","SetAp","EffectRemoval","effects","e","PreventsEffect","ActivationRatePercentageUp","FormChange","FormRelease","TagStack","TagRelease","TagUnstack","DefDown","EvaUp","StatusResistUp","translateSkillEffectDetails","SkillEffectDetailsView","className","targetKey","Badge","variant","SkillEffectView","self","around","SkillEffectsView","selectedUnitBasicInfoState","unitActive1SkillState","no","unitActive2SkillState","unitPassive1SkillState","equipment_effects","unitPassive2SkillState","unitPassive3SkillState","useSkillEffects","skillValueFontSizeStyle","skillLabelStyle","skillBadgeStyle","NestedContainer","children","Container","fluid","SkillNameView","name","unitSkillState","isFormChangeUnitSkill","hasFormActive1Skill","unitForm","hasFormActive2Skill","hasFormPassive1Skill","hasFormPassive2Skill","hasFormPassive3Skill","useSkillName","textOverflow","overflow","whiteSpace","title","SkillCostView","cost","useSkillCost","SkillRangeView","range","useSkillRange","RankUpSkillBadge","isRankUpSkill","selectedUnitSkillState","isPassive1RankUpSkill","isPassive2RankUpSkill","isPassive3RankUpSkill","useRankUpSkillBadge","FormChangeSkillBadge","useFormChangeSkillBadge","skillLvItems","Array","SkillLvDropdown","useRecoilState","setSkill","skillLv","active1Lv","lv","changeActive1SkillLv","active2Lv","changeActive2SkillLv","passive1Lv","changePassive1SkillLv","passive2Lv","changePassive2SkillLv","passive3Lv","changePassive3SkillLv","useSkillLvState","setSkillLv","userSelect","marginRight","NumberValueDropdown","items","onChange","SkillPane","eventKey","selectedUnit","Tab","Pane","paddingTop","Row","Col","xs","sm","order","span"],"mappings":"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","file":"static/js/5.a377bdd3.chunk.js","sourcesContent":["export const SkillAreaType = {\n  Self: 'self' ,\n  Single: 'single',\n  SingleAndFront: 'single_and_front',\n  SingleAndBack: 'single_and_back',\n  Twin: 'twin',\n  TwoByTwo: '2_x_2',\n  FanShape: 'fan_shape',\n  FanShapeWithoutFront: 'fan_shape_without_front',\n  InvertedFanShape: 'inverted_fan_shape',\n  Zigzag: 'zigzag',\n  MercilessCat: 'merciless_cat',\n  Line: 'line',\n  RowTowardFront: 'row_toward_front',\n  RowTowardFrontWithFrontLine: 'row_toward_front_with_front_line',\n  RowTowardBack: 'row_toward_back',\n  LineWithFrontLine: 'line_with_front_line',\n  LineWithBack: 'line_with_back',\n  LineWithBackward: 'line_with_backward',\n  Cross: 'cross',\n  CrossWithFrontLine: 'cross_with_front_line',\n  All: 'all',\n  RowGreatlyAttenuate: 'row_greatly_attenuate',\n  RowSlightlyAttenuate: 'row_slightly_attenuate',\n  SingleAndFrontMiddleExplosion: 'single_and_front_middle_explosion',\n  SingleAndFrontStrongExplosion: 'single_and_front_strong_explosion',\n  LineMiddleExplosion: 'line_middle_explosion',\n  LineStrongExplosion: 'line_strong_explosion',\n  FanShapeStrongExplosion: 'fan_shape_strong_explosion',\n  CrossSmallExplosion: 'cross_small_explosion',\n  CrossStrongExplosion: 'cross_strong_explosion',\n  CircleSmallExplosion: 'circle_small_explosion',\n  CircleStrongExplosion: 'circle_strong_explosion',\n  AllStrongExplosion: 'all_strong_explosion',\n  Front: 'front',\n  Back: 'back',\n  Left: 'left',\n  Forward: 'forward',\n  Backward: 'backward',\n  RightDirection: 'right_direction',\n  LineAdjacent: 'line_adjacent',\n  RowAdjacent: 'row_adjacent',\n  RowAdjacentWithSelfAndLeftDirection: 'row_adjacent_with_self_and_left_direction',\n  FrontLineAdjacent: 'front_line_adjacent',\n  BackLineAdjacent: 'back_line_adjacent',\n  CrossAdjacentWithoutFront: 'cross_adjacent_without_front',\n  CrossAdjacentWithoutBack: 'cross_adjacent_without_back',\n  CrossAdjacent: 'cross_adjacent',\n  DiagonalAdjacent: 'diagonal_adjacent',\n  InvertedFanShapeAdjacent: 'inverted_fan_shape_adjacent',\n  CatsHand: 'cats_hand',\n  AllAdjacentWithoutFront: 'all_adjacent_without_front',\n  AllAdjacentWithoutFrontLine: 'all_adjacent_without_front_line',\n  AllAdjacentWithoutBackLine: 'all_adjacent_without_back_line',\n  AllAdjacent: 'all_adjacent',\n  FixedFrontLine: 'fixed_front_line',\n  FixedBackLine: 'fixed_back_line',\n  FixedMiddleRow: 'fixed_middle_row',\n  FixedCross: 'fixed_cross',\n  FixedAll: 'fixed_all',\n} as const;\nexport type SkillAreaType = typeof SkillAreaType[keyof typeof SkillAreaType]\n","import { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { Sequence } from '../../util/type';\n\nexport const AreaOfEffectCellType = {\n  Effective: 'effective',\n  High: 'high',\n  Middle: 'middle',\n  Weak: 'weak',\n  None: 'none'\n} as const;\nexport type AreaOfEffectCellType = typeof AreaOfEffectCellType[keyof typeof AreaOfEffectCellType];\n\ntype TenKeyPosition = Sequence<9>\n\nexport type AreaOfEffectCell = Readonly<{\n  select?: TenKeyPosition,\n  area: readonly [\n    AreaOfEffectCellType, AreaOfEffectCellType, AreaOfEffectCellType,\n    AreaOfEffectCellType, AreaOfEffectCellType, AreaOfEffectCellType,\n    AreaOfEffectCellType, AreaOfEffectCellType, AreaOfEffectCellType\n  ]\n}>\n\nexport const AreaOfEffectCells: Readonly<{ [key in SkillAreaType]: AreaOfEffectCell }> = {\n  [SkillAreaType.Self]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'none', 'effective', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Single]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'none', 'effective', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.SingleAndFront]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'none', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.SingleAndBack]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'effective', 'effective', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Twin]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'none', 'effective', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.TwoByTwo]: {\n    select: 5,\n    area: ['none', 'effective', 'effective', 'none', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.FanShape]: {\n    select: 5,\n    area: ['none', 'none', 'effective', 'none', 'effective', 'effective', 'none', 'none', 'effective']\n  },\n  [SkillAreaType.FanShapeWithoutFront]: {\n    select: 5,\n    area: ['none', 'none', 'effective', 'none', 'effective', 'none', 'none', 'none', 'effective']\n  },\n  [SkillAreaType.InvertedFanShape]: {\n    select: 5,\n    area: ['effective', 'none', 'none', 'effective', 'effective', 'none', 'effective', 'none', 'none']\n  },\n  [SkillAreaType.Zigzag]: {\n    select: 5,\n    area: ['effective', 'none', 'effective', 'none', 'effective', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.MercilessCat]: {\n    select: 4,\n    area: ['effective', 'effective', 'none', 'effective', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Line]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'none', 'effective', 'none', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.RowTowardFront]: {\n    select: 4,\n    area: ['none', 'none', 'none', 'effective', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.RowTowardFrontWithFrontLine]: {\n    select: 4,\n    area: ['none', 'none', 'effective', 'effective', 'effective', 'effective', 'none', 'none', 'effective']\n  },\n  [SkillAreaType.RowTowardBack]: {\n    select: 6,\n    area: ['none', 'none', 'none', 'effective', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.LineWithFrontLine]: {\n    select: 5,\n    area: ['none', 'effective', 'effective', 'none', 'effective', 'effective', 'none', 'effective', 'effective']\n  },\n  [SkillAreaType.LineWithBack]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'effective', 'effective', 'none', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.LineWithBackward]: {\n    select: 6,\n    area: ['none', 'none', 'effective', 'effective', 'effective', 'effective', 'none', 'none', 'effective']\n  },\n  [SkillAreaType.Cross]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'effective', 'effective', 'effective', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.CrossWithFrontLine]: {\n    select: 5,\n    area: ['none', 'effective', 'effective', 'effective', 'effective', 'effective', 'none', 'effective', 'effective']\n  },\n  [SkillAreaType.All]: {\n    select: 5,\n    area: ['effective', 'effective', 'effective', 'effective', 'effective', 'effective', 'effective', 'effective', 'effective']\n  },\n  [SkillAreaType.RowGreatlyAttenuate]: {\n    select: 4,\n    area: ['none', 'none', 'none', 'effective', 'middle', 'weak', 'none', 'none', 'none']\n  },\n  [SkillAreaType.RowSlightlyAttenuate]: {\n    select: 4,\n    area: ['none', 'none', 'none', 'effective', 'high', 'middle', 'none', 'none', 'none']\n  },\n  [SkillAreaType.SingleAndFrontMiddleExplosion]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'none', 'effective', 'middle', 'none', 'none', 'none']\n  },\n  [SkillAreaType.SingleAndFrontStrongExplosion]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'none', 'effective', 'high', 'none', 'none', 'none']\n  },\n  [SkillAreaType.LineMiddleExplosion]: {\n    select: 5,\n    area: ['none', 'middle', 'none', 'none', 'effective', 'none', 'none', 'middle', 'none']\n  },\n  [SkillAreaType.LineStrongExplosion]: {\n    select: 5,\n    area: ['none', 'high', 'none', 'none', 'effective', 'none', 'none', 'high', 'none']\n  },\n  [SkillAreaType.FanShapeStrongExplosion]: {\n    select: 5,\n    area: ['none', 'none', 'high', 'none', 'effective', 'high', 'none', 'none', 'high']\n  },\n  [SkillAreaType.CrossSmallExplosion]: {\n    select: 5,\n    area: ['none', 'weak', 'none', 'weak', 'effective', 'weak', 'none', 'weak', 'none']\n  },\n  [SkillAreaType.CrossStrongExplosion]: {\n    select: 5,\n    area: ['none', 'high', 'none', 'high', 'effective', 'high', 'none', 'high', 'none']\n  },\n  [SkillAreaType.CircleSmallExplosion]: {\n    select: 5,\n    area: ['weak', 'weak', 'weak', 'weak', 'effective', 'weak', 'weak', 'weak', 'weak']\n  },\n  [SkillAreaType.CircleStrongExplosion]: {\n    select: 5,\n    area: ['high', 'high', 'high', 'high', 'effective', 'high', 'high', 'high', 'high']\n  },\n  [SkillAreaType.AllStrongExplosion]: {\n    select: 5,\n    area: ['middle', 'high', 'middle', 'high', 'effective', 'high', 'middle', 'high', 'middle']\n  },\n  [SkillAreaType.Front]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'none', 'none', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Back]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'effective', 'none', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Left]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'none', 'none', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Forward]: {\n    select: 4,\n    area: ['none', 'none', 'none', 'none', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.Backward]: {\n    select: 6,\n    area: ['none', 'none', 'none', 'effective', 'effective', 'none', 'none', 'none', 'none']\n  },\n  [SkillAreaType.RightDirection]: {\n    select: 8,\n    area: ['none', 'none', 'none', 'none', 'effective', 'none', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.LineAdjacent]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'none', 'none', 'none', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.RowAdjacent]: {\n    select: 5,\n    area: ['none', 'none', 'none', 'effective', 'none', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.RowAdjacentWithSelfAndLeftDirection]: {\n    select: 2,\n    area: ['none', 'effective', 'none', 'none', 'effective', 'none', 'effective', 'effective', 'effective']\n  },\n  [SkillAreaType.FrontLineAdjacent]: {\n    select: 5,\n    area: ['none', 'none', 'effective', 'none', 'none', 'effective', 'none', 'none', 'effective']\n  },\n  [SkillAreaType.BackLineAdjacent]: {\n    select: 5,\n    area: ['effective', 'none', 'none', 'effective', 'none', 'none', 'effective', 'none', 'none']\n  },\n  [SkillAreaType.CrossAdjacentWithoutFront]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'effective', 'none', 'none', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.CrossAdjacentWithoutBack]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'none', 'none', 'effective', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.CrossAdjacent]: {\n    select: 5,\n    area: ['none', 'effective', 'none', 'effective', 'none', 'effective', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.DiagonalAdjacent]: {\n    select: 5,\n    area: ['effective', 'none', 'effective', 'none', 'none', 'none', 'effective', 'none', 'effective']\n  },\n  [SkillAreaType.InvertedFanShapeAdjacent]: {\n    select: 6,\n    area: ['effective', 'none', 'none', 'effective', 'effective', 'none', 'effective', 'none', 'none']\n  },\n  [SkillAreaType.CatsHand]: {\n    select: 6,\n    area: ['none', 'effective', 'none', 'effective', 'none', 'none', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.AllAdjacentWithoutFront]: {\n    select: 5,\n    area: ['effective', 'effective', 'effective', 'effective', 'none', 'none', 'effective', 'effective', 'effective']\n  },\n  [SkillAreaType.AllAdjacentWithoutFrontLine]: {\n    select: 5,\n    area: ['effective', 'effective', 'none', 'effective', 'none', 'none', 'effective', 'effective', 'none']\n  },\n  [SkillAreaType.AllAdjacentWithoutBackLine]: {\n    select: 5,\n    area: ['none', 'effective', 'effective', 'none', 'none', 'effective', 'none', 'effective', 'effective']\n  },\n  [SkillAreaType.AllAdjacent]: {\n    select: 5,\n    area: ['effective', 'effective', 'effective', 'effective', 'none', 'effective', 'effective', 'effective', 'effective']\n  },\n  [SkillAreaType.FixedFrontLine]: {\n    area: ['none', 'none', 'effective', 'none', 'none', 'effective', 'none', 'none', 'effective']\n  },\n  [SkillAreaType.FixedBackLine]: {\n    area: ['effective', 'none', 'none', 'effective', 'none', 'none', 'effective', 'none', 'none']\n  },\n  [SkillAreaType.FixedMiddleRow]: {\n    area: ['none', 'none', 'none', 'effective', 'effective', 'effective', 'none', 'none', 'none']\n  },\n  [SkillAreaType.FixedCross]: {\n    area: ['none', 'effective', 'none', 'effective', 'effective', 'effective', 'none', 'effective', 'none']\n  },\n  [SkillAreaType.FixedAll]: {\n    area: ['effective', 'effective', 'effective', 'effective', 'effective', 'effective', 'effective', 'effective', 'effective']\n  }\n} as const;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { CSSObject, Theme, jsx } from '@emotion/react';\nimport React from 'react';\nimport { Interpolation } from '@emotion/serialize';\nimport { useTranslation } from 'react-i18next';\n\nimport { AreaOfEffectCellType } from './AreaOfEffectCellType';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { SkillType } from './UnitSkillList';\nimport { useSkillArea } from '../../hook/skill/SkillArea';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst cellColorStyle: { [key in AreaOfEffectCellType]: string } = {\n  [AreaOfEffectCellType.Effective]: '#d0191d',\n  [AreaOfEffectCellType.High]:      '#ff8f03',\n  [AreaOfEffectCellType.Middle]:    '#ba5a03',\n  [AreaOfEffectCellType.Weak]:      '#763316',\n  [AreaOfEffectCellType.None]:      '#4b4b4d'\n} as const;\n\nconst overlayStyle: (type: AreaOfEffectCellType) => CSSObject = (type) =>\n  type !== AreaOfEffectCellType.None ?\n    {\n      borderRadius: 2,\n      position: 'absolute',\n      top: -3,\n      bottom: 4,\n      left: -3,\n      right: 4,\n      opacity: 0.8,\n      backgroundColor: cellColorStyle[type]\n    } :\n    {};\n\nconst AreaOfEffectCell: React.FC<{ selected: boolean, type: AreaOfEffectCellType }> = ({ selected, type, ...others }) => {\n  const { t } = useTranslation();\n\n  return (\n    <td\n      css={{\n        border: '5px solid transparent',\n        width: '33%',\n        position: 'relative',\n        '&::after': {\n          content: '\" \"',\n          display: 'block',\n          marginTop: '100%'\n        }\n      }}\n    >\n      <div\n        css={{\n          borderRadius: 2,\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: selected ? '#16d4d4' : cellColorStyle[AreaOfEffectCellType.None]\n        }}\n      />\n      {\n        type === AreaOfEffectCellType.High ||\n        type === AreaOfEffectCellType.Middle ||\n        type === AreaOfEffectCellType.Weak ?\n          (<OverlayTrigger\n            {...others}\n            placement='auto'\n            overlay={<Tooltip id='tooltip-aoe-cell'>{t(`skill.effective_rate.${type}`)}</Tooltip>}\n          >\n            <div css={overlayStyle(type)} />\n          </OverlayTrigger>) :\n          <div css={overlayStyle(type)} />\n      }\n    </td>\n  );\n};\n\nconst AreaOfEffectGrid: React.FC<{ css?: Interpolation<Theme>, skillType: SkillType }> = ({ skillType, ...others }) => {\n  const { t } = useTranslation();\n  const cellType = useSkillArea(skillType);\n\n  return (\n    ifNonNullable(\n      cellType,\n      cell => (\n        <div {...others}>\n          <table\n            css={{\n              borderCollapse: 'collapse',\n              width: '100%',\n              transform: 'skewX(-9deg)'\n            }}>\n            <tbody>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 7} type={cell.area[0]} />\n                <AreaOfEffectCell selected={cell.select === 8} type={cell.area[1]} />\n                <AreaOfEffectCell selected={cell.select === 9} type={cell.area[2]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 4} type={cell.area[3]} />\n                <AreaOfEffectCell selected={cell.select === 5} type={cell.area[4]} />\n                <AreaOfEffectCell selected={cell.select === 6} type={cell.area[5]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 1} type={cell.area[6]} />\n                <AreaOfEffectCell selected={cell.select === 2} type={cell.area[7]} />\n                <AreaOfEffectCell selected={cell.select === 3} type={cell.area[8]} />\n              </tr>\n            </tbody>\n          </table>\n          {(<span css={{ color: '#16d4d4' }}>{!cell.select ? t('skill.fixed_area') : '\\u00A0'}</span>)}\n        </div>\n      )\n    )\n  );\n};\n\nexport default AreaOfEffectGrid;\n","import { useRecoilValue } from 'recoil';\n\nimport { SkillType } from '../../component/skill/UnitSkillList';\nimport { AreaOfEffectCell, AreaOfEffectCells } from '../../component/skill/AreaOfEffectCellType';\n\nimport {\n  selectedUnitActive1SkillState,\n  selectedUnitActive2SkillState,\n  selectedUnitPassive1SkillState,\n  selectedUnitPassive2SkillState,\n  selectedUnitPassive3SkillState\n} from '../../state/skill/unitSkillState';\n\nexport function useSkillArea(skillType: SkillType): AreaOfEffectCell | undefined {\n  switch (skillType) {\n  case 'active1': {\n    const skill = useRecoilValue(selectedUnitActive1SkillState);\n    return skill && AreaOfEffectCells[skill.area];\n  }\n  case 'active2': {\n    const skill = useRecoilValue(selectedUnitActive2SkillState);\n    return skill && AreaOfEffectCells[skill.area];\n  }\n  case 'passive1': {\n    const skill = useRecoilValue(selectedUnitPassive1SkillState);\n    return skill && AreaOfEffectCells[skill.area];\n  }\n  case 'passive2': {\n    const skill = useRecoilValue(selectedUnitPassive2SkillState);\n    return skill && AreaOfEffectCells[skill.area];\n  }\n  case 'passive3': {\n    const skill = useRecoilValue(selectedUnitPassive3SkillState);\n    return skill && AreaOfEffectCells[skill.area];\n  }\n  }\n}\n","import { DamageAttribute } from '../../domain/skill/UnitSkillData';\n\nexport const AttributeColorStyle: { [key in DamageAttribute]: string } = {\n  [DamageAttribute.Fire]: '#c33',\n  [DamageAttribute.Ice]: '#0cf',\n  [DamageAttribute.Electric]: '#fc0'\n};\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { calcValue } from '../../domain/ValueUnit';\n\nimport { AttributeColorStyle } from './AttributeColorStyle';\nimport { SkillType } from './UnitSkillList';\nimport { useDamageDeal } from '../../hook/skill/DamageDeal';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst DamageDealView: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const { t } = useTranslation();\n  const props = useDamageDeal(skillType);\n  if (!props[0]) {\n    return null;\n  }\n\n  const [damage_deal, area] = props;\n\n  return (\n    <div css={{ color: '#ccc', marginTop: 10 }}>\n      <span>\n        {area === SkillAreaType.Single ?\n          t('effect:damage_deal.target.single') :\n          t('effect:damage_deal.target.area')}\n      </span>\n      {ifNonNullable(\n        damage_deal.effective,\n        effective => (<span>{t(`effect:effective.${effective}`)}{t('effect:separator')}</span>)\n      )}\n      <span>{t('status.atk')}</span>\n      <span css={{ margin: '0 5px', color: '#fc0', fontWeight: 'bold' }}>\n        {calcValue(damage_deal)}%\n      </span>\n      <span>{t('effect:as_preposition')}</span>\n      {ifNonNullable(\n        damage_deal.attribute,\n        attribute => (\n          <span css={{ margin: '0 5px', color: AttributeColorStyle[attribute], fontWeight: 600 }}>\n            {t(`effect:attribute.${attribute}`)}\n          </span>\n        )\n      )}\n      <span>{t('effect:damage')}</span>\n    </div>\n  );\n};\n\nexport default DamageDealView;\n","import { useRecoilValue } from 'recoil';\n\nimport { DamageDeal } from '../../domain/skill/UnitSkills';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillType } from '../../component/skill/UnitSkillList';\n\nimport { selectedUnitActive1SkillState, selectedUnitActive2SkillState } from '../../state/skill/unitSkillState';\n\nexport function useDamageDeal(\n  skillType: SkillType\n): [damage_deal: DamageDeal, area: SkillAreaType] | [damage_deal: undefined, area: undefined] {\n  switch (skillType) {\n  case 'active1': {\n    const as = useRecoilValue(selectedUnitActive1SkillState);\n    return as && as.damage_deal ?\n      [as.damage_deal, as.area] :\n      [undefined, undefined];\n  }\n  case 'active2': {\n    const as = useRecoilValue(selectedUnitActive2SkillState);\n    return as && as.damage_deal ?\n      [as.damage_deal, as.area] :\n      [undefined, undefined];\n  }\n  default:\n    return [undefined, undefined];\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport { SkillType } from './UnitSkillList';\n\nimport { selectedUnitPassive1SkillState } from '../../state/skill/unitSkillState';\n\nimport { ifTruthy } from '../../util/react';\n\nfunction useEffectsAsEquipmentDescription(skillType: SkillType): boolean {\n  if (skillType === 'passive1') {\n    const ps1 = useRecoilValue(selectedUnitPassive1SkillState);\n    return !!ps1 && 'equipment_effects' in ps1;\n  } else {\n    return false;\n  }\n}\n\nconst EffectsAsEquipmentDescriptionView: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const { t } = useTranslation();\n  const show = useEffectsAsEquipmentDescription(skillType);\n\n  return (\n    ifTruthy(\n      show,\n      (<div css={{\n        color: '#ccc',\n        fontSize: '0.9em',\n        marginTop: 10\n      }}>\n        <span>{t('effect:effects_as_equipment.description.prefix')}</span>\n        <OverlayTrigger\n          placement='auto'\n          overlay={<Tooltip id='tooltip-effects-as-equipment'>{t('effect:effects_as_equipment.annotation')}</Tooltip>}\n        >\n          <span css={{ cursor: 'help', textDecoration: 'underline' }}>\n            {t('effect:effects_as_equipment.description.as_equipment')}\n          </span>\n        </OverlayTrigger>\n        <span>{t('effect:effects_as_equipment.description.suffix')}</span>\n      </div>)\n    )\n  );\n};\n\nexport default EffectsAsEquipmentDescriptionView;\n","import { UnitNumber } from './UnitBasicInfo';\n\nexport const UnitAlias = {\n  ElectricActive: 'electric_active',\n  ArtilleryTypeActive: 'artillery_type_active',\n  Squad21: 'squad_21',\n  CompanionSeries: 'companion_series',\n  SteelLine: 'steel_line',\n  MongooseTeam: 'mongoose_team',\n  Horizon: 'horizon',\n  SpartanSeries: 'spartan_series',\n  Pest: 'pest'\n} as const;\nexport type UnitAlias = typeof UnitAlias[keyof typeof UnitAlias]\n\nexport const unitNumbersForAlias: { [key in UnitAlias]: ReadonlySet<UnitNumber> } = {\n  [UnitAlias.ElectricActive]: new Set([6, 11, 75, 84, 113, 115, 132, 201, 221]),\n  [UnitAlias.ArtilleryTypeActive]: new Set([22, 51, 202]),\n  [UnitAlias.Squad21]: new Set([2, 3, 85, 92, 118, 121]),\n  [UnitAlias.CompanionSeries]: new Set([16, 17, 18, 19, 183]),\n  [UnitAlias.SteelLine]: new Set([21, 22, 23, 24, 25, 26, 27, 28, 29]),\n  [UnitAlias.MongooseTeam]: new Set([80, 81, 82, 83, 84]),\n  [UnitAlias.Horizon]: new Set([85, 87, 88, 89, 90]),\n  [UnitAlias.SpartanSeries]: new Set([215, 216, 217]),\n  [UnitAlias.Pest]: new Set([12, 16])\n} as const;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport { UnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\n\nconst UnitAliasView: React.FC<{\n  unitAlias: UnitAlias,\n  selfUnitNumber: UnitNumber\n}> = ({ unitAlias, selfUnitNumber }) => {\n  const { t } = useTranslation();\n  const popover = (\n    <Popover id=\"popover-unit-alias\" css={{ opacity: '0.9' }}>\n      <Popover.Content>\n        {[...unitNumbersForAlias[unitAlias]]\n          .filter(n => n !== selfUnitNumber)\n          .map(n => (<div key={n} css={{ textAlign: 'left' }}>{t('unit:display', { number: n })}</div>))}\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      placement='auto'\n      overlay={popover}\n    >\n      <span css={{ cursor: 'help', textDecoration: 'underline' }}>\n        {t(`effect:unit.${unitAlias}`)}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nexport default UnitAliasView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nimport UnitAliasView from './UnitAliasView';\n\nimport {\n  ActivationSelfState,\n  ActivationSquadState,\n  ActivationTargetState,\n  SkillEffectActivationCondition,\n  SkillEffectActivationState, UnitTypeAndRole\n} from '../../domain/skill/SkillEffectActivationCondition';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { UnitAlias } from '../../domain/UnitAlias';\nimport { UnitKind, UnitNumber, UnitRole, UnitType } from '../../domain/UnitBasicInfo';\n\nimport { NonNullableEntry } from '../../util/object';\nimport { ifNonNullable, ifTruthy } from '../../util/react';\nimport { EffectActivationState } from '../../domain/EffectActivationState';\n\ntype SkillEffectActivationStateValues =\n  ReadonlyArray<ActivationSelfState> |\n  ReadonlyArray<ActivationTargetState> |\n  ReadonlyArray<ActivationSquadState>\n\ntype StateValuesEntry =\n  NonNullableEntry<keyof ActivationSelfState, ActivationSelfState> |\n  NonNullableEntry<keyof ActivationTargetState, ActivationTargetState> |\n  NonNullableEntry<keyof ActivationSquadState, ActivationSquadState>\n\nfunction isNeedSeparator(array: ReadonlyArray<unknown>, index: number): boolean {\n  return array.length > 1 && index + 1 < array.length;\n}\n\nfunction stateValuesView(entry: StateValuesEntry, unitNumber: UnitNumber, t: TFunction): ReactNode {\n  switch (entry[0]) {\n  case 'hp_greater_or_equal':\n  case 'hp_less_or_equal':\n  case 'hp_greater_than':\n  case 'hp_less_than':\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { value: entry[1] })}</span>);\n  case 'effected':\n    return (\n      <span>{t(`effect:condition.state.${entry[0]}`, { effect: entry[1] })}</span>\n    );\n  case 'tagged':\n    return (\n      <span>{t(`effect:condition.state.${entry[0]}`, { tag: entry[1] })}</span>\n    );\n  case 'stack_ge':\n    if ('effect' in entry[1]) {\n      return t(\n        'effect:condition.state.tag_effect_stack_ge',\n        {\n          tag: entry[1].tag,\n          effect: entry[1].effect,\n          value: entry[1].value\n        }\n      );\n    } else {\n      return t(\n        'effect:condition.state.tag_stack_ge',\n        { tag: entry[1].tag, value: entry[1].value }\n      );\n    }\n  case 'form':\n    return (\n      <span>{t(`effect:condition.state.${entry[0]}`, { form: entry[1] })}</span>\n    );\n  case 'unit':\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  case 'in_squad':\n  case 'effected_by':\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  case 'equipped':\n    return (\n      <span>{t(`effect:condition.state.${entry[0]}`, { equipment: t(`equipment:${entry[1]}`) })}</span>\n    );\n  case 'hp_rate_less_than_self':\n  case 'protected':\n  case 'in_front_line':\n  case 'in_mid_line':\n  case 'in_back_line':\n    return (<span>{t(`effect:condition.state.${entry[0]}`)}</span>);\n  default: {\n    const _exhaustiveCheck: never = entry;\n    return _exhaustiveCheck;\n  }\n  }\n}\n\nfunction unitStateView(key: typeof EffectActivationState['InSquad' | 'Unit' | 'EffectedBy'], unit: UnitNumber | UnitAlias, selfUnitNumber: UnitNumber, t: TFunction): ReactNode\nfunction unitStateView(key: typeof EffectActivationState['InSquad' | 'Unit' | 'EffectedBy'], unit: UnitKind | UnitType | UnitRole | UnitTypeAndRole | UnitNumber | UnitAlias, selfUnitNumber: UnitNumber, t: TFunction): ReactNode\nfunction unitStateView(\n  key: typeof EffectActivationState['InSquad' | 'Unit' | 'EffectedBy'],\n  unit: UnitNumber | UnitKind | UnitType | UnitRole | UnitTypeAndRole | UnitAlias,\n  selfUnitNumber: UnitNumber,\n  t: TFunction\n): ReactNode {\n  if (typeof unit === 'number') {\n    return (\n      <span>\n        {t(\n          `effect:condition.state.${key}`,\n          { unit: t('effect:with_quotes', { value: t('unit:display', { number: unit }) }) }\n        )}\n      </span>\n    );\n  } else if (typeof unit === 'string') {\n    switch (unit) {\n    case UnitKind.AGS:\n    case UnitKind.Bioroid:\n    case UnitType.Light:\n    case UnitType.Heavy:\n    case UnitType.Flying:\n    case UnitRole.Attacker:\n    case UnitRole.Defender:\n    case UnitRole.Supporter:\n      return (\n        <span>\n          {t(`effect:condition.state.${key}`, { unit: t(`effect:unit.${unit}`) })}\n        </span>\n      );\n    case UnitAlias.ElectricActive:\n    case UnitAlias.ArtilleryTypeActive:\n    case UnitAlias.Squad21:\n    case UnitAlias.CompanionSeries:\n    case UnitAlias.SteelLine:\n    case UnitAlias.MongooseTeam:\n    case UnitAlias.Horizon:\n    case UnitAlias.SpartanSeries:\n    case UnitAlias.Pest:\n      return (\n        <React.Fragment>\n          <UnitAliasView unitAlias={unit} selfUnitNumber={selfUnitNumber} />\n          <span>{t(`effect:condition.state.${key}`, { unit: '' })}</span>\n        </React.Fragment>\n      );\n    default: {\n      const _exhaustiveCheck: never = unit;\n      return _exhaustiveCheck;\n    }\n    }\n  } else {\n    const { type, role } = unit;\n    const typeAndRole = `${t(`effect:unit.${type}`)}${t(`effect:unit.${role}`)}`;\n    return (<span>{t(`effect:condition.state.${key}`, { unit: typeAndRole })}</span>);\n  }\n}\n\nfunction stateValuesPerTargetView(\n  target: string,\n  values: SkillEffectActivationStateValues,\n  unitNumber: UnitNumber,\n  t: TFunction\n): ReactNode {\n  return values.map((v: SkillEffectActivationStateValues[number], i: number) => (\n    <React.Fragment key={JSON.stringify(v)}>\n      {Object\n        .entries(v)\n        .map((entry, i, entries) => (\n          <React.Fragment key={entry[0]}>\n            {stateValuesView(entry as StateValuesEntry, unitNumber, t)}\n            {ifTruthy(\n              isNeedSeparator(entries, i),\n              (<span>{t('effect:and_separator')}</span>)\n            )}\n          </React.Fragment>\n        ))}\n      {ifTruthy(\n        isNeedSeparator(values, i),\n        (<span>{t('effect:or_separator')}</span>)\n      )}\n    </React.Fragment>\n  ));\n}\n\nconst StateView: React.FC<{\n  state: SkillEffectActivationState,\n  unitNumber: UnitNumber\n}> = ({\n  state,\n  unitNumber\n}) => {\n  const { t } = useTranslation();\n  const statePerTarget =\n    Object\n      .entries(state)\n      .map((entry) => {\n        return { key: entry[0], node: stateValuesPerTargetView(entry[0], entry[1] as SkillEffectActivationStateValues, unitNumber, t) };\n      });\n\n  return (\n    <React.Fragment>\n      {statePerTarget.map(({ key, node }, i) => (\n        <React.Fragment key={key}>\n          <span>{t(`effect:condition.target.${key}`, '')}</span>\n          {node}\n          {ifTruthy(\n            isNeedSeparator(statePerTarget, i),\n            (<span>{t('effect:and_separator')}</span>)\n          )}\n        </React.Fragment>\n      ))}\n      <span>{t('effect:case')}</span>\n    </React.Fragment>\n  );\n};\n\nconst SkillEffectConditionRow: React.FC<{\n  condition: SkillEffectActivationCondition,\n  unitNumber: UnitNumber\n}> = ({ condition, unitNumber }) => {\n  const { t } = useTranslation();\n  const trigger = 'trigger' in condition ? (<span>{t(`effect:condition.trigger.${condition.trigger}`)}</span>) : null;\n  const state = 'state' in condition ? (<StateView state={condition.state} unitNumber={unitNumber} />) : null;\n\n  return (\n    <div>\n      {trigger}\n      {ifTruthy(!!trigger && !!state, (<span>{t('effect:separator')}</span>))}\n      <span>{state}</span>\n    </div>\n  );\n};\n\nconst SkillEffectConditionView: React.FC<\n  Omit<SkillEffect, 'details'> & { unitNumber: UnitNumber }\n> = ({\n  conditions,\n  effective,\n  scale_factor,\n  unitNumber\n}) => {\n  const { t } = useTranslation();\n  const Conditions = () =>\n    ifNonNullable(\n      conditions,\n      conds => (\n        <div>\n          {conds.length === 1 ?\n            (<SkillEffectConditionRow condition={conds[0]} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <SkillEffectConditionRow condition={conds[0]} unitNumber={unitNumber} />\n                <div css={{ fontSize: '0.7em' }}>{t('effect:or_conjunction')}</div>\n                <SkillEffectConditionRow condition={conds[1]} unitNumber={unitNumber} />\n              </React.Fragment>\n            )\n          }\n        </div>\n      )\n    );\n  const Additional = () => {\n    return ifTruthy(\n      !!effective || !!scale_factor,\n      (<div>\n        {ifNonNullable(effective, v => (<span>{t(`effect:effective.${v}`)}{t('effect:separator')}</span>))}\n        {ifNonNullable(\n          scale_factor,\n          v => {\n            if ('per_stack' in v) {\n              return (<span>{t('effect:scale_factor.per_stack', { tag: v.per_stack.tag })}</span>);\n            } else {\n              switch (v.num_of_units) {\n              case UnitAlias.ElectricActive: {\n                return (\n                  <React.Fragment>\n                    <UnitAliasView unitAlias={UnitAlias.ElectricActive} selfUnitNumber={unitNumber} />\n                    <span>{t('effect:scale_factor.num_of_allies')}</span>\n                  </React.Fragment>\n                );\n              }\n              default: {\n                return (<span>{t(`effect:unit.${v.num_of_units}`)}{t('effect:scale_factor.num_of_allies')}</span>);\n              }\n              }\n            }\n          }\n        )}\n        <span>{t('effect:below_effects')}</span>\n      </div>)\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <Conditions />\n      <Additional />\n    </React.Fragment>\n  );\n};\n\nexport default SkillEffectConditionView;\n","import { TFunction } from 'i18next';\n\nimport { NonNullableEntry } from '../../util/object';\nimport { AroundSkillEffectValue, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { Effect } from '../../domain/Effect';\nimport { calcValue, MilliPercentageValue } from '../../domain/ValueUnit';\n\nexport type SkillEffectDetailsEntry =\n  NonNullableEntry<keyof SkillEffectValue, SkillEffectValue> |\n  NonNullableEntry<keyof AroundSkillEffectValue, AroundSkillEffectValue>\n\ntype SkillEffectDetailsProps = { tag?: string, detail: string, term?: string }\n\nfunction getDetail(body: string, value: SkillEffectDetailsEntry[1], t: TFunction): string {\n  const rate = 'rate' in value && value.rate ?\n    typeof value.rate === 'string' ?\n      `${t(`effect:rate.${value.rate}`)}${t('effect:separator')}` :\n      `${t('effect:rate.percentage', { value: calcValue(value.rate) })}${t('effect:separator')}` :\n    '';\n  const additions = [\n    'times' in value && value.times ?\n      t('effect:times', { count: value.times }) : undefined,\n    'max_stack' in value && typeof value.max_stack === 'number' ?\n      value.max_stack === 1 ?\n        t('effect:does_not_stack') :\n        t('effect:max_stack', { count: value.max_stack }) :\n      undefined,\n    'cannot_be_dispelled' in value && value.cannot_be_dispelled ?\n      t('effect:cannot_be_dispelled') : undefined\n  ].filter(s => !!s)\n    .join(t('effect:separator'));\n\n  return `${rate}${body}${additions ? ` (${additions})` : '' }`;\n}\n\nfunction getTerm(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'term' in value ?\n    typeof value.term === 'string' ?\n      t(`effect:term.${value.term}`) :\n      value.term && t('effect:term.for_rounds', { value: value.term.for_rounds }) :\n    undefined;\n}\n\nfunction getTag(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'tag' in value ?\n    value.tag && t(`effect:tag.${value.tag}`) :\n    undefined;\n}\n\nfunction translateMilliPercentageDetail(\n  effect: string,\n  value: SkillEffectDetailsEntry[1] & MilliPercentageValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    tag: getTag(value, t),\n    detail: getDetail(t(`effect:effect.description.${effect}`, { value: calcValue(value) }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\nexport function translateSkillEffectDetails(\n  entry: SkillEffectDetailsEntry,\n  t: TFunction\n): SkillEffectDetailsProps | ReadonlyArray<SkillEffectDetailsProps>{\n  const term = getTerm(entry[1], t);\n\n  switch (entry[0]) {\n  case Effect.MinimizeDamage:\n  case Effect.NullifyDamage:\n  case Effect.AllBuffRemoval:\n  case Effect.AllDebuffRemoval:\n  case Effect.ColumnProtect:\n  case Effect.RowProtect:\n  case Effect.TargetProtect:\n  case Effect.FollowUpAttack:\n  case Effect.IgnoreBarrierDr:\n  case Effect.IgnoreDr:\n  case Effect.IgnoreProtect:\n  case Effect.Reconnaissance:\n  case Effect.Marked:\n  case Effect.Provoked:\n  case Effect.Immovable:\n  case Effect.Silenced:\n  case Effect.Stunned:\n  case Effect.RefundAp:\n  case Effect.AttackCritical:\n  case Effect.CounterattackCritical:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`), entry[1], t),\n      term\n    };\n  case Effect.DeployDefensiveWall:\n  case Effect.AMG11Construction:\n  case Effect.DeployRabbitDField:\n  case Effect.SummonHologramTiger:\n    return {\n      tag: getTag(entry[1], t),\n      detail: t(`effect:effect.description.${entry[0]}`, { times: entry[1].times }),\n      term\n    };\n  case Effect.Push:\n  case Effect.Pull:\n  case Effect.RangeUp:\n  case Effect.RangeDown:\n  case Effect.FixedDamageOverTime:\n  case Effect.FixedFireDamageOverTime:\n  case Effect.FixedIceDamageOverTime:\n  case Effect.FixedElectricDamageOverTime:\n  case Effect.Barrier:\n  case Effect.BattleContinuation:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ApUp:\n  case Effect.ApDown:\n  case Effect.SetAp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.EffectRemoval: {\n    const effects =\n      'effect' in entry[1] ?\n        t(`effect:effect.name.${entry[1].effect}`) :\n        entry[1].effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:separator'));\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t('effect:effect.description.tagged_effect_removal', { tag: entry[1].tag, effects }) :\n          t('effect:effect.description.effect_removal', { effects }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.PreventsEffect: {\n    const effect = t(`effect:effect.name.${entry[1].effect}`);\n\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, { effect }), entry[1], t),\n      term\n    };\n  }\n  case Effect.ActivationRatePercentageUp: {\n    const value  = calcValue(entry[1]);\n    const effect = entry[1].effect;\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t('effect:effect.description.tagged_activation_rate_percentage_up', { tag: entry[1].tag, effect, value }) :\n          t('effect:effect.description.activation_rate_percentage_up', { effect, value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.FormChange:\n  case Effect.FormRelease: {\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, { form: entry[1].form }), entry[1], t),\n      term\n    };\n  }\n  case Effect.TagStack:\n  case Effect.TagRelease:\n    return {\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { tag: entry[1].tag }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.TagUnstack: {\n    return {\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { tag: entry[1].tag, value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.DefDown:\n  case Effect.EvaUp:\n  case Effect.StatusResistUp:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateMilliPercentageDetail(entry[0], v, t)) :\n      translateMilliPercentageDetail(entry[0], entry[1], t);\n  default: {\n    return translateMilliPercentageDetail(entry[0], entry[1], t);\n  }\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge } from 'react-bootstrap';\nimport { SkillEffectDetailsEntry, translateSkillEffectDetails } from './SkillEffectsTranslator';\n\nimport { AroundSkillEffectValue, SkillEffect, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst EffectDetailRow: React.FC<{\n  tag?: string,\n  detail: string,\n  term?: string\n}> = ({ tag, detail, term }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        fontWeight: 'bold',\n        borderRadius: 3,\n        backgroundColor: '#1c3042',\n        padding: '3px 8px',\n        marginTop: 5\n      }}\n    >\n      <div>\n        {ifNonNullable(tag, v => (<span>{v}{t('effect:tag_separator')}</span>))}\n        <span>{detail}</span>\n      </div>\n      <div\n        css={{\n          marginLeft: 'auto',\n          textAlign: 'right',\n          flexShrink: 0\n        }}>\n        {ifNonNullable(term, v => (<span css={{ marginLeft: 10 }}>{v}</span>))}\n      </div>\n    </div>\n  );\n};\n\nconst EffectDetail: React.FC<{\n  entry: SkillEffectDetailsEntry\n}> = ({ entry }) => {\n  const { t } = useTranslation();\n  const details = translateSkillEffectDetails(entry, t);\n\n  return 'length' in details ?\n    (<React.Fragment>\n      {details.map(detail => (<EffectDetailRow key={JSON.stringify(detail)} {...detail} />))}\n    </React.Fragment>) :\n    (<EffectDetailRow {...details} />);\n};\n\nconst SkillEffectDetailsView: React.FC<{\n  className?: string,\n  target: `${keyof SkillEffect['details']}`,\n  details: NonNullable<SkillEffectValue | AroundSkillEffectValue>,\n  area: SkillAreaType\n}> = ({ className, target, details, area }) => {\n  const { t } = useTranslation();\n  const targetKey =\n    target === 'target' ?\n      area === 'single' ? 'single' : 'area' :\n      target;\n\n  return (\n    <div className={className}>\n      <div><Badge variant=\"light\">{t(`effect:effect.target.${targetKey}`)}</Badge></div>\n      {Object.entries(details).map(entry => (<EffectDetail key={entry[0]} entry={entry as SkillEffectDetailsEntry}/>))}\n    </div>\n  );\n};\n\nexport default SkillEffectDetailsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\n\nimport SkillEffectConditionView from './SkillEffectConditionView';\nimport SkillEffectDetailsView from './SkillEffectDetailsView';\nimport { SkillType } from './UnitSkillList';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\nimport { useSkillEffects } from '../../hook/skill/SkillEffects';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectView: React.FC<{ effect: SkillEffect, unitNumber: UnitNumber, area: SkillAreaType }> = ({ effect, unitNumber, area }) => {\n  return (\n    <div\n      css={{\n        border: '1px solid rgba(255, 255, 255, 0.3)',\n        borderRadius: 5,\n        marginTop: 10,\n        padding: 5,\n        '& > .skill-effect-details:not(:first-of-type)': {\n          marginTop: 10\n        }\n      }}\n    >\n      <SkillEffectConditionView {...effect} unitNumber={unitNumber} />\n      {ifNonNullable(effect.details.self, self => (<SkillEffectDetailsView className='skill-effect-details' target='self' details={self} area={area} />))}\n      {ifNonNullable(effect.details.target, target => (<SkillEffectDetailsView className='skill-effect-details' target='target' details={target} area={area} />))}\n      {ifNonNullable(effect.details.around, around => (<SkillEffectDetailsView className='skill-effect-details' target='around' details={around} area={area} />))}\n    </div>\n  );\n};\n\nconst SkillEffectsView: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const values = useSkillEffects(skillType);\n\n  return (\n    ifNonNullable(\n      values,\n      ([effects, area, unitNumber]) => (\n        <div css={{ color: '#ccc', fontSize: '0.8em' }}>\n          {effects.map(effect => (<SkillEffectView key={JSON.stringify(effect)} effect={effect} unitNumber={unitNumber} area={area} />))}\n        </div>\n      )\n    )\n  );\n};\n\nexport default SkillEffectsView;\n","import { useRecoilValue } from 'recoil';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillType } from '../../component/skill/UnitSkillList';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { selectedUnitBasicInfoState } from '../../state/selector/unitSelectorState';\nimport {\n  unitActive1SkillState,\n  unitActive2SkillState,\n  unitPassive1SkillState,\n  unitPassive2SkillState,\n  unitPassive3SkillState\n} from '../../state/skill/unitSkillState';\n\nexport function useSkillEffects(skillType: SkillType): [effects: ReadonlyArray<SkillEffect>, area: SkillAreaType, unitNumber: UnitNumber] | undefined {\n  const unit = useRecoilValue(selectedUnitBasicInfoState);\n  switch (skillType) {\n  case 'active1': {\n    const skill = unit && useRecoilValue(unitActive1SkillState(unit));\n    return unit && skill && [skill.effects, skill.area, unit.no];\n  }\n  case 'active2': {\n    const skill = unit && useRecoilValue(unitActive2SkillState(unit));\n    return unit && skill && [skill.effects, skill.area, unit.no];\n  }\n  case 'passive1': {\n    const skill = unit && useRecoilValue(unitPassive1SkillState(unit));\n    return unit && skill && (\n      'effects' in skill ?\n        [skill.effects, skill.area, unit.no] :\n        [skill.equipment_effects, skill.area, unit.no]\n    );\n  }\n  case 'passive2': {\n    const skill = unit && useRecoilValue(unitPassive2SkillState(unit));\n    return unit && skill && [skill.effects, skill.area, unit.no];\n  }\n  case 'passive3': {\n    const skill = unit && useRecoilValue(unitPassive3SkillState(unit));\n    return unit && skill && [skill.effects, skill.area, unit.no];\n  }\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { CSSObject, Theme, jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { Interpolation } from '@emotion/serialize';\nimport { useRecoilValue } from 'recoil';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge, Col, Container, Row, Tab } from 'react-bootstrap';\nimport AreaOfEffectGrid from './AreaOfEffectGrid';\nimport DamageDealView from './DamageDealView';\nimport EffectsAsEquipmentDescriptionView from './EffectsAsEquipmentDescriptionView';\nimport NumberValueDropdown from '../common/NumberValueDropdown';\nimport SkillEffectsView from './SkillEffectsView';\nimport { SkillType } from './UnitSkillList';\n\nimport { SkillLv } from '../../domain/skill/UnitSkillLvValue';\n\nimport { selectedUnitBasicInfoState } from '../../state/selector/unitSelectorState';\nimport {\n  useFormChangeSkillBadge,\n  useRankUpSkillBadge,\n  useSkillCost,\n  useSkillLvState,\n  useSkillName,\n  useSkillRange\n} from '../../hook/skill/Skill';\n\nimport { ifNonNullable, ifTruthy } from '../../util/react';\n\nimport './RankUpSkillBadge.css';\n\nconst skillLabelFontStyle: CSSObject = {\n  fontSize: '1.2em',\n  color: '#ccc'\n};\nconst skillValueFontSizeStyle: CSSObject = {\n  fontSize: '1.2em',\n  fontWeight: 'bold'\n};\nconst skillLabelStyle: CSSObject = {\n  ...skillLabelFontStyle,\n  display: 'inline-block',\n  width: '4em'\n};\nconst skillBadgeStyle: CSSObject = {\n  fontSize: '1.2em'\n};\n\nconst NestedContainer: React.FC<{ css?: Interpolation<Theme>, children: ReactNode }> = ({ children, ...others }) => (\n  <Container\n    {...others}\n    fluid\n    css={{ padding: 0 }}\n  >\n    {children}\n  </Container>\n);\n\nconst SkillNameView: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const name = useSkillName(skillType);\n\n  return (\n    <div\n      css={{\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n      }}\n      title={name}\n    >\n      {name}\n    </div>\n  );\n};\n\nconst SkillCostView: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const cost = useSkillCost(skillType);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#0af' }}>{cost}</span>);\n};\n\nconst SkillRangeView: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const range = useSkillRange(skillType);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#cc0' }}>{range}</span>);\n};\n\nconst RankUpSkillBadge: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const { t } = useTranslation();\n  const isRankUpSkill = useRankUpSkillBadge(skillType);\n\n  return (\n    ifTruthy(\n      isRankUpSkill,\n      (<div css={skillBadgeStyle}><Badge variant=\"rank-up-skill\">{t('skill.rank_up')}</Badge></div>)\n    )\n  );\n};\n\nconst FormChangeSkillBadge: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const { t } = useTranslation();\n  const form = useFormChangeSkillBadge(skillType);\n\n  return (\n    ifNonNullable(\n      form,\n      v => (<div css={skillBadgeStyle}><Badge variant=\"secondary\">{t(`effect:form.${v}`)}</Badge></div>)\n    )\n  );\n};\n\nconst skillLvItems = [...Array(10)].map((v, i) => 10 - i) as ReadonlyArray<SkillLv>;\n\nconst SkillLvDropdown: React.FC<{ skillType: SkillType }> = ({ skillType }) => {\n  const { t } = useTranslation();\n  const [skillLv, setSkillLv] = useSkillLvState(skillType);\n\n  return (\n    <div css={{\n      display: 'flex',\n      userSelect: 'none'\n    }}>\n      <span css={{ marginRight: 5 }}>{t('lv')}</span>\n      <NumberValueDropdown\n        css={{ flexShrink: 0 }}\n        id=\"skill-lv-dropdown\"\n        items={skillLvItems}\n        value={skillLv}\n        onChange={setSkillLv}\n      />\n    </div>\n  );\n};\n\nconst SkillPane: React.FC<{ eventKey: SkillType }> = ({ eventKey }) => {\n  const { t } = useTranslation();\n  const selectedUnit = useRecoilValue(selectedUnitBasicInfoState);\n\n  return (\n    <Tab.Pane eventKey={eventKey}>\n      {ifTruthy(\n        !!selectedUnit,\n        (\n          <Container\n            fluid\n            css={{ paddingTop: 5 }}\n          >\n            <Row css={{ fontSize: '1.4em', color: '#eee' }}>\n              <Col xs={8} sm={9}>\n                <SkillNameView skillType={eventKey} />\n              </Col>\n              <Col xs={4} sm={3}>\n                <SkillLvDropdown skillType={eventKey} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={{ order: 'last', span: 12 }} sm={{ order: 'first', span: 9 }}>\n                <DamageDealView skillType={eventKey} />\n                <EffectsAsEquipmentDescriptionView skillType={eventKey} />\n                <SkillEffectsView skillType={eventKey} />\n              </Col>\n              <Col xs={{ order: 'first', span: 12 }} sm={{ order: 'last', span: 3 }}>\n                <NestedContainer css={{ userSelect: 'none' }}>\n                  <Row>\n                    <Col xs={8} sm={12}>\n                      <NestedContainer>\n                        <Row css={{ '& > div': { marginTop: 5 } }}>\n                          <Col xs={{ order: 1, span: 12 }} sm={{ order: 2, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.ap')}</span>\n                            <SkillCostView skillType={eventKey} />\n                          </Col>\n                          <Col xs={{ order: 2, span: 12 }} sm={{ order: 3, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.range')}</span>\n                            <SkillRangeView skillType={eventKey} />\n                          </Col>\n                          <Col xs={{ order: 3, span: 12 }} sm={{ order: 1, span: 12 }}>\n                            <RankUpSkillBadge skillType={eventKey} />\n                            <FormChangeSkillBadge skillType={eventKey} />\n                          </Col>\n                        </Row>\n                      </NestedContainer>\n                    </Col>\n                    <Col xs={4} sm={12} css={{ '& > div': { marginTop: 5 } }}>\n                      <div>\n                        <span css={{ color: '#ccc' }}>{t('skill.area')}</span>\n                      </div>\n                      <AreaOfEffectGrid css={{ width: 100 }} skillType={eventKey} />\n                    </Col>\n                  </Row>\n                </NestedContainer>\n              </Col>\n            </Row>\n          </Container>\n        )\n      )}\n    </Tab.Pane>\n  );\n};\n\nexport default SkillPane;\n","import { useRecoilState, useRecoilValue } from 'recoil';\nimport { useTranslation } from 'react-i18next';\n\nimport { selectedUnitBasicInfoState } from '../../state/selector/unitSelectorState';\nimport {\n  selectedUnitActive1SkillState,\n  selectedUnitActive2SkillState,\n  selectedUnitSkillState,\n  unitPassive1SkillState,\n  unitPassive2SkillState,\n  unitPassive3SkillState, unitSkillState\n} from '../../state/skill/unitSkillState';\n\nimport { SkillApCostValue, SkillRangeValue } from '../../domain/skill/UnitSkillData';\nimport { SkillLv } from '../../domain/skill/UnitSkillLvValue';\nimport { SkillType } from '../../component/skill/UnitSkillList';\nimport { UnitForms } from '../../domain/UnitFormValue';\nimport { isFormChangeUnitSkill } from '../../domain/skill/UnitSkill';\n\nexport function useSkillName(skillType: SkillType): string | undefined {\n  const { t } = useTranslation();\n  const selected = useRecoilValue(selectedUnitBasicInfoState);\n  if (!selected) {\n    return undefined;\n  }\n\n  const skill = useRecoilValue(unitSkillState(selected));\n  const unit = selected.no;\n  switch (skillType) {\n  case 'active1':\n    return isFormChangeUnitSkill(skill) && skill.hasFormActive1Skill() ?\n      t('skill:form_active', { unit, no: 1, form: skill.unitForm() }) :\n      t('skill:active', { unit, no: 1 });\n  case 'active2':\n    return isFormChangeUnitSkill(skill) && skill.hasFormActive2Skill() ?\n      t('skill:form_active', { unit, no: 2, form: skill.unitForm() }) :\n      t('skill:active', { unit, no: 2 });\n  case 'passive1': {\n    const ps = useRecoilValue(unitPassive1SkillState(selected));\n    return ps ?\n      isFormChangeUnitSkill(skill) && skill.hasFormPassive1Skill() ?\n        t('skill:form_passive', { unit, no: 1, form: skill.unitForm() }) :\n        t('skill:passive', { unit, no: 1 }) :\n      undefined;\n  }\n  case 'passive2': {\n    const ps = useRecoilValue(unitPassive2SkillState(selected));\n    return ps ?\n      isFormChangeUnitSkill(skill) && skill.hasFormPassive2Skill() ?\n        t('skill:form_passive', { unit, no: 2, form: skill.unitForm() }) :\n        t('skill:passive', { unit, no: 2 }) :\n      undefined;\n  }\n  case 'passive3': {\n    const ps = useRecoilValue(unitPassive3SkillState(selected));\n    return ps ?\n      isFormChangeUnitSkill(skill) && skill.hasFormPassive3Skill() ?\n        t('skill:form_passive', { unit, no: 3, form: skill.unitForm() }) :\n        t('skill:passive', { unit, no: 3 }) :\n      undefined;\n  }\n  }\n}\n\nexport function useSkillCost(skillType: SkillType): SkillApCostValue | string {\n  const { t } = useTranslation('common');\n\n  switch (skillType) {\n  case 'active1':\n    return useRecoilValue(selectedUnitActive1SkillState)?.cost ?? t('empty') as string;\n  case 'active2':\n    return useRecoilValue(selectedUnitActive2SkillState)?.cost ?? t('empty') as string;\n  case 'passive1':\n  case 'passive2':\n  case 'passive3':\n    return t('empty') as string;\n  }\n}\n\nexport function useSkillRange(skillType: SkillType): SkillRangeValue | string {\n  const { t } = useTranslation('common');\n\n  switch (skillType) {\n  case 'active1':\n    return useRecoilValue(selectedUnitActive1SkillState)?.range ?? t('empty') as string;\n  case 'active2':\n    return useRecoilValue(selectedUnitActive2SkillState)?.range ?? t('empty') as string;\n  case 'passive1':\n  case 'passive2':\n  case 'passive3':\n    return t('empty') as string;\n  }\n}\n\nexport function useRankUpSkillBadge(skillType: SkillType): boolean {\n  const skill = useRecoilValue(selectedUnitSkillState);\n\n  switch (skillType) {\n  case 'passive1':\n    return skill?.isPassive1RankUpSkill ?? false;\n  case 'passive2':\n    return skill?.isPassive2RankUpSkill ?? false;\n  case 'passive3':\n    return skill?.isPassive3RankUpSkill ?? false;\n  case 'active1':\n  case 'active2':\n    return false;\n  }\n}\n\nexport function useFormChangeSkillBadge(skillType: SkillType): UnitForms | undefined {\n  const skill = useRecoilValue(selectedUnitSkillState);\n  if (!skill) {\n    return undefined;\n  }\n\n  switch (skillType) {\n  case 'active1':\n    return isFormChangeUnitSkill(skill) && skill.hasFormActive1Skill() ? skill.unitForm() : undefined;\n  case 'active2':\n    return isFormChangeUnitSkill(skill) && skill.hasFormActive2Skill() ? skill.unitForm() : undefined;\n  case 'passive1':\n    return isFormChangeUnitSkill(skill) && skill.hasFormPassive1Skill() ? skill.unitForm() : undefined;\n  case 'passive2':\n    return isFormChangeUnitSkill(skill) && skill.hasFormPassive2Skill() ? skill.unitForm() : undefined;\n  case 'passive3':\n    return isFormChangeUnitSkill(skill) && skill.hasFormPassive3Skill() ? skill.unitForm() : undefined;\n  }\n}\n\nexport function useSkillLvState(skillType: SkillType): [skillLv: SkillLv, setSkillLv: (skillLv: SkillLv) => void] {\n  const [skill, setSkill] = useRecoilState(selectedUnitSkillState);\n\n  switch (skillType) {\n  case 'active1': return [skill?.skillLv.active1Lv ?? 10, (lv) => setSkill(s => s?.changeActive1SkillLv(lv))];\n  case 'active2': return [skill?.skillLv.active2Lv ?? 10, (lv) => setSkill(s => s?.changeActive2SkillLv(lv))];\n  case 'passive1': return [skill?.skillLv.passive1Lv ?? 10, (lv) => setSkill(s => s?.changePassive1SkillLv(lv))];\n  case 'passive2': return [skill?.skillLv.passive2Lv ?? 10, (lv) => setSkill(s => s?.changePassive2SkillLv(lv))];\n  case 'passive3': return [skill?.skillLv.passive3Lv ?? 10, (lv) => setSkill(s => s?.changePassive3SkillLv(lv))];\n  }\n}\n"],"sourceRoot":""}