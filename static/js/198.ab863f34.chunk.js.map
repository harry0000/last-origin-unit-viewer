{"version":3,"file":"static/js/198.ab863f34.chunk.js","mappings":"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","sources":["component/status/SlotUnavailableOverlay.tsx","component/status/equipment/EquipmentItemView.tsx","component/status/equipment/EquipmentPlaceholder.tsx","component/status/equipment/EquipmentRankToggleButton.tsx","state/equipment/availableEquipment.ts","component/status/equipment/EquipmentSelector.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport SVGIcon from '../icon/SVGIcon';\nimport { LockClosed } from '../icon/FluentIcons';\n\nimport { CoreLinkSlotAvailableLv } from '../../domain/UnitCoreLink';\nimport { EquipmentSlotAvailableLv } from '../../domain/equipment/UnitEquipment';\n\nimport { ifTruthy } from '../../util/react';\n\nconst SlotUnavailableOverlay: React.FC<{\n  show: boolean,\n  availableLv: CoreLinkSlotAvailableLv | EquipmentSlotAvailableLv\n}> = React.memo(({ show, availableLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    ifTruthy(\n      show,\n      (<span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.75)'\n        }}>\n        <SVGIcon css={{ height: 24, width: 24 }}>\n          <LockClosed/>\n        </SVGIcon>\n        <span css={{ color: '#ccc', fontWeight: 'bold' }}>\n          {t('lv')}&nbsp;{availableLv}\n        </span>\n      </span>)\n    )\n  );\n});\n\nexport default SlotUnavailableOverlay;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\n\nimport { EquipmentEnhancementLevel, EquipmentId, EquipmentRank, EquipmentType } from '../../../domain/equipment/EquipmentData';\n\nconst EquipmentItemView: React.FC<{\n  equipmentId: EquipmentId,\n  equipmentType: EquipmentType,\n  equipmentRank: EquipmentRank,\n  enhancementLv: EquipmentEnhancementLevel\n}> = ({ equipmentId, equipmentType, equipmentRank, enhancementLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ position: 'relative', display: 'inline-block' }}>\n      <Image\n        fluid\n        rounded\n        draggable=\"false\"\n        sizes=\"(max-width: 480px) 47px, (min-width: 480px) 62px\"\n        alt={t(`equipment:${equipmentId}`)}\n        src={`${process.env.PUBLIC_URL}/equip_icon/${equipmentType}_${equipmentId}_${equipmentRank}.webp`}\n      />\n      <Image\n        draggable=\"false\"\n        css={{ position: 'absolute', top: -10, left: -5 }}\n        height={28}\n        width={28}\n        alt={`${t(`equipment:rank.${equipmentRank}`)} ${t(`equipment:type.${equipmentType}`)}`}\n        src={`${process.env.PUBLIC_URL}/icon/${equipmentType}_${equipmentRank}.webp`}\n      />\n      <span\n        css={{\n          position: 'absolute',\n          top: -5,\n          right: 0,\n          color: '#fff',\n          fontSize: '0.9em',\n          fontWeight: 'bold',\n          textShadow: [\n            '1px 1px 0px #000, -1px -1px 0px #000',\n            '-1px 1px 0px #000,  1px -1px 0px #000',\n            '1px 0px 0px #000, -1px  0px 0px #000',\n            '0px 1px 0px #000,  0px -1px 0px #000'\n          ].join()\n        }}\n      >\n        +{enhancementLv}\n      </span>\n    </span>\n  );\n};\n\nexport default EquipmentItemView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\n\nimport { EquipmentType } from '../../../domain/equipment/EquipmentData';\n\nconst EquipmentPlaceholder: React.FC<{ type: EquipmentType }> = React.memo(({ type }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span\n      css={{\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        opacity: 0.5\n      }}\n    >\n      <Image\n        rounded\n        draggable=\"false\"\n        height={32}\n        width={32}\n        alt={t(`equipment:type.${type}`)}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_${type}.webp`}\n      />\n    </span>\n  );\n});\n\nexport default EquipmentPlaceholder;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\n\nimport { EquipmentSlotRank } from '../../../state/equipment/UnitEquipmentState';\nimport { useEquipmentRankSelector } from '../../../state/equipment/UnitEquipmentHook';\n\nimport './EquipmentRankToggleButton.css';\n\ntype EquipmentRankToggleButtonProps =\n  { slot: 'chip1', rank: EquipmentSlotRank<'chip1'> } |\n  { slot: 'chip2', rank: EquipmentSlotRank<'chip2'> } |\n  { slot: 'os',    rank: EquipmentSlotRank<'os'> } |\n  { slot: 'gear',  rank: EquipmentSlotRank<'gear'> }\n\nconst EquipmentRankToggleButton: React.FC<EquipmentRankToggleButtonProps> = ({ slot, rank }) => {\n  const { t } = useTranslation();\n  const [selected, select] = useEquipmentRankSelector(slot, rank);\n\n  return (\n    <ButtonGroup toggle>\n      <ToggleButton\n        type='checkbox'\n        variant=\"equipment-rank\"\n        className={rank}\n        value={1}\n        checked={selected}\n        onChange={select}\n      >\n        {t(`equipment.rank.${rank}`)}\n      </ToggleButton>\n    </ButtonGroup>\n  );\n};\n\nexport default EquipmentRankToggleButton;\n","import { selectorFamily, useRecoilValue } from 'recoil';\n\nimport {\n  availableRank,\n  Chip,\n  EquipmentData,\n  EquipmentRank,\n  Gear,\n  isChipEquipment,\n  isGearEquipment,\n  isOsEquipment,\n  matchExclusive,\n  Os\n} from '../../domain/equipment/EquipmentData';\nimport { UnitBasicInfo, UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { equipmentData } from '../../data/equipmentData';\n\nimport { EquipmentSlot, selectedEquipmentRankState } from './UnitEquipmentState';\n\nfunction pickEquipment(unit: UnitNumber, rank: EquipmentRank) {\n  return function<T extends EquipmentData>(equipment: T) {\n    return matchExclusive(unit, equipment) && availableRank(equipment, rank);\n  };\n}\n\nconst chipEquipment = Object.values(equipmentData).filter(isChipEquipment);\nconst osEquipment   = Object.values(equipmentData).filter(isOsEquipment);\nconst gearEquipment = Object.values(equipmentData).filter(isGearEquipment);\n\nconst availableChipEquipmentState = selectorFamily<ReadonlyArray<Chip>, [unit: UnitNumber, slot: 'chip1' | 'chip2']>({\n  key: 'availableChipEquipmentState',\n  get: ([unit, slot]) => ({ get }) => {\n    const rank = get(selectedEquipmentRankState(slot));\n    return chipEquipment.filter(pickEquipment(unit, rank));\n  }\n});\n\nconst availableOsEquipmentState = selectorFamily<ReadonlyArray<Os>, UnitNumber>({\n  key: 'availableOsEquipmentState',\n  get: (unit) => ({ get }) => {\n    const rank = get(selectedEquipmentRankState('os'));\n    return osEquipment.filter(pickEquipment(unit, rank));\n  }\n});\n\nconst availableGearEquipmentState = selectorFamily<ReadonlyArray<Gear>, UnitNumber>({\n  key: 'availableGearEquipmentState',\n  get: (unit) => ({ get }) => {\n    const rank = get(selectedEquipmentRankState('gear'));\n    return gearEquipment.filter(pickEquipment(unit, rank));\n  }\n});\n\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: 'chip1' | 'chip2'): ReadonlyArray<Chip>\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: 'os'): ReadonlyArray<Os>\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: 'gear'): ReadonlyArray<Gear>\nexport function useAvailableEquipment(unit: UnitBasicInfo, slot: EquipmentSlot): ReadonlyArray<Chip | Os | Gear> {\n  switch (slot) {\n  case 'chip1':\n  case 'chip2':\n    return useRecoilValue(availableChipEquipmentState([unit.no, slot]));\n  case 'os':\n    return useRecoilValue(availableOsEquipmentState(unit.no));\n  case 'gear':\n    return useRecoilValue(availableGearEquipmentState(unit.no));\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge, Dropdown, Image } from 'react-bootstrap';\nimport EquipmentItemView from './EquipmentItemView';\nimport EquipmentPlaceholder from './EquipmentPlaceholder';\nimport EquipmentRankToggleButton from './EquipmentRankToggleButton';\nimport RoundedToggleButton from '../../common/RoundedToggleButton';\nimport SlotUnavailableOverlay from '../SlotUnavailableOverlay';\n\nimport {\n  Chip,\n  ChipEquipmentRanks,\n  EquipmentEnhancementLevel,\n  EquipmentId,\n  EquipmentType,\n  Gear,\n  GearEquipmentRanks,\n  Os,\n  OsEquipmentRanks\n} from '../../../domain/equipment/EquipmentData';\nimport { ChipEquipment, GearEquipment, OsEquipment } from '../../../domain/equipment/UnitEquipment';\nimport { UnitBasicInfo, UnitNumber } from '../../../domain/UnitBasicInfo';\n\nimport { EquipmentSlot } from '../../../state/equipment/UnitEquipmentState';\nimport {\n  useEquipmentAvailable,\n  useEquipmentEffects,\n  useEquipmentEffectsAsSkill,\n  useEquipmentEnhanceLvSelector,\n  useEquipmentRank,\n  useEquipmentStatusEffects,\n  useUnitEquipment\n} from '../../../state/equipment/UnitEquipmentHook';\nimport {\n  TranslatedEquipmentEffect,\n  TranslatedEquipmentEffectAsSkill,\n  isTranslatedEquipmentEffectAsSkillDetails\n} from '../../../state/equipment/EquipmentEffectsTranslator';\nimport { useAvailableEquipment } from '../../../state/equipment/availableEquipment';\nimport { useSelectedUnit } from '../../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable } from '../../../util/react';\n\nimport './EquipmentSelector.css';\n\ntype SlotEquipment<S extends EquipmentSlot> =\n  S extends 'chip1' | 'chip2' ? Chip :\n  S extends 'os' ? Os :\n  S extends 'gear' ? Gear :\n    never\n\ntype SlotEquipmentType<S extends EquipmentSlot> =\n  S extends 'chip1' | 'chip2' ? typeof EquipmentType.Chip :\n  S extends 'os' ? typeof EquipmentType.Os :\n  S extends 'gear' ? typeof EquipmentType.Gear :\n    never\n\ntype CurrentEquipment<S extends EquipmentSlot> =\n  S extends 'chip1' | 'chip2' ? ChipEquipment :\n  S extends 'os' ? OsEquipment :\n  S extends 'gear' ? GearEquipment :\n    never\n\ntype Props<S extends EquipmentSlot> = {\n  unit: UnitBasicInfo,\n  id: string,\n  slot: S,\n  type: SlotEquipmentType<S>,\n  value?: CurrentEquipment<S>,\n  items: ReadonlyArray<SlotEquipment<S>>,\n  onSelect: (equipment: SlotEquipment<S> | undefined) => void\n}\n\nconst EffectTypeHeader: React.FC<{ children: string }> = ({ children }) => {\n  return (<div className=\"header\">{children}</div>);\n};\n\nconst EquipmentEnhancementLvSelector: React.FC<{ slot: EquipmentSlot, unit: UnitNumber }> = ({ slot, unit }) => {\n  const SelectorButton = ({ enhanceLv }: { enhanceLv: EquipmentEnhancementLevel }) => {\n    const [selected, select] = useEquipmentEnhanceLvSelector(slot, unit, enhanceLv);\n\n    return (<RoundedToggleButton selected={selected} onChange={select}>+&nbsp;{enhanceLv}</RoundedToggleButton>);\n  };\n\n  return (\n    <div className=\"equipment-enhancement\">\n      {([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10] as const).map(n => (\n        <SelectorButton key={n} enhanceLv={n} />\n      ))}\n    </div>\n  );\n};\n\nconst EquipmentRankSelector: React.FC<{ slot: EquipmentSlot }> = ({ slot }) => {\n  const rankToggleButtons = () => {\n    switch (slot) {\n    case 'chip1':\n    case 'chip2':\n      return ChipEquipmentRanks.map(rank => (\n        <EquipmentRankToggleButton key={rank} slot={slot} rank={rank} />\n      ));\n    case 'os':\n      return OsEquipmentRanks.map(rank => (\n        <EquipmentRankToggleButton key={rank} slot={slot} rank={rank} />\n      ));\n    case 'gear':\n      return GearEquipmentRanks.map(rank => (\n        <EquipmentRankToggleButton key={rank} slot={slot} rank={rank} />\n      ));\n    }\n  };\n\n  return (\n    <div className=\"equipment-rank\">\n      {rankToggleButtons()}\n    </div>\n  );\n};\n\nconst EquipmentStatusEffects: React.FC<{ slot: EquipmentSlot, equipment: EquipmentId }> = ({ slot, equipment }) => {\n  const { t } = useTranslation();\n  const effects = useEquipmentStatusEffects(slot, equipment);\n\n  return (\n    <div className=\"status-effects\">\n      <EffectTypeHeader>{t('status.equipment_status_effect')}</EffectTypeHeader>\n      <div className=\"details\">{effects}</div>\n    </div>\n  );\n};\n\nconst EffectDetailList: React.FC<{\n  effects: ReadonlyArray<TranslatedEquipmentEffect> | ReadonlyArray<TranslatedEquipmentEffectAsSkill>\n}> = ({ effects }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {effects.map(e => {\n        const { condition, details } = e;\n        return (\n          <div key={JSON.stringify(e)}>\n            {ifNonNullable(condition, cond => (<div className=\"condition\">{cond}</div>))}\n            {\n              isTranslatedEquipmentEffectAsSkillDetails(details) ?\n                (<React.Fragment>\n                  {ifNonNullable(\n                    'self' in details ? details.self : undefined,\n                    self => (\n                      <React.Fragment>\n                        <Badge variant=\"light\">{t('effect:effect.target.self')}</Badge>\n                        <EffectDetailRows details={self} />\n                      </React.Fragment>\n                    )\n                  )}\n                  {ifNonNullable(\n                    'target' in details ? details.target : undefined,\n                    target => (\n                      <React.Fragment>\n                        <Badge variant=\"light\">{t('effect:effect.target.target')}</Badge>\n                        <EffectDetailRows details={target} />\n                      </React.Fragment>\n                    )\n                  )}\n                </React.Fragment>) :\n                (<EffectDetailRows details={details} />)\n            }\n          </div>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\nconst EffectDetailRows: React.FC<{\n  details: TranslatedEquipmentEffect['details']\n}> = ({ details }) => {\n  return (\n    <React.Fragment>\n      {details.map(({ detail, term }) => (\n        <div key={detail} className=\"detail\">\n          <div>{detail}</div>\n          {ifNonNullable(term, v => (\n            <div className=\"term\"><span css={{ color: '#aaa', fontSize: '0.9em' }}>{v}</span></div>\n          ))}\n        </div>\n      ))}\n    </React.Fragment>\n  );\n};\n\nconst EquipmentEffects: React.FC<{ slot: EquipmentSlot, equipment: EquipmentId }> = ({ slot, equipment }) => {\n  const { t } = useTranslation();\n  const effects = useEquipmentEffects(slot, equipment);\n\n  return ifNonNullable(\n    effects,\n    e => (\n      <div className=\"effects\">\n        <EffectTypeHeader>{t('status.equipment_effect')}</EffectTypeHeader>\n        <EffectDetailList effects={e} />\n      </div>\n    )\n  );\n};\n\nconst EquipmentEffectsAsSkill: React.FC<{ slot: EquipmentSlot, equipment: EquipmentId }> = ({ slot, equipment }) => {\n  const { t } = useTranslation();\n  const effects = useEquipmentEffectsAsSkill(slot, equipment);\n\n  return ifNonNullable(\n    effects,\n    e => (\n      <div className=\"effects\">\n        <EffectTypeHeader>{t('status.equipment_effect_as_skill')}</EffectTypeHeader>\n        <EffectDetailList effects={e} />\n      </div>\n    )\n  );\n};\n\nconst EquipmentItem: React.FC<{\n  slot: EquipmentSlot,\n  eventKey: EquipmentId,\n  active: boolean,\n  label: string,\n  src: string\n}> = ({ slot, eventKey, active, label, src, ...rest }) => {\n  return (\n    <Dropdown.Item\n      {...rest}\n      className=\"equipment\"\n      eventKey={eventKey}\n      active={active}\n    >\n      <div className=\"icon\">\n        <Image\n          draggable=\"false\"\n          height={48}\n          width={48}\n          alt={label}\n          src={src}\n        />\n        <span className=\"label\">{label}</span>\n      </div>\n      <div className=\"details\">\n        <EquipmentStatusEffects slot={slot} equipment={eventKey} />\n        <EquipmentEffects slot={slot} equipment={eventKey} />\n        <EquipmentEffectsAsSkill slot={slot} equipment={eventKey} />\n      </div>\n    </Dropdown.Item>\n  );\n};\n\nconst RemoveEquipmentItem: React.FC<{\n  active: boolean,\n  type: SlotEquipmentType<EquipmentSlot>\n}> = ({ active, type, ...rest }) => {\n  const { t } = useTranslation();\n  const label = t('status.remove_equipment');\n\n  return (\n    <Dropdown.Item\n      {...rest}\n      className=\"equipment remove\"\n      active={active}\n    >\n      <div className=\"icon\">\n        <Image\n          draggable=\"false\"\n          height={48}\n          width={48}\n          alt={label}\n          src={`${process.env.PUBLIC_URL}/icon/placeholder_${type}.webp`}\n        />\n      </div>\n      <div className=\"details\">{label}</div>\n    </Dropdown.Item>\n  );\n};\n\nconst EquipmentSelectorMenu = <T extends EquipmentSlot>(\n  { unit, slot, type, value, items, ...rest }: Omit<Props<T>, 'id' | 'onSelect'>\n): ReturnType<React.FC<Omit<Props<T>, 'id' | 'onSelect'>>> => {\n  const { t } = useTranslation();\n  const rank = useEquipmentRank(slot);\n\n  return (\n    <Dropdown.Menu {...rest} className=\"equipment\">\n      <EquipmentEnhancementLvSelector slot={slot} unit={unit.no} />\n      <EquipmentRankSelector slot={slot} />\n      <div className=\"equipment-list\">\n        <RemoveEquipmentItem type={type} active={!value?.id} />\n        {items.map(item => (\n          <EquipmentItem\n            key={item.id}\n            slot={slot}\n            eventKey={item.id}\n            active={item.id === value?.id && rank === value?.rank}\n            label={t(`equipment:${item.id}`)}\n            src={`${process.env.PUBLIC_URL}/equip_icon/${item.type}_${item.id}_${rank}.webp`}\n          />\n        ))}\n      </div>\n    </Dropdown.Menu>\n  );\n};\n\nconst EquipmentSlotUnavailableOverlay: React.FC<{ unit: UnitBasicInfo, slot: EquipmentSlot }> = ({ unit, slot }) => {\n  const [available, availableLv] = useEquipmentAvailable(unit, slot);\n  return (<SlotUnavailableOverlay show={!available} availableLv={availableLv} />);\n};\n\nconst EquipmentToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    id: string,\n    children: ReactNode\n  }\n>(({ onClick, id, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\nconst EquipmentDropdown = <T extends EquipmentSlot>(\n  { id, unit, slot, type, value, onSelect, items }: Props<T>\n): ReturnType<React.FC<Props<T>>> => {\n  return (\n    <Dropdown\n      className=\"slot equipment\"\n      onSelect={(eventKey) => {\n        if (eventKey) {\n          const item = items.find((item: SlotEquipment<T>) => item.id === eventKey);\n          item && onSelect(item);\n        } else {\n          onSelect(undefined);\n        }\n      }}\n    >\n      <Dropdown.Toggle as={EquipmentToggle} id={id}>\n        <span className=\"equipment-toggle-view\">\n          {value ?\n            (<EquipmentItemView\n              equipmentId={value.id}\n              equipmentType={type}\n              equipmentRank={value.rank}\n              enhancementLv={value.enhanceLv}\n            />) :\n            <EquipmentPlaceholder type={type} />}\n          <EquipmentSlotUnavailableOverlay unit={unit} slot={slot} />\n        </span>\n      </Dropdown.Toggle>\n      <EquipmentSelectorMenu unit={unit} slot={slot} type={type} value={value} items={items} />\n    </Dropdown>\n  );\n};\n\nconst Chip1EquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'chip1');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'chip1');\n  return (\n    <EquipmentDropdown\n      id=\"chip1-equipment-dropdown\"\n      unit={unit}\n      slot=\"chip1\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst Chip2EquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'chip2');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'chip2');\n  return (\n    <EquipmentDropdown\n      id=\"chip2-equipment-dropdown\"\n      unit={unit}\n      slot=\"chip2\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst OsEquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'os');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'os');\n  return (\n    <EquipmentDropdown\n      id=\"os-equipment-dropdown\"\n      unit={unit}\n      slot=\"os\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst GearEquipmentDropdown: React.FC<{ unit: UnitBasicInfo }> = ({ unit }) => {\n  const items = useAvailableEquipment(unit, 'gear');\n  const [type, equipment, equip] = useUnitEquipment(unit, 'gear');\n  return (\n    <EquipmentDropdown\n      id=\"gear-equipment-dropdown\"\n      unit={unit}\n      slot=\"gear\"\n      type={type}\n      value={equipment}\n      onSelect={equip}\n      items={items}\n    />\n  );\n};\n\nconst EquipmentSelector: React.FC<{ slot: EquipmentSlot }> = ({ slot }) => {\n  const selected = useSelectedUnit();\n\n  return ifNonNullable(\n    selected,\n    unit => {\n      switch (slot) {\n      case 'chip1': return (<Chip1EquipmentDropdown unit={unit} />);\n      case 'chip2': return (<Chip2EquipmentDropdown unit={unit} />);\n      case 'os':    return (<OsEquipmentDropdown unit={unit} />);\n      case 'gear':  return (<GearEquipmentDropdown unit={unit} />);\n      }\n    }\n  );\n};\n\nexport default EquipmentSelector;\n"],"names":["SlotUnavailableOverlay","React","_ref","show","availableLv","t","useTranslation","ifTruthy","jsx","css","display","flexDirection","alignItems","justifyContent","position","inset","backgroundColor","SVGIcon","height","width","LockClosed","color","fontWeight","equipmentId","equipmentType","equipmentRank","enhancementLv","Image","fluid","rounded","draggable","sizes","alt","concat","src","process","top","left","right","fontSize","textShadow","join","type","opacity","slot","rank","_useEquipmentRankSele","useEquipmentRankSelector","_useEquipmentRankSele2","_slicedToArray","selected","select","ButtonGroup","toggle","ToggleButton","variant","className","value","checked","onChange","pickEquipment","unit","equipment","matchExclusive","availableRank","chipEquipment","Object","values","equipmentData","filter","isChipEquipment","osEquipment","isOsEquipment","gearEquipment","isGearEquipment","availableChipEquipmentState","selectorFamily","key","get","_ref2","_ref3","selectedEquipmentRankState","availableOsEquipmentState","_ref4","availableGearEquipmentState","_ref5","useAvailableEquipment","useRecoilValue","no","EffectTypeHeader","children","EquipmentEnhancementLvSelector","SelectorButton","enhanceLv","_useEquipmentEnhanceL","useEquipmentEnhanceLvSelector","_useEquipmentEnhanceL2","RoundedToggleButton","map","n","EquipmentRankSelector","ChipEquipmentRanks","EquipmentRankToggleButton","OsEquipmentRanks","GearEquipmentRanks","rankToggleButtons","EquipmentStatusEffects","effects","useEquipmentStatusEffects","EffectDetailList","_ref6","e","condition","details","JSON","stringify","ifNonNullable","cond","isTranslatedEquipmentEffectAsSkillDetails","self","undefined","Badge","EffectDetailRows","target","_ref7","_ref8","detail","term","v","EquipmentEffects","_ref9","useEquipmentEffects","EquipmentEffectsAsSkill","_ref10","useEquipmentEffectsAsSkill","EquipmentItem","_ref11","eventKey","active","label","rest","_objectWithoutProperties","_excluded","Dropdown","_extends","RemoveEquipmentItem","_ref12","_excluded2","EquipmentSelectorMenu","_ref13","items","_excluded3","useEquipmentRank","id","item","EquipmentSlotUnavailableOverlay","_ref14","_useEquipmentAvailabl","useEquipmentAvailable","_useEquipmentAvailabl2","available","EquipmentToggle","_ref15","ref","onClick","href","preventDefault","EquipmentDropdown","_ref16","onSelect","find","as","EquipmentItemView","EquipmentPlaceholder","Chip1EquipmentDropdown","_ref17","_useUnitEquipment","useUnitEquipment","_useUnitEquipment2","equip","Chip2EquipmentDropdown","_ref18","_useUnitEquipment3","_useUnitEquipment4","OsEquipmentDropdown","_ref19","_useUnitEquipment5","_useUnitEquipment6","GearEquipmentDropdown","_ref20","_useUnitEquipment7","_useUnitEquipment8","_ref21","useSelectedUnit"],"sourceRoot":""}