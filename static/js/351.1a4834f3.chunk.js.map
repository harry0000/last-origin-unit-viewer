{"version":3,"file":"static/js/351.1a4834f3.chunk.js","mappings":"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","sources":["component/skill/AreaOfEffectGrid.tsx","../node_modules/react-bootstrap/esm/Container.js","../node_modules/react-bootstrap/esm/Row.js","component/skill/AttributeColorStyle.ts","component/skill/DamageDealView.tsx","component/skill/EffectsAsEquipmentDescriptionView.tsx","component/skill/UnitAliasView.tsx","component/skill/SkillEffectTargetView.tsx","component/skill/SkillEffectConditionViewModel.ts","component/skill/SkillEffectConditionView.tsx","component/skill/SkillEffectsTranslator.ts","component/skill/SkillEffectDetailsView.tsx","component/skill/SkillEffectsView.tsx","component/skill/SkillPane.tsx","component/skill/UnitFormSelector.tsx","component/skill/UnitSkillList.tsx","../node_modules/react-bootstrap/esm/Col.js"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { CSSPropertiesWithMultiValues } from '@emotion/serialize/dist/declarations/types';\nimport { Interpolation } from '@emotion/serialize';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { AreaOfEffectCellType } from './AreaOfEffectCellType';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { useSkillArea } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst cellColorStyle = {\n  [AreaOfEffectCellType.Effective]: '#d0191d',\n  [AreaOfEffectCellType.High]:      '#ff8f03',\n  [AreaOfEffectCellType.Middle]:    '#ba5a03',\n  [AreaOfEffectCellType.Low]:       '#763316',\n  [AreaOfEffectCellType.Weak]:      '#6b3f31',\n  [AreaOfEffectCellType.None]:      '#4b4b4d'\n} as const satisfies { [key in AreaOfEffectCellType]: string };\n\nconst overlayStyle: (type: AreaOfEffectCellType) => CSSPropertiesWithMultiValues | Record<string, never> = (type) =>\n  type !== AreaOfEffectCellType.None ?\n    {\n      borderRadius: 2,\n      position: 'absolute',\n      top: -3,\n      bottom: 4,\n      left: -3,\n      right: 4,\n      opacity: 0.8,\n      backgroundColor: cellColorStyle[type]\n    } as const satisfies CSSPropertiesWithMultiValues :\n    {};\n\nconst AreaOfEffectCell: React.FC<{ selected: boolean, type: AreaOfEffectCellType }> = ({ selected, type, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <td\n      css={{\n        border: '5px solid transparent',\n        width: '33%',\n        position: 'relative',\n        '&::after': {\n          content: '\" \"',\n          display: 'block',\n          marginTop: '100%'\n        }\n      }}\n    >\n      <div\n        css={{\n          borderRadius: 2,\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: selected ? '#16d4d4' : cellColorStyle[AreaOfEffectCellType.None]\n        }}\n      />\n      {\n        type === AreaOfEffectCellType.High ||\n        type === AreaOfEffectCellType.Middle ||\n        type === AreaOfEffectCellType.Low ||\n        type === AreaOfEffectCellType.Weak ?\n          (<OverlayTrigger\n            {...rest}\n            placement='auto'\n            overlay={<Tooltip id='tooltip-aoe-cell'>{t(`skill.effective_rate.${type}`)}</Tooltip>}\n          >\n            <div css={overlayStyle(type)} />\n          </OverlayTrigger>) :\n          <div css={overlayStyle(type)} />\n      }\n    </td>\n  );\n};\n\nconst AreaOfEffectGrid: React.FC<{\n  css?: Interpolation<Theme>,\n  skillType: SkillType,\n  unit: UnitBasicInfo\n}> = ({ skillType, unit, ...rest }) => {\n  const { t } = useTranslation();\n  const cellType = useSkillArea(skillType, unit);\n\n  return (\n    ifNonNullable(\n      cellType,\n      cell => (\n        <div {...rest}>\n          <table\n            css={{\n              borderCollapse: 'collapse',\n              width: '100%',\n              transform: 'skewX(-9deg)'\n            }}>\n            <tbody>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 7} type={cell.area[0]} />\n                <AreaOfEffectCell selected={cell.select === 8} type={cell.area[1]} />\n                <AreaOfEffectCell selected={cell.select === 9} type={cell.area[2]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 4} type={cell.area[3]} />\n                <AreaOfEffectCell selected={cell.select === 5} type={cell.area[4]} />\n                <AreaOfEffectCell selected={cell.select === 6} type={cell.area[5]} />\n              </tr>\n              <tr>\n                <AreaOfEffectCell selected={cell.select === 1} type={cell.area[6]} />\n                <AreaOfEffectCell selected={cell.select === 2} type={cell.area[7]} />\n                <AreaOfEffectCell selected={cell.select === 3} type={cell.area[8]} />\n              </tr>\n            </tbody>\n          </table>\n          {(<span css={{ color: '#16d4d4' }}>{!cell.select ? t('skill.fixed_area') : '\\u00A0'}</span>)}\n        </div>\n      )\n    )\n  );\n};\n\nexport default AreaOfEffectGrid;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"fluid\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      fluid = _ref.fluid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"noGutters\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      noGutters = _ref.noGutters,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import { DamageAttribute } from '../../domain/skill/UnitSkillData';\n\nexport const AttributeColorStyle: { [key in DamageAttribute]: string } = {\n  [DamageAttribute.Fire]: '#c33',\n  [DamageAttribute.Ice]: '#0cf',\n  [DamageAttribute.Electric]: '#fc0'\n};\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\nimport { calcValue } from '../../domain/ValueUnit';\n\nimport { AttributeColorStyle } from './AttributeColorStyle';\n\nimport { useDamageDeal } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst DamageDealView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const props = useDamageDeal(skillType, unit);\n  if (!props[0]) {\n    return null;\n  }\n\n  const [damage_deal, area] = props;\n\n  return (\n    <div css={{ color: '#ccc', marginTop: 10 }}>\n      <span>\n        {area === SkillAreaType.Single ?\n          t('effect:damage_deal.target.single') :\n          t('effect:damage_deal.target.area')}\n      </span>\n      {ifNonNullable(\n        damage_deal.effective,\n        effective => (<span>{t(`effect:effective.${effective}`)}{t('effect:separator')}</span>)\n      )}\n      <span>{t('status.atk')}</span>\n      <span css={{ margin: '0 5px', color: '#fc0', fontWeight: 'bold' }}>\n        {calcValue(damage_deal)}%\n      </span>\n      <span>{t('effect:as_preposition')}</span>\n      {ifNonNullable(\n        damage_deal.attribute,\n        attribute => (\n          <span css={{ margin: '0 5px', color: AttributeColorStyle[attribute], fontWeight: 600 }}>\n            {t(`effect:attribute.${attribute}`)}\n          </span>\n        )\n      )}\n      <span>{t('effect:damage')}</span>\n    </div>\n  );\n};\n\nexport default DamageDealView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\n\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport { useEffectsAsEquipmentDescription } from '../../state/skill/UnitSkillHook';\n\nimport { ifTruthy } from '../../util/react';\n\nconst EffectsAsEquipmentDescriptionView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const show = useEffectsAsEquipmentDescription(skillType, unit);\n\n  return (\n    ifTruthy(\n      show,\n      (<div css={{\n        color: '#ccc',\n        fontSize: '0.9em',\n        marginTop: 10\n      }}>\n        <span>{t('effect:effects_as_equipment.description.prefix')}</span>\n        <OverlayTrigger\n          placement='auto'\n          overlay={<Tooltip id='tooltip-effects-as-equipment'>{t('effect:effects_as_equipment.annotation')}</Tooltip>}\n        >\n          <span css={{ cursor: 'help', textDecoration: 'underline' }}>\n            {t('effect:effects_as_equipment.description.as_equipment')}\n          </span>\n        </OverlayTrigger>\n        <span>{t('effect:effects_as_equipment.description.suffix')}</span>\n      </div>)\n    )\n  );\n};\n\nexport default EffectsAsEquipmentDescriptionView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport { UnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\n\nconst UnitAliasView: React.FC<{\n  unitAlias: UnitAlias,\n  exceptUnit?: UnitNumber\n}> = ({ unitAlias, exceptUnit }) => {\n  const { t } = useTranslation();\n  const popover = (\n    <Popover id=\"popover-unit-alias\" css={{ opacity: '0.9' }}>\n      <Popover.Content>\n        {[...unitNumbersForAlias[unitAlias]]\n          .filter(n => n !== exceptUnit)\n          .map(n => (<div key={n} css={{ textAlign: 'left' }}>{t('unit:display', { number: n })}</div>))}\n      </Popover.Content>\n    </Popover>\n  );\n\n  return (\n    <OverlayTrigger\n      placement='auto'\n      overlay={popover}\n    >\n      <span css={{\n        display: 'inline-block',\n        cursor: 'help',\n        textDecoration: 'underline'\n      }}>\n        {t(`effect:unit.${unitAlias}`)}\n      </span>\n    </OverlayTrigger>\n  );\n};\n\nexport default UnitAliasView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport UnitAliasView from './UnitAliasView';\n\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { UnitNumber } from '../../domain/UnitBasicInfo';\nimport { isUnitAlias } from '../../domain/UnitAlias';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectTargetView: React.FC<{\n  target: SkillEffectTarget,\n  selfUnitNumber: UnitNumber\n}> = ({ target, selfUnitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <React.Fragment>\n      {t(`effect:effect.target.kind.${target.kind}`)}\n      {'conditions' in target ? t('effect:of_preposition') : null}\n      {\n        'conditions' in target && target.conditions ?\n          target.conditions.map((cond, i, arr ) => {\n            const separator: string = ++i < arr.length ? t('effect:unit_separator') : '';\n\n            if (typeof cond === 'number') {\n              return t('effect:with_quotes', { value: t('unit:display', { number: cond }) }) + separator;\n            } else if (typeof cond === 'string') {\n              return isUnitAlias(cond) ?\n                (\n                  <React.Fragment key={cond}>\n                    <UnitAliasView unitAlias={cond} exceptUnit={target.kind === SkillEffectTargetKind.AllyExceptSelf ? selfUnitNumber : undefined} />\n                    {separator}\n                  </React.Fragment>\n                ) :\n                t(`effect:unit.${cond}`) + separator;\n            } else if ('alias' in cond) {\n              const unit: string | null =\n                'type' in cond ?\n                  t(`effect:unit.${cond.type}`) :\n                  'role' in cond ?\n                    t(`effect:unit.${cond.role}`) :\n                    null;\n              const except = 'except' in cond ? cond.except : undefined;\n\n              return (\n                <React.Fragment key={JSON.stringify(cond)}>\n                  {ifNonNullable(\n                    except,\n                    v => (\n                      <React.Fragment>\n                        {\n                          v === selfUnitNumber ?\n                            t('effect:unit.self') :\n                            t('effect:with_quotes', { value: t('unit:display', { number: v }) })\n                        }\n                        {t('effect:except_preposition')}\n                      </React.Fragment>\n                    )\n                  )}\n                  <UnitAliasView unitAlias={cond.alias} exceptUnit={except} />\n                  {unit ? t('effect:of_preposition') : null}\n                  {unit}\n                  {separator}\n                </React.Fragment>\n              );\n            } else if ('not_alias' in cond) {\n              return (\n                <React.Fragment key={JSON.stringify(cond)}>\n                  <UnitAliasView unitAlias={cond.not_alias} />\n                  {t('effect:negative_form')}\n                  {'type' in cond ?\n                    t(`effect:unit.${cond.type}`) :\n                    'role' in cond ?\n                      t(`effect:unit.${cond.role}`) :\n                      t('effect:unit.unit')}\n                  {separator}\n                </React.Fragment>\n              );\n            } else if ('except' in cond) {\n              return (\n                <React.Fragment key={JSON.stringify(cond)}>\n                  {t('effect:with_quotes', { value: t('unit:display', { number: cond.except }) })}\n                  {t('effect:except_preposition')}\n                  {t('effect:unit.unit')}\n                  {separator}\n                </React.Fragment>\n              );\n            } else {\n              return t(`effect:unit.${cond.type}`) + t(`effect:unit.${cond.role}`) + separator;\n            }\n          }) :\n          null\n      }\n    </React.Fragment>\n  );\n};\n\nexport default SkillEffectTargetView;\n","import { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillEffect, hasTargetSkillEffect, hasSelfSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget, SkillEffectTargetKind } from '../../domain/skill/SkillEffectTarget';\nimport { isTargetSkillEffectData } from '../../domain/skill/SkillEffectData';\n\ntype SkillEffectTargets =\n  { self?: true } |\n  { self?: true, target: true } |\n  { self?: true, target: true } & SkillEffectTarget |\n  { around?: true }\n\ntype EnemyTargetConditions<T extends SkillEffectTarget = SkillEffectTarget> =\n  Required<Extract<T, { kind: typeof SkillEffectTargetKind.Enemy }>>\n\nclass SkillEffectConditionViewModel {\n\n  readonly #effect: SkillEffect;\n\n  constructor(effect: SkillEffect) {\n    this.#effect = effect;\n  }\n\n  get enemyTargetConditions(): EnemyTargetConditions | undefined {\n    const hasNoTargetCondition =\n      !this.#effect.conditions ||\n      this.#effect.conditions.every(cond => !('state' in cond) || !('target' in cond.state));\n    const hasNoTargetEffect = !hasTargetSkillEffect(this.#effect.details);\n\n    // Neither condition view nor targets of effect view shows the target condition.\n    const needToShowTargetCondition = hasNoTargetCondition && hasNoTargetEffect;\n\n    if (\n      needToShowTargetCondition &&\n      isTargetSkillEffectData(this.#effect) &&\n      this.#effect.target.kind === SkillEffectTargetKind.Enemy\n    ) {\n      const { kind, conditions } = this.#effect.target;\n      return conditions && { kind, conditions };\n    }\n\n    return undefined;\n  }\n\n  get hasAnyConditions(): boolean {\n    return !!this.#effect.conditions || !!this.enemyTargetConditions;\n  }\n\n  get hasMultipleConditions(): boolean {\n    return (this.#effect.conditions?.length ?? 0) > 1;\n  }\n\n  get effective(): PassiveSkillEffective | undefined {\n    return 'effective' in this.#effect ? this.#effect.effective : undefined;\n  }\n\n  get scaleFactor(): SkillEffectScaleFactor | undefined {\n    return 'scale_factor' in this.#effect ? this.#effect.scale_factor : undefined;\n  }\n\n  get effectTargets(): SkillEffectTargets {\n    const hasSelfEffect   = hasSelfSkillEffect(this.#effect.details);\n    const hasTargetEffect = hasTargetSkillEffect(this.#effect.details);\n\n    if (\n      hasTargetEffect &&\n      // for type casting\n      isTargetSkillEffectData(this.#effect)\n    ) {\n      // target details already shown by condition state\n      const needNoDetails = this.#effect.conditions?.some(cond => 'state' in cond && 'target' in cond.state);\n\n      return Object.assign(\n        hasSelfEffect ? { self: true } as const : {},\n        {\n          target: true,\n          ...(needNoDetails ? {} : this.#effect.target)\n        }\n      );\n    } else {\n      return hasSelfEffect ? { self: true } : { around: true };\n    }\n  }\n\n}\n\nexport default SkillEffectConditionViewModel;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { ReactNode } from 'react';\nimport { StringMap, TFunction } from 'i18next';\nimport { useTranslation } from 'react-i18next';\n\nimport SkillEffectTargetView from './SkillEffectTargetView';\nimport UnitAliasView from './UnitAliasView';\n\nimport {\n  ActivationEnemyState,\n  ActivationSelfState,\n  ActivationSquadState,\n  ActivationTargetState,\n  ArmoredBulgasari,\n  DefenderAndArmoredBulgasari,\n  InSquadTaggedUnitState,\n  NumOfUnitsInSquadState,\n  SelfSkillEffectActivationCondition,\n  SelfSkillEffectActivationState,\n  SkillEffectActivationCondition,\n  SkillEffectActivationState,\n  TargetSkillEffectActivationCondition,\n  UnitAliasAndRole,\n  isDefenderAndArmoredBulgasari,\n  isUnitsInSquadCondition\n} from '../../domain/skill/SkillEffectActivationCondition';\nimport { Effect } from '../../domain/Effect';\nimport { EffectActivationState } from '../../domain/EffectActivationState';\nimport { EffectTrigger } from '../../domain/EffectTrigger';\nimport { PassiveSkillEffective } from '../../domain/skill/SkillEffective';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect, isTargetSkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillEffectScaleFactor } from '../../domain/skill/SkillEffectScaleFactor';\nimport { SkillEffectTarget } from '../../domain/skill/SkillEffectTarget';\nimport { UnitAlias, isUnitAlias, unitNumbersForAlias } from '../../domain/UnitAlias';\nimport { UnitNumber, UnitRole, UnitType } from '../../domain/UnitBasicInfo';\n\nimport SkillEffectConditionViewModel from './SkillEffectConditionViewModel';\n\nimport { Entry, typedEntries } from '../../util/object';\nimport { ifNonNullable, ifTruthy } from '../../util/react';\nimport { isReadonlyArray, ValueOf } from '../../util/type';\n\nfunction needSeparator(array: ReadonlyArray<unknown>, index: number): boolean {\n  return ++index < array.length;\n}\n\nfunction stateValuesView(\n  entry: Entry<ActivationSelfState> | Entry<ActivationTargetState>,\n  unitNumber: UnitNumber,\n  t: TFunction\n): ReactNode {\n  switch (entry[0]) {\n  case EffectActivationState.HpGreaterOrEqual:\n  case EffectActivationState.HpLessOrEqual:\n  case EffectActivationState.HpGreaterThan:\n  case EffectActivationState.HpLessThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { value: entry[1] })}</span>);\n  case EffectActivationState.HpRateGreaterOrEqualThanSelf:\n    return (<span>{t(`effect:condition.state.${entry[0]}`)}</span>);\n  case EffectActivationState.StatusGreaterThanSelf:\n  case EffectActivationState.StatusLessThanSelf:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.StatusGreaterOrEqualThan:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.RankGreaterOrEqual:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { rank: entry[1] })}</span>);\n  case EffectActivationState.Affected: {\n    const effect = entry[1];\n    return isReadonlyArray(effect) ?\n      (<span>{t('effect:condition.state.affected_both', { effect: { 0: effect[0], 1: effect[1] } })}</span>) :\n      (<span>{t(`effect:condition.state.${entry[0]}`, { effect })}</span>);\n  }\n  case EffectActivationState.NotAffected: {\n    const effects = entry[1]\n      .map(e => t(`effect:effect.name.${e}`))\n      .join(t('effect:and_symbolic_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { effects })}</span>);\n  }\n  case EffectActivationState.AffectedBy:\n    return affectedByStateView(entry[1], t);\n  case EffectActivationState.AffectedActiveBy:\n    return (\n      <span>\n        <UnitAliasView unitAlias={entry[1].alias} />\n        {t('effect:condition.state.affected_active_by_alias')}\n      </span>\n    );\n  case EffectActivationState.Tagged: {\n    const state = entry[1];\n    return isReadonlyArray(state) ?\n      (<span>{t('effect:condition.state.multiple_tagged', { tag1: state[0], tag2: state[1] })}</span>) :\n      (<span>{t(`effect:condition.state.${entry[0]}`, { tag: state })}</span>);\n  }\n  case EffectActivationState.NotTagged:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { tag: entry[1] })}</span>);\n  case EffectActivationState.TaggedAffected:\n  case EffectActivationState.NotTaggedAffected:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, entry[1])}</span>);\n  case EffectActivationState.Stack:\n    if ('effect' in entry[1]) {\n      return t('effect:condition.state.tag_effect_stack_ge', entry[1]);\n    } else if ('equal' in entry[1]) {\n      return t('effect:condition.state.tag_stack_eq', entry[1]);\n    } else {\n      const { tag } = entry[1];\n      const isMultipleTag = isReadonlyArray(tag);\n      const prefix = isMultipleTag ? 'tags_' : 'tag_';\n      const suffix = 'greater_or_equal' in entry[1] ? 'stack_ge' : 'stack_le';\n      const options: StringMap = {\n        ...entry[1],\n        ...(isMultipleTag ?\n          { tags: tag.map(tagKey => t('effect:tag.format', { tag: tagKey })).join(t('effect:or_symbolic_separator')) }:\n          {}\n        )\n      };\n\n      return t(`effect:condition.state.${prefix}${suffix}`, options);\n    }\n  case EffectActivationState.Form:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { form: entry[1] })}</span>);\n  case EffectActivationState.Equipped: {\n    const equipment = t(`equipment:${entry[1]}`);\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipment })}</span>);\n  }\n  case EffectActivationState.NotEquipped: {\n    const equipments = entry[1]\n      .map(e => `${t('effect:with_quotes', { value: t(`equipment:${e}`) })}`)\n      .join(t('effect:unit_separator'));\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { equipments })}</span>);\n  }\n  case EffectActivationState.Grid:\n    return (<span>{t(`effect:condition.state.${entry[0]}`, { grid: entry[1] })}</span>);\n  case EffectActivationState.Unit:\n    return unitStateView(entry[0], entry[1], unitNumber, t);\n  default: {\n    const _exhaustiveCheck: never = entry;\n    return _exhaustiveCheck;\n  }\n  }\n}\n\nfunction affectedByStateView(\n  state: ValueOf<ActivationSelfState, typeof EffectActivationState.AffectedBy>,\n  t: TFunction\n): Exclude<ReactNode, undefined> {\n  if ('alias' in state) {\n    return (\n      <React.Fragment>\n        {t('effect:with_quotes', { value: t('unit:display', { number: state.except }) })}\n        {t('effect:except_preposition')}\n        <UnitAliasView unitAlias={state.alias} exceptUnit={state.except} />\n        {t('effect:condition.state.affected_by_alias')}\n      </React.Fragment>\n    );\n  } else {\n    if ('effect' in state) {\n      const key = 'unit' in state ? 'affected_effect_by' : 'affected_equipment_effect_by';\n      return (<span>{t(`effect:condition.state.${key}`, state as StringMap)}</span>);\n    } else {\n      return (<span>{t('effect:condition.state.affected_by', state)}</span>);\n    }\n  }\n}\n\nfunction unitStateView(key: typeof EffectActivationState.InSquad, state: ValueOf<ActivationSquadState, typeof EffectActivationState.InSquad> | ReadonlyArray<UnitNumber>, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.NotInSquad, state: ValueOf<ActivationSquadState, typeof EffectActivationState.NotInSquad> | 41, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(key: typeof EffectActivationState.Unit, state: typeof UnitAlias.SteelLine | typeof UnitType.Flying, selfUnitNumber: UnitNumber, t: TFunction): Exclude<ReactNode, undefined>\nfunction unitStateView(\n  key: typeof EffectActivationState['InSquad' | 'NotInSquad' | 'Unit' | 'NumOfUnitsLessThanEnemies'],\n  state:\n    UnitNumber |\n    ReadonlyArray<UnitNumber> |\n    UnitAliasAndRole<typeof UnitAlias['SteelLine' | 'AACannonier'], typeof UnitRole.Supporter> |\n    UnitAliasAndRole<typeof UnitAlias['MongooseTeam'], typeof UnitRole.Defender> |\n    UnitAliasAndRole<typeof UnitAlias.Strikers, typeof UnitRole.Attacker> |\n    typeof UnitAlias[\n      'ElectricActive' |\n      'SteelLine' |\n      'SteelLineOfficerRanks' |\n      'SteelLineExcludingOfficerRanks' |\n      'Horizon' |\n      'Kunoichi' |\n      'DEntertainment' |\n      'KouheiChurch' |\n      'EmpressHound' |\n      'Mermaid'\n    ] |\n    typeof SkillAreaType.CrossAdjacent |\n    UnitType |\n    UnitRole |\n    ArmoredBulgasari |\n    DefenderAndArmoredBulgasari |\n    'golden_factory' |\n    { equipment: 'hot_pack', effect: typeof Effect.MinimumIceResistUp } |\n    { [EffectActivationState.AffectedBy]: { unit: 83, effect: typeof Effect.TargetProtect } } |\n    InSquadTaggedUnitState,\n  selfUnitNumber: UnitNumber,\n  t: TFunction\n): Exclude<ReactNode, undefined> {\n  function unitName(unit: UnitNumber): string {\n    return t('effect:with_quotes', { value: t('unit:display', { number: unit }) });\n  }\n\n  if (typeof state === 'number') {\n    return (\n      <span>{t(`effect:condition.state.${key}`, { unit: unitName(state) })}</span>\n    );\n  } else if (isReadonlyArray(state)) {\n    let unit;\n    if (isDefenderAndArmoredBulgasari(state)) {\n      unit = `${t(`effect:unit.${state[0]}`)}${t('effect:unit_separator')}${t(`effect:unit.${state[1]}`)}`;\n    } else {\n      const separator =\n        key === EffectActivationState.NotInSquad ?\n          t('effect:and_separator') :\n          t('effect:unit_separator');\n      unit = state.map(u => unitName(u)).join(separator);\n    }\n    return (<span>{t(`effect:condition.state.${key}`, { unit })}</span>);\n  } else if (typeof state === 'string') {\n    // TODO: Move excepting logic from view.\n    const isSquadCond = key === EffectActivationState.InSquad || key === EffectActivationState.NotInSquad;\n    if (isUnitAlias(state)) {\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && unitNumbersForAlias[state].has(selfUnitNumber),\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <UnitAliasView unitAlias={state} exceptUnit={isSquadCond ? selfUnitNumber : undefined} />\n          <span>{t(`effect:condition.state.${key}`, { unit: '' })}</span>\n        </React.Fragment>\n      );\n    } else {\n      const isTypeOrRole = state !== 'cross_adjacent' && state !== 'golden_factory';\n      return (\n        <React.Fragment>\n          {ifTruthy(\n            isSquadCond && isTypeOrRole,\n            (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>)\n          )}\n          <span>{t(`effect:condition.state.${key}`, { unit: t(`effect:unit.${state}`) })}</span>\n        </React.Fragment>\n      );\n    }\n  } else if ('alias' in state) {\n    return (\n      <React.Fragment>\n        <UnitAliasView unitAlias={state.alias} />\n        {t('effect:of_preposition')}\n        {t(`effect:unit.${state.role}`)}\n        {t(`effect:condition.state.${key}`, { unit: '' })}\n      </React.Fragment>\n    );\n  } else if ('equipment' in state) {\n    return (<span>{t('effect:condition.state.affected_equipment_effect_by', state)}</span>);\n  } else {\n    // only in_squad conditions.\n    // TODO: Move this logic from view.\n    if (EffectActivationState.Tagged in state) {\n      const unit = 'unit' in state ? unitName(state.unit) : t('effect:unit.ally');\n      return (\n        <span>\n          {t('effect:condition.state.tagged', { tag: state.tagged })}\n          {t('effect:condition.state.in_squad', { unit })}\n        </span>\n      );\n    } else {\n      return (\n        <span>\n          {t('effect:condition.state.affected_effect_by', state.affected_by)}\n          {t('effect:condition.state.in_squad', { unit: t('effect:unit.ally') })}\n        </span>\n      );\n    }\n  }\n}\n\nconst SelfAndTargetStateView: React.FC<{\n  state: ReadonlyArray<ActivationSelfState>,\n  unitNumber: UnitNumber\n} | {\n  state: ReadonlyArray<ActivationTargetState>,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { state, unitNumber } = props;\n\n  return (\n    <React.Fragment>\n      {\n        'target' in props ?\n          (<React.Fragment>\n            <SkillEffectTargetView target={props.target} selfUnitNumber={unitNumber} />\n            {t('effect:case_particle')}\n          </React.Fragment>) :\n          t('effect:condition.target.self')\n      }\n      {state.map((v, i: number) => {\n        return (\n          <React.Fragment key={JSON.stringify(v)}>\n            {typedEntries(v).map((entry, i, entries) => (\n              <React.Fragment key={entry[0]}>\n                {stateValuesView(entry, unitNumber, t)}\n                {ifTruthy(needSeparator(entries, i), (<span>{t('effect:and_symbolic_separator')}</span>))}\n              </React.Fragment>\n            ))}\n            {ifTruthy(needSeparator(state, i), (<span>{t('effect:or_symbolic_separator')}</span>))}\n          </React.Fragment>\n        );\n      })}\n    </React.Fragment>\n  );\n};\n\ntype NumOfCrossAdjacent = Extract<NumOfUnitsInSquadState['num_of_units'], { unit: typeof SkillAreaType.CrossAdjacent }>\n\nfunction isNumOfCrossAdjacent(\n  arg: NumOfUnitsInSquadState['num_of_units']\n): arg is NumOfCrossAdjacent {\n  return arg.unit === SkillAreaType.CrossAdjacent;\n}\n\ntype NumOfDefenderAndArmoredBulgasari = Extract<NumOfUnitsInSquadState['num_of_units'], { unit: DefenderAndArmoredBulgasari }>\n\nfunction isNumOfDefenderAndArmoredBulgasari(\n  arg: NumOfUnitsInSquadState['num_of_units']\n): arg is NumOfDefenderAndArmoredBulgasari {\n  return isDefenderAndArmoredBulgasari(arg.unit);\n}\n\nconst SquadStateView: React.FC<{\n  state: ValueOf<SkillEffectActivationState, 'squad'>,\n  unitNumber: UnitNumber\n}> = ({ state, unitNumber }) => {\n  const { t } = useTranslation();\n\n  const numOfCrossAdjacent = (state: NumOfCrossAdjacent): string => {\n    return 'equal' in state ?\n      t('effect:condition.state.cross_adjacent_eq', state) :\n      'less_or_equal' in state ?\n        t('effect:condition.state.cross_adjacent', state) :\n        t('effect:condition.state.cross_adjacent_ge', state);\n  };\n  const numOfDefenderAndArmoredBulgasari = (state: NumOfDefenderAndArmoredBulgasari): string => {\n    return t('effect:condition.state.num_of_defender_armored_bulgasari', state);\n  };\n\n  if (isReadonlyArray(state)) {\n    return (\n      <React.Fragment>\n        {t('effect:condition.target.squad')}\n        {\n          isUnitsInSquadCondition(state) ?\n            unitStateView(EffectActivationState.InSquad, state.map(s => s.in_squad), unitNumber, t) :\n            (<React.Fragment>\n              {unitStateView(EffectActivationState.NotInSquad, state[0].not_in_squad, unitNumber, t)}\n              <span>{t('effect:or_symbolic_separator')}</span>\n              {unitStateView(EffectActivationState.InSquad, state[1].in_squad, unitNumber, t)}\n            </React.Fragment>)\n        }\n      </React.Fragment>\n    );\n  } else {\n    return EffectActivationState.NumOfUnitsLessThanEnemies in state ?\n      (<span>{t(`effect:condition.state.${EffectActivationState.NumOfUnitsLessThanEnemies}`)}</span>) :\n      (<React.Fragment>\n        {t('effect:condition.target.squad')}\n        {\n          typedEntries(state).map((entry, i, array) => {\n            const Separator = () => (\n              <React.Fragment>{ifTruthy(needSeparator(array, i), t('effect:and_symbolic_separator'))}</React.Fragment>\n            );\n\n            switch (entry[0]) {\n            case EffectActivationState.InSquad:\n              return (\n                <React.Fragment key={entry[0]}>\n                  {unitStateView(EffectActivationState.InSquad, entry[1], unitNumber, t)}\n                  <Separator />\n                </React.Fragment>\n              );\n            case EffectActivationState.NotInSquad:\n              return (\n                <React.Fragment key={entry[0]}>\n                  {unitStateView(EffectActivationState.NotInSquad, entry[1], unitNumber, t)}\n                  <Separator />\n                </React.Fragment>\n              );\n            case EffectActivationState.NumOfUnits: {\n              const squadState = entry[1];\n              return (\n                <React.Fragment key={entry[0]}>\n                  {\n                    isNumOfCrossAdjacent(squadState) ?\n                      numOfCrossAdjacent(squadState) :\n                      isNumOfDefenderAndArmoredBulgasari(squadState) ?\n                        numOfDefenderAndArmoredBulgasari(squadState) :\n                        'equal' in squadState ?\n                          t('effect:condition.state.num_of_units_eq', squadState) :\n                          'greater_or_equal' in squadState ?\n                            t('effect:condition.state.num_of_units_ge', squadState as StringMap) :\n                            t('effect:condition.state.num_of_units_le', squadState as StringMap)\n                  }\n                  <Separator />\n                </React.Fragment>\n              );\n            }\n            default: {\n              const _exhaustiveCheck: never = entry;\n              return _exhaustiveCheck;\n            }\n            }\n          })\n        }\n      </React.Fragment>);\n  }\n};\n\nconst EnemyStateView: React.FC<{\n  state: ActivationEnemyState\n}> = ({ state }) => {\n  const { t } = useTranslation();\n  const { num_of_units } = state;\n\n  if ('unit' in state) {\n    const unit = t(`effect:unit.${state.unit}`);\n    return (\n      <React.Fragment>\n        {t('effect:condition.target.enemy')}\n        {t('effect:condition.state.num_of_enemies_eq', num_of_units)}\n        {t('effect:and_symbolic_separator')}\n        {t('effect:condition.state.unit', { unit })}\n      </React.Fragment>\n    );\n  } else {\n    return (\n      <React.Fragment>\n        {\n          'unit' in num_of_units ?\n            t('effect:condition.target.enemy_unit', num_of_units) :\n            t('effect:condition.target.enemy')\n        }\n        {\n          'equal' in num_of_units ?\n            t('effect:condition.state.num_of_enemies_eq', num_of_units) :\n            'less_or_equal' in num_of_units ?\n              'greater_or_equal' in num_of_units ?\n                t('effect:condition.state.num_of_enemies', num_of_units as StringMap) :\n                t('effect:condition.state.num_of_enemies_le', num_of_units as StringMap) :\n              t('effect:condition.state.num_of_enemies_ge', num_of_units as StringMap)\n        }\n      </React.Fragment>\n    );\n  }\n};\n\nconst TriggerView: React.FC<{\n  condition: SkillEffectActivationCondition,\n  unitNumber: UnitNumber\n}> = ({ condition, unitNumber }) => {\n  const { t } = useTranslation();\n\n  if (!('trigger' in condition)) {\n    return null;\n  }\n\n  switch (condition.trigger) {\n  case EffectTrigger.StartRound:\n    return (\n      <React.Fragment>\n        {\n          condition.round ?\n            typeof condition.round === 'string' ?\n              t(`effect:condition.trigger.start_${condition.round}_round`) :\n              'at' in condition.round ?\n                t('effect:condition.trigger.round.at', { round: condition.round.at }) :\n                'from' in condition.round ?\n                  t('effect:condition.trigger.round.from', { round: condition.round.from }) :\n                  t('effect:condition.trigger.round.until', { round: condition.round.until }) :\n            t('effect:condition.trigger.start_round')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.UseActive1:\n  case EffectTrigger.UseActive2:\n  case EffectTrigger.HitActive1:\n  case EffectTrigger.HitActive2:\n    return (\n      <React.Fragment>\n        {\n          [\n            ...('round' in condition ? [t(`effect:condition.trigger.round.${condition.round}`)] : []),\n            t(`effect:condition.trigger.${condition.trigger}`, { unit: unitNumber })\n          ].join('')\n        }\n      </React.Fragment>\n    );\n  case EffectTrigger.SeizeOpportunity:\n    return (\n      <React.Fragment>\n        {\n          [...unitNumbersForAlias[UnitAlias.NotApplicableForSeizeOpportunity]].map(number =>\n            t('effect:with_quotes', { value: t('unit:display', { number }) })\n          ).join(t('effect:unit_separator'))\n        }\n        {t('effect:except_preposition')}\n        <UnitAliasView unitAlias={UnitAlias.ApplicableForSeizeOpportunity} />\n        {t('effect:case_particle')}\n        {t(`effect:condition.trigger.${condition.trigger}`)}\n      </React.Fragment>\n    );\n  default:\n    return (<React.Fragment>{t(`effect:condition.trigger.${condition.trigger}`)}</React.Fragment>);\n  }\n};\n\nconst ConditionStateView: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { unitNumber } = props;\n\n  if (!('state' in props.condition)) {\n    return null;\n  }\n\n  const Separator = ({ show }: { show: boolean }) => (\n    <React.Fragment>{ifTruthy(show, t('effect:and_symbolic_separator'))}</React.Fragment>\n  );\n  const NotTargetStateView = ({ entry, unitNumber, needSeparator }: {\n    entry: Entry<SelfSkillEffectActivationState>,\n    unitNumber: UnitNumber,\n    needSeparator: boolean\n  }) => {\n    const [key, value] = entry;\n    if (key === 'self') {\n      return (\n        <React.Fragment key={key}>\n          <SelfAndTargetStateView state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else if (key === 'squad') {\n      return (\n        <React.Fragment key={key}>\n          <SquadStateView key={key} state={value} unitNumber={unitNumber} />\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    } else {\n      return (\n        <React.Fragment key={key}>\n          <EnemyStateView state={value}/>\n          <Separator show={needSeparator} />\n        </React.Fragment>\n      );\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {'target' in props ?\n        typedEntries(props.condition.state).map((entry, i, array) =>\n          entry[0] === 'target' ?\n            (\n              <React.Fragment key={entry[0]}>\n                <SelfAndTargetStateView state={entry[1]} target={props.target} unitNumber={unitNumber} />\n                <Separator show={needSeparator(array, i)} />\n              </React.Fragment>\n            ) :\n            entry[0] === 'squad' ?\n              (\n                <React.Fragment key={entry[0]}>\n                  <SquadStateView state={entry[1]} unitNumber={unitNumber} />\n                  <Separator show={needSeparator(array, i)} />\n                </React.Fragment>\n              ) :\n              (<NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />)\n        ) :\n        typedEntries(props.condition.state).map((entry, i, array) => (\n          <NotTargetStateView key={entry[0]} entry={entry} unitNumber={unitNumber} needSeparator={needSeparator(array, i)} />\n        ))\n      }\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst ConditionRow: React.FC<{\n  condition: SelfSkillEffectActivationCondition,\n  unitNumber: UnitNumber\n} | {\n  condition: TargetSkillEffectActivationCondition,\n  target: SkillEffectTarget,\n  unitNumber: UnitNumber\n}> = (props) => {\n  const { t } = useTranslation();\n  const { condition, unitNumber } = props;\n  const needSeparator = 'trigger' in condition && 'state' in condition;\n\n  return (\n    <span>\n      <TriggerView condition={condition} unitNumber={unitNumber} />\n      {ifTruthy(needSeparator, t('effect:separator'))}\n      {'target' in props ?\n        <ConditionStateView condition={props.condition} target={props.target} unitNumber={unitNumber} /> :\n        <ConditionStateView condition={props.condition} unitNumber={unitNumber} />}\n    </span>\n  );\n};\n\nconst EnemyCondition: React.FC<{\n  target: NonNullable<SkillEffectConditionViewModel['enemyTargetConditions']>\n}> = ({ target }) => {\n  const { t } = useTranslation();\n  const unit = target.conditions.map(cond => t(`effect:unit.${cond}`)).join(t('effect:unit_separator'));\n\n  return (\n    <React.Fragment>\n      {t('effect:effect.target.kind.enemy')}\n      {t('effect:case_particle')}\n      {t('effect:condition.state.unit', { unit })}\n      {t('effect:case')}\n    </React.Fragment>\n  );\n};\n\nconst EffectiveView: React.FC<{ effective: PassiveSkillEffective | undefined }> = ({ effective }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(effective, v => (<span>{t(`effect:effective.${v}`)}</span>));\n};\n\nconst EffectScaleFactorView: React.FC<{\n  scaleFactor: SkillEffectScaleFactor | undefined,\n  unitNumber: UnitNumber\n}> = ({ scaleFactor, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return ifNonNullable(\n    scaleFactor,\n    v => {\n      if ('per_stack' in v) {\n        const key = 'effect' in v.per_stack ?\n          'effect:scale_factor.per_stack_effect' :\n          'effect:scale_factor.per_stack';\n        return (<span>{t(key, v.per_stack)}</span>);\n      } else  {\n        switch (v.per_units.type) {\n        case 'all':\n          return (<span>{t('effect:scale_factor.per_units')}</span>);\n        case 'squad': {\n          const { unit = 'ally', except } = v.per_units;\n          const exceptSelf = !!except;\n          return (\n            <React.Fragment>\n              {ifTruthy(exceptSelf, (<span>{t('effect:unit.self')}{t('effect:except_preposition')}</span>))}\n              {\n                isReadonlyArray(unit) ?\n                  (<React.Fragment>\n                    <UnitAliasView unitAlias={unit[0]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                    <span>&nbsp;{t('effect:unit_separator')}&nbsp;</span>\n                    <UnitAliasView unitAlias={unit[1]} exceptUnit={exceptSelf ? unitNumber : undefined} />\n                  </React.Fragment>) :\n                  isUnitAlias(unit) ?\n                    (<UnitAliasView unitAlias={unit} exceptUnit={exceptSelf ? unitNumber : undefined} />) :\n                    (<span>{t(`effect:unit.${unit}`)}</span>)\n              }\n              <span>{t('effect:scale_factor.num_of_allies')}</span>\n            </React.Fragment>\n          );\n        }\n        case 'enemy':\n          return (\n            <span>\n              {t('effect:unit.enemy')}\n              {ifNonNullable(v.per_units.unit, unit => t(`effect:unit.${unit}`))}\n              {t(`effect:scale_factor.${v.per_units.variation}`)}\n            </span>\n          );\n        }\n      }\n    }\n  );\n};\n\nconst EffectTargetsView: React.FC<{\n  targets: SkillEffectConditionViewModel['effectTargets'],\n  unitNumber: UnitNumber\n}> = ({ targets, unitNumber }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span>\n      {ifTruthy('self' in targets, t('effect:effect.target.self'))}\n      {ifTruthy('self' in targets && 'target' in targets, t('effect:and_separator'))}\n      {\n        'target' in targets ?\n          'kind' in targets ?\n            <SkillEffectTargetView target={targets} selfUnitNumber={unitNumber} /> :\n            t('effect:effect.target.target') :\n          null\n      }\n      {ifTruthy('around' in targets, t('effect:effect.target.around'))}\n      {t('effect:to_preposition')}\n    </span>\n  );\n};\n\nconst SkillEffectConditionView: React.FC<{\n  effect: SkillEffect,\n  unitNumber: UnitNumber\n}> = ({ effect, unitNumber }) => {\n  const { t } = useTranslation();\n  const model = new SkillEffectConditionViewModel(effect);\n\n  const OrConjunction = () => (<div css={{ fontSize: '0.7em' }}>{t('effect:or_conjunction')}</div>);\n  const Conditions = () => {\n    if (isTargetSkillEffect(effect)) {\n      const conditions =\n        effect.conditions ?\n          effect.conditions.length === 1 ?\n            (<ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={effect.conditions[0]} target={effect.target} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={effect.conditions[1]} target={effect.target} unitNumber={unitNumber} />\n              </React.Fragment>\n            ) :\n          null;\n      return (\n        <React.Fragment>\n          {conditions}\n          {ifNonNullable(model.enemyTargetConditions, enemyTarget => (\n            <React.Fragment>\n              {ifTruthy(!!conditions, t('effect:separator'))}\n              <EnemyCondition target={enemyTarget} />\n            </React.Fragment>\n          ))}\n        </React.Fragment>\n      );\n    } else {\n      return ifNonNullable(\n        effect.conditions,\n        conds =>\n          conds.length === 1 ?\n            (<ConditionRow condition={conds[0]} unitNumber={unitNumber} />) :\n            (\n              <React.Fragment>\n                <ConditionRow condition={conds[0]} unitNumber={unitNumber} />\n                <OrConjunction />\n                <ConditionRow condition={conds[1]} unitNumber={unitNumber} />\n              </React.Fragment>\n            )\n      );\n    }\n  };\n  const Additional = ({ children }: { children: ReactNode }) => {\n    return (\n      model.hasAnyConditions ?\n        model.hasMultipleConditions ?\n          (<div css={{ marginTop: 5 }}>{children}</div>) :\n          (<span>{t('effect:separator')}{children}</span>) :\n        (<span>{children}</span>)\n    );\n  };\n\n  return (\n    <div>\n      <Conditions />\n      <Additional>\n        <EffectiveView effective={model.effective} />\n        <EffectScaleFactorView scaleFactor={model.scaleFactor} unitNumber={unitNumber} />\n        <EffectTargetsView targets={model.effectTargets} unitNumber={unitNumber} />\n        {t('effect:below_effects')}\n      </Additional>\n    </div>\n  );\n};\n\nexport default SkillEffectConditionView;\n","import { TFunction } from 'i18next';\n\nimport { AroundSkillEffectValue, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { Effect } from '../../domain/Effect';\nimport {\n  calcMicroValue,\n  calcMilliPercentageValue,\n  calcMilliValue,\n  MilliPercentageValue\n} from '../../domain/ValueUnit';\nimport { isFormChangeUnitNumber, UnitForms } from '../../domain/UnitFormValue';\n\nimport { Entry } from '../../util/object';\nimport { notFalsy } from '../../util/type';\n\nexport type SkillEffectDetailsEntry =\n  Entry<SkillEffectValue> |\n  Entry<AroundSkillEffectValue>\n\ntype SkillEffectDetailsProps = { tag?: string, detail: string, term?: string }\n\nfunction getDetail(body: string, value: SkillEffectDetailsEntry[1], t: TFunction): string {\n  const rate = 'rate' in value && value.rate ?\n    typeof value.rate === 'string' ?\n      `${t(`effect:rate.${value.rate}`)}${t('effect:separator')}` :\n      `${t('effect:rate.percentage', { value: calcMilliPercentageValue(value.rate) })}${t('effect:separator')}` :\n    '';\n  const additions = [\n    'times' in value && value.times ?\n      t('effect:times', { count: value.times }) : undefined,\n    'max_stack' in value && typeof value.max_stack === 'number' ?\n      value.max_stack === 1 ?\n        t('effect:does_not_stack') :\n        t('effect:max_stack', { count: value.max_stack }) :\n      undefined,\n    'cannot_be_dispelled' in value && value.cannot_be_dispelled ?\n      t('effect:cannot_be_dispelled') : undefined\n  ].filter(notFalsy)\n    .join(t('effect:separator'));\n\n  return `${rate}${body}${additions ? ` (${additions})` : '' }`;\n}\n\nfunction getTerm(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'term' in value ?\n    typeof value.term === 'string' ?\n      t(`effect:term.${value.term}`) :\n      value.term && t('effect:term.for_rounds', { value: value.term.for_rounds }) :\n    undefined;\n}\n\nfunction getTag(value: SkillEffectDetailsEntry[1], t: TFunction): string | undefined {\n  return 'tag' in value ?\n    value.tag && t('effect:tag.format', { tag: value.tag }) :\n    undefined;\n}\n\nfunction translateMilliPercentageDetail(\n  effect: string,\n  value: SkillEffectDetailsEntry[1] & MilliPercentageValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    tag: getTag(value, t),\n    detail: getDetail(t(`effect:effect.description.${effect}`, { value: calcMilliPercentageValue(value) }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\ntype TagStackEffectValue = NonNullable<SkillEffectValue[typeof Effect.TagStack]>\n\nfunction translateTagStackDetail(\n  key: typeof Effect['TagStack' | 'TagRelease'],\n  value: TagStackEffectValue,\n  t: TFunction\n): SkillEffectDetailsProps {\n  return {\n    detail: getDetail(t(`effect:effect.description.${key}`, { tag: value.tag }), value, t),\n    term: getTerm(value, t)\n  };\n}\n\nfunction translateEffectNames(value: { effect: Effect } | { effects: ReadonlyArray<Effect> }, t: TFunction): string {\n  return 'effect' in value ?\n    t(`effect:effect.name.${value.effect}`) :\n    value.effects.map(e => t(`effect:effect.name.${e}`)).join(t('effect:separator'));\n}\n\nexport function translateSkillEffectDetails(\n  entry: SkillEffectDetailsEntry,\n  t: TFunction\n): SkillEffectDetailsProps | ReadonlyArray<SkillEffectDetailsProps>{\n  const term = getTerm(entry[1], t);\n\n  switch (entry[0]) {\n  case Effect.ActionCountUp:\n  case Effect.ActionCountDown:\n  case Effect.MinimizeDamage:\n  case Effect.NullifyDamage:\n  case Effect.AllBuffBlocking:\n  case Effect.AllBuffRemoval:\n  case Effect.AllDebuffRemoval:\n  case Effect.ColumnProtect:\n  case Effect.RowProtect:\n  case Effect.TargetProtect:\n  case Effect.ReAttack:\n  case Effect.FollowUpAttack:\n  case Effect.IgnoreBarrierDr:\n  case Effect.IgnoreProtect:\n  case Effect.IgnoreProtectDeactivate:\n  case Effect.Reconnaissance:\n  case Effect.Marked:\n  case Effect.Provoked:\n  case Effect.Immovable:\n  case Effect.Silenced:\n  case Effect.Stunned:\n  case Effect.RefundAp:\n  case Effect.AttackHit:\n  case Effect.AttackCritical:\n  case Effect.IgnoreDef:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`), entry[1], t),\n      term\n    };\n  case Effect.AMG11Construction:\n  case Effect.DeployRabbitDField:\n  case Effect.SummonHologramTiger:\n  case Effect.GoldenFactoryConstruction:\n    return {\n      tag: getTag(entry[1], t),\n      detail: t(`effect:effect.description.${entry[0]}`, { times: entry[1].times }),\n      term\n    };\n  case Effect.CooperativeAttack: {\n    const { unit, active } = entry[1];\n    return {\n      tag: getTag(entry[1], t),\n      detail:\n        isFormChangeUnitNumber(unit) ?\n          t('effect:effect.description.cooperative_attack_form_active', { unit, no: active, form: UnitForms[unit].default }) :\n          t('effect:effect.description.cooperative_attack', { unit, no: active }),\n      term\n    };\n  }\n  case Effect.Push:\n  case Effect.Pull:\n  case Effect.RangeUp:\n  case Effect.RangeDown:\n  case Effect.RangeUpActive2:\n  case Effect.FixedDamageOverTime:\n  case Effect.FixedFireDamageOverTime:\n  case Effect.FixedIceDamageOverTime:\n  case Effect.FixedElectricDamageOverTime:\n  case Effect.MinimizeDamageLessThanValue:\n  case Effect.Barrier:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BattleContinuation: {\n    const body = 'value' in entry[1] ?\n      t('effect:effect.description.battle_continuation', { value: entry[1].value }) :\n      t('effect:effect.description.battle_continuation_with_hp_rate', { value: calcMilliPercentageValue(entry[1]) });\n\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(body, entry[1], t),\n      term\n    };\n  }\n  case Effect.AtkValueUp:\n  case Effect.DefValueUp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMilliValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ApUp:\n  case Effect.ApDown:\n  case Effect.SetAp:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { value: calcMicroValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.BuffRemoval:\n  case Effect.DebuffRemoval:\n  case Effect.EffectRemoval: {\n    const effects = translateEffectNames(entry[1], t);\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t(`effect:effect.description.tagged_${entry[0]}`, { tag: entry[1].tag, effects }) :\n          t(`effect:effect.description.${entry[0]}`, { effects }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.PreventsEffect:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { effects: translateEffectNames(entry[1], t) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.ActivationRatePercentageUp: {\n    const value  = calcMilliPercentageValue(entry[1]);\n    const effect = entry[1].effect;\n\n    return {\n      detail: getDetail(\n        entry[1].tag ?\n          t('effect:effect.description.tagged_activation_rate_percentage_up', { tag: entry[1].tag, effect, value }) :\n          t('effect:effect.description.activation_rate_percentage_up', { effect, value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  }\n  case Effect.AbsolutelyActivated:\n    return {\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, entry[1]), entry[1], t),\n      term\n    };\n  case Effect.FormChange:\n  case Effect.FormRelease:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(t(`effect:effect.description.${entry[0]}`, { form: entry[1].form }), entry[1], t),\n      term\n    };\n  case Effect.TagStack:\n  case Effect.TagRelease:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateTagStackDetail(entry[0], v, t)) :\n      translateTagStackDetail(entry[0], entry[1], t);\n  case Effect.TagUnstack:\n    return {\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { tag: entry[1].tag, value: entry[1].value }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierUpByStatus:\n  case Effect.DamageMultiplierReductionByStatus:\n  case Effect.CriReductionByStatus:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { status: entry[1].status, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.AtkValueUpByUnitValue:\n    return {\n      tag: getTag(entry[1], t),\n      detail: getDetail(\n        t(`effect:effect.description.${entry[0]}`, { unit: entry[1].unit, value: calcMilliPercentageValue(entry[1]) }),\n        entry[1],\n        t\n      ),\n      term\n    };\n  case Effect.DamageMultiplierDown:\n  case Effect.DefDown:\n  case Effect.AccDown:\n  case Effect.CriDown:\n  case Effect.EvaUp:\n  case Effect.StatusResistUp:\n  case Effect.DamageReductionUp:\n    return 'length' in entry[1] ?\n      entry[1].map(v => translateMilliPercentageDetail(entry[0], v, t)) :\n      translateMilliPercentageDetail(entry[0], entry[1], t);\n  default: {\n    return translateMilliPercentageDetail(entry[0], entry[1], t);\n  }\n  }\n}\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Badge } from 'react-bootstrap';\nimport { SkillEffectDetailsEntry, translateSkillEffectDetails } from './SkillEffectsTranslator';\n\nimport { AroundSkillEffectValue, SkillEffect, SkillEffectValue } from '../../domain/skill/UnitSkills';\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\n\nimport { ifNonNullable } from '../../util/react';\nimport { typedEntries } from '../../util/object';\nimport { Keyof } from '../../util/type';\n\nconst EffectDetailRow: React.FC<{\n  tag?: string,\n  detail: string,\n  term?: string\n}> = ({ tag, detail, term }) => {\n  const { t } = useTranslation();\n\n  return (\n    <div\n      css={{\n        display: 'flex',\n        fontWeight: 'bold',\n        borderRadius: 3,\n        backgroundColor: '#1c3042',\n        padding: '3px 8px',\n        marginTop: 5\n      }}\n    >\n      <div>\n        {ifNonNullable(tag, v => (<span>{v}{t('effect:tag_separator')}</span>))}\n        <span>{detail}</span>\n      </div>\n      <div\n        css={{\n          marginLeft: 'auto',\n          textAlign: 'right',\n          flexShrink: 0\n        }}>\n        {ifNonNullable(term, v => (<span css={{ marginLeft: 10, color: '#aaa', fontSize: '0.9em' }}>{v}</span>))}\n      </div>\n    </div>\n  );\n};\n\nconst EffectDetail: React.FC<{\n  entry: SkillEffectDetailsEntry\n}> = ({ entry }) => {\n  const { t } = useTranslation();\n  const details = translateSkillEffectDetails(entry, t);\n\n  return 'length' in details ?\n    (<React.Fragment>\n      {details.map(detail => (<EffectDetailRow key={JSON.stringify(detail)} {...detail} />))}\n    </React.Fragment>) :\n    (<EffectDetailRow {...details} />);\n};\n\nconst SkillEffectDetailsView: React.FC<{\n  className?: string,\n  target: Keyof<SkillEffect['details']>,\n  details: NonNullable<SkillEffectValue | AroundSkillEffectValue>,\n  area: SkillAreaType\n}> = ({ className, target, details, area }) => {\n  const { t } = useTranslation();\n  const targetKey =\n    target === 'target' ?\n      area === 'single' ? 'single' : 'area' :\n      target;\n\n  return (\n    <div className={className}>\n      <div><Badge variant=\"light\">{t(`effect:effect.target.${targetKey}`)}</Badge></div>\n      {typedEntries(details).map(entry => (<EffectDetail key={entry[0]} entry={entry} />))}\n    </div>\n  );\n};\n\nexport default SkillEffectDetailsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\n\nimport SkillEffectConditionView from './SkillEffectConditionView';\nimport SkillEffectDetailsView from './SkillEffectDetailsView';\n\nimport { SkillAreaType } from '../../domain/skill/SkillAreaOfEffect';\nimport { SkillEffect } from '../../domain/skill/UnitSkills';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo, UnitNumber } from '../../domain/UnitBasicInfo';\n\nimport { useSkillEffects } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst SkillEffectView: React.FC<{ effect: SkillEffect, unitNumber: UnitNumber, area: SkillAreaType }> = ({ effect, unitNumber, area }) => {\n  const self   = 'self'   in effect.details ? effect.details.self   : undefined;\n  const target = 'target' in effect.details ? effect.details.target : undefined;\n  const around = 'around' in effect.details ? effect.details.around : undefined;\n\n  return (\n    <div\n      css={{\n        border: '1px solid rgba(255, 255, 255, 0.3)',\n        borderRadius: 5,\n        marginTop: 10,\n        padding: 5,\n        '& > .skill-effect-details': {\n          marginTop: 10\n        }\n      }}\n    >\n      <SkillEffectConditionView effect={effect} unitNumber={unitNumber} />\n      {ifNonNullable(self  , v => (<SkillEffectDetailsView className='skill-effect-details' target='self' details={v} area={area} />))}\n      {ifNonNullable(target, v => (<SkillEffectDetailsView className='skill-effect-details' target='target' details={v} area={area} />))}\n      {ifNonNullable(around, v => (<SkillEffectDetailsView className='skill-effect-details' target='around' details={v} area={area} />))}\n    </div>\n  );\n};\n\nconst SkillEffectsView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const values = useSkillEffects(skillType, unit);\n\n  return (\n    ifNonNullable(\n      values,\n      ([effects, area, unitNumber]) => (\n        <div css={{ color: '#ccc', fontSize: '0.8em' }}>\n          {effects.map(effect => (<SkillEffectView key={JSON.stringify(effect)} effect={effect} unitNumber={unitNumber} area={area} />))}\n        </div>\n      )\n    )\n  );\n};\n\nexport default SkillEffectsView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { CSSPropertiesWithMultiValues } from '@emotion/serialize/dist/declarations/types';\nimport { Interpolation } from '@emotion/serialize';\nimport React, { ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport AreaOfEffectGrid from './AreaOfEffectGrid';\nimport { Badge, Col, Container, Row, Tab } from 'react-bootstrap';\nimport DamageDealView from './DamageDealView';\nimport EffectsAsEquipmentDescriptionView from './EffectsAsEquipmentDescriptionView';\nimport NumberValueDropdown from '../common/NumberValueDropdown';\nimport SkillEffectsView from './SkillEffectsView';\n\nimport { SkillLv } from '../../domain/skill/UnitSkillLvValue';\nimport { SkillType } from '../../domain/skill/SkillType';\nimport { UnitBasicInfo } from '../../domain/UnitBasicInfo';\n\nimport {\n  useFormChangeSkillBadge,\n  useRankUpSkillBadge,\n  useSkillCost,\n  useSkillLvState,\n  useSkillName,\n  useSkillRange\n} from '../../state/skill/UnitSkillHook';\nimport { useSelectedUnit } from '../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable, ifTruthy } from '../../util/react';\n\nimport './RankUpSkillBadge.css';\n\nconst skillLabelFontStyle: CSSPropertiesWithMultiValues = {\n  fontSize: '1.2em',\n  color: '#ccc'\n};\nconst skillValueFontSizeStyle: CSSPropertiesWithMultiValues = {\n  fontSize: '1.2em',\n  fontWeight: 'bold'\n};\nconst skillLabelStyle: CSSPropertiesWithMultiValues = {\n  ...skillLabelFontStyle,\n  display: 'inline-block',\n  width: '4em'\n};\nconst skillBadgeStyle = {\n  ...{\n    fontSize: '1.2em',\n  } as const satisfies CSSPropertiesWithMultiValues,\n  '& > .badge': {\n    whiteSpace: 'normal'\n  } as const satisfies CSSPropertiesWithMultiValues\n};\n\nconst NestedContainer: React.FC<{ css?: Interpolation<Theme>, children: ReactNode }> = ({ children, ...rest }) => (\n  <Container\n    {...rest}\n    fluid\n    css={{ padding: 0 }}\n  >\n    {children}\n  </Container>\n);\n\nconst SkillNameView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const name = useSkillName(skillType, unit);\n\n  return (\n    <div\n      css={{\n        textOverflow: 'ellipsis',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap'\n      }}\n      title={name}\n    >\n      {name}\n    </div>\n  );\n};\n\nconst SkillCostView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const cost = useSkillCost(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#0af' }}>{cost}</span>);\n};\n\nconst SkillRangeView: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const range = useSkillRange(skillType, unit);\n\n  return (<span css={{ ...skillValueFontSizeStyle, color: '#cc0' }}>{range}</span>);\n};\n\nconst RankUpSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const isRankUpSkill = useRankUpSkillBadge(skillType, unit);\n\n  return (\n    ifTruthy(\n      isRankUpSkill,\n      (<div css={skillBadgeStyle}><Badge variant=\"rank-up-skill\">{t('skill.rank_up')}</Badge></div>)\n    )\n  );\n};\n\nconst FormChangeSkillBadge: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const form = useFormChangeSkillBadge(skillType, unit);\n\n  return (\n    ifNonNullable(\n      form,\n      v => (<div css={skillBadgeStyle}><Badge variant=\"secondary\">{t(`effect:form.${v}`)}</Badge></div>)\n    )\n  );\n};\n\nconst skillLvItems = [10, 9, 8, 7, 6, 5, 4, 3, 2, 1] as const satisfies ReadonlyArray<SkillLv>;\n\nconst SkillLvDropdown: React.FC<{ skillType: SkillType, unit: UnitBasicInfo }> = ({ skillType, unit }) => {\n  const { t } = useTranslation();\n  const [skillLv, setSkillLv] = useSkillLvState(skillType, unit);\n\n  return (\n    <div css={{\n      display: 'flex',\n      userSelect: 'none',\n      '& > .dropdown.numeric': {\n        flexShrink: 0,\n        width: 70\n      }\n    }}>\n      <span css={{ marginRight: 5 }}>{t('lv')}</span>\n      <NumberValueDropdown\n        id=\"skill-lv-dropdown\"\n        items={skillLvItems}\n        value={skillLv}\n        onChange={setSkillLv}\n      />\n    </div>\n  );\n};\n\nconst SkillPane: React.FC<{ eventKey: SkillType }> = ({ eventKey }) => {\n  const { t } = useTranslation();\n  const selectedUnit = useSelectedUnit();\n\n  return (\n    <Tab.Pane eventKey={eventKey}>\n      {ifNonNullable(\n        selectedUnit,\n        unit => (\n          <Container\n            fluid\n            css={{ paddingTop: 5 }}\n          >\n            <Row css={{ fontSize: '1.4em', color: '#eee' }}>\n              <Col xs={8} sm={9}>\n                <SkillNameView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={4} sm={3}>\n                <SkillLvDropdown skillType={eventKey} unit={unit} />\n              </Col>\n            </Row>\n            <Row>\n              <Col xs={{ order: 'last', span: 12 }} sm={{ order: 'first', span: 9 }}>\n                <DamageDealView skillType={eventKey} unit={unit} />\n                <EffectsAsEquipmentDescriptionView skillType={eventKey} unit={unit} />\n                <SkillEffectsView skillType={eventKey} unit={unit} />\n              </Col>\n              <Col xs={{ order: 'first', span: 12 }} sm={{ order: 'last', span: 3 }}>\n                <NestedContainer css={{ userSelect: 'none' }}>\n                  <Row>\n                    <Col xs={8} sm={12}>\n                      <NestedContainer>\n                        <Row css={{ '& > div': { marginTop: 5 } }}>\n                          <Col xs={{ order: 1, span: 12 }} sm={{ order: 2, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.ap')}</span>\n                            <SkillCostView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 2, span: 12 }} sm={{ order: 3, span: 12 }}>\n                            <span css={skillLabelStyle}>{t('skill.range')}</span>\n                            <SkillRangeView skillType={eventKey} unit={unit} />\n                          </Col>\n                          <Col xs={{ order: 3, span: 12 }} sm={{ order: 1, span: 12 }}>\n                            <FormChangeSkillBadge skillType={eventKey} unit={unit} />\n                            <RankUpSkillBadge skillType={eventKey} unit={unit} />\n                          </Col>\n                        </Row>\n                      </NestedContainer>\n                    </Col>\n                    <Col xs={4} sm={12} css={{ '& > div': { marginTop: 5 } }}>\n                      <div>\n                        <span css={{ color: '#ccc' }}>{t('skill.area')}</span>\n                      </div>\n                      <AreaOfEffectGrid css={{ width: 100 }} skillType={eventKey} unit={unit} />\n                    </Col>\n                  </Row>\n                </NestedContainer>\n              </Col>\n            </Row>\n          </Container>\n        )\n      )}\n    </Tab.Pane>\n  );\n};\n\nexport default SkillPane;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { ArrowSync } from '../icon/FluentIcons';\nimport { OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport SVGButton from '../common/SVGButton';\n\nimport { useUnitForm } from '../../state/skill/UnitSkillHook';\n\nimport { ifNonNullable } from '../../util/react';\n\nconst UnitFormSelector: React.FC = () => {\n  const { t } = useTranslation();\n  const [formChangeUnit, changeForm] = useUnitForm();\n\n  return ifNonNullable(\n    formChangeUnit,\n    unit => (\n      <div css={{ display: 'flex', alignItems: 'center', padding: '10px 8px' }}>\n        <OverlayTrigger\n          placement='top'\n          overlay={<Tooltip id='tooltip-form-change'>{t('form_change')}</Tooltip>}\n        >\n          <SVGButton\n            aria-label=\"Change unit form\"\n            variant=\"secondary\"\n            svg={<ArrowSync />}\n            onClick={changeForm}\n          />\n        </OverlayTrigger>\n        <span css={{ color: '#eee', marginLeft: 10 }}>\n          {t(`effect:form.${unit.unitForm()}`)}\n        </span>\n      </div>\n    )\n  );\n};\n\nexport default UnitFormSelector;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { Theme, jsx } from '@emotion/react';\nimport { Interpolation } from '@emotion/serialize';\nimport React, { ReactNode } from 'react';\n\nimport {\n  ActiveSkillIcon,\n  DisableActiveSkillIcon,\n  DisablePassiveSkillIcon,\n  PassiveSkillIcon\n} from '../icon/SkillIcons';\nimport { Nav, Tab } from 'react-bootstrap';\nimport SkillPane from './SkillPane';\nimport UnitFormSelector from './UnitFormSelector';\n\nimport { SkillType } from '../../domain/skill/SkillType';\n\nimport {\n  useActive1SkillNav,\n  useActive2SkillNav,\n  usePassive1SkillNav,\n  usePassive2SkillNav,\n  usePassive3SkillNav\n} from '../../state/skill/UnitSkillHook';\nimport { useSkillTab } from '../../state/ui/UnitSkillTabState';\n\nimport './SkillNavTab.css';\n\nconst SkillNavItem: React.FC<{\n  eventKey: SkillType,\n  active: boolean,\n  disabled: boolean,\n  children: ReactNode\n}> = ({ eventKey, active, disabled, children }) => {\n  const className = eventKey.startsWith('active') ? 'active-skill' : 'passive-skill';\n\n  return (\n    <Nav.Item>\n      <Nav.Link className={className} eventKey={eventKey} active={active} disabled={disabled}>\n        <span\n          css={{\n            display: 'inline-block',\n            '@media (max-width: 480px)': { width: 32 },\n            '@media (min-width: 480px)': { width: 50 }\n          }}\n        >\n          {children}\n        </span>\n      </Nav.Link>\n    </Nav.Item>\n  );\n};\n\nconst Active1SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = useActive1SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<ActiveSkillIcon skillType={SkillType.Active1} />) : (<DisableActiveSkillIcon />)}\n      <span className=\"sr-only\">Active skill 1</span>\n    </SkillNavItem>\n  );\n};\n\nconst Active2SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = useActive2SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<ActiveSkillIcon skillType={SkillType.Active2} />) : (<DisableActiveSkillIcon />)}\n      <span className=\"sr-only\">Active skill 2</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive1SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive1SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive1} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 1</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive2SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive2SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive2} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 2</span>\n    </SkillNavItem>\n  );\n};\n\nconst Passive3SkillNavItem: React.FC = () => {\n  const [eventKey, active, enable] = usePassive3SkillNav();\n\n  return (\n    <SkillNavItem eventKey={eventKey} active={active} disabled={!enable}>\n      {enable ? (<PassiveSkillIcon skillType={SkillType.Passive3} />) : (<DisablePassiveSkillIcon />)}\n      <span className=\"sr-only\">Passive skill 3</span>\n    </SkillNavItem>\n  );\n};\n\nconst UnitSkillList: React.FC<{ css?: Interpolation<Theme> }> = (props) => {\n  const [activeTab, setActiveTab] = useSkillTab();\n\n  return (\n    <div {...props}>\n      <UnitFormSelector />\n      <Tab.Container\n        id=\"unit-skill-viewer\"\n        activeKey={activeTab}\n        onSelect={eventKey => { setActiveTab(eventKey ?? undefined); }}\n      >\n        <Nav variant=\"tabs\" className={`skill ${activeTab ? activeTab.startsWith('active') ? 'active-skill' : 'passive-skill' : ''}`}>\n          <Active1SkillNavItem />\n          <Active2SkillNavItem />\n          <Passive1SkillNavItem />\n          <Passive2SkillNavItem />\n          <Passive3SkillNavItem />\n        </Nav>\n        <Tab.Content css={{ minHeight: 300 }}>\n          <SkillPane eventKey=\"active1\" />\n          <SkillPane eventKey=\"active2\" />\n          <SkillPane eventKey=\"passive1\" />\n          <SkillPane eventKey=\"passive2\" />\n          <SkillPane eventKey=\"passive3\" />\n        </Tab.Content>\n      </Tab.Container>\n    </div>\n  );\n};\n\nexport default UnitSkillList;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"className\", \"as\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;"],"names":["cellColorStyle","AreaOfEffectCellType","Effective","High","Middle","Low","Weak","None","overlayStyle","type","borderRadius","position","top","bottom","left","right","opacity","backgroundColor","AreaOfEffectCell","_ref","selected","rest","t","useTranslation","jsx","css","border","width","content","display","marginTop","inset","OverlayTrigger","_extends","placement","overlay","Tooltip","id","concat","_ref2","skillType","unit","cellType","useSkillArea","ifNonNullable","cell","borderCollapse","transform","select","area","color","_excluded","Container","React","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","_objectWithoutPropertiesLoose","prefix","useBootstrapPrefix","suffix","classNames","displayName","defaultProps","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","classes","forEach","brkPoint","cols","propValue","infix","push","AttributeColorStyle","DamageAttribute","Fire","Ice","Electric","useDamageDeal","damage_deal","SkillAreaType","Single","effective","margin","fontWeight","calcValue","attribute","show","useEffectsAsEquipmentDescription","ifTruthy","fontSize","cursor","textDecoration","unitAlias","exceptUnit","popover","Popover","Content","unitNumbersForAlias","filter","n","map","key","textAlign","number","target","selfUnitNumber","kind","conditions","cond","i","arr","separator","length","value","isUnitAlias","UnitAliasView","SkillEffectTargetKind","AllyExceptSelf","undefined","role","except","JSON","stringify","v","alias","not_alias","_effect","_classPrivateFieldLooseKey","constructor","effect","Object","defineProperty","writable","_classPrivateFieldLooseBase","this","enemyTargetConditions","hasNoTargetCondition","every","state","hasNoTargetEffect","hasTargetSkillEffect","details","isTargetSkillEffectData","Enemy","hasAnyConditions","hasMultipleConditions","_classPrivateFieldLoo","_classPrivateFieldLoo2","scaleFactor","scale_factor","effectTargets","hasSelfEffect","hasSelfSkillEffect","_classPrivateFieldLoo3","needNoDetails","some","assign","self","around","needSeparator","array","index","stateValuesView","entry","unitNumber","EffectActivationState","HpGreaterOrEqual","HpLessOrEqual","HpGreaterThan","HpLessThan","HpRateGreaterOrEqualThanSelf","StatusGreaterThanSelf","StatusLessThanSelf","StatusGreaterOrEqualThan","RankGreaterOrEqual","rank","Affected","isReadonlyArray","NotAffected","effects","e","join","AffectedBy","affectedByStateView","AffectedActiveBy","Tagged","tag1","tag2","tag","NotTagged","TaggedAffected","NotTaggedAffected","Stack","isMultipleTag","options","tags","tagKey","Form","form","Equipped","equipment","NotEquipped","equipments","Grid","grid","Unit","unitStateView","unitName","isDefenderAndArmoredBulgasari","NotInSquad","u","isSquadCond","InSquad","has","isTypeOrRole","tagged","affected_by","SelfAndTargetStateView","SkillEffectTargetView","typedEntries","entries","SquadStateView","isUnitsInSquadCondition","s","in_squad","not_in_squad","NumOfUnitsLessThanEnemies","Separator","NumOfUnits","squadState","CrossAdjacent","numOfCrossAdjacent","arg","isNumOfDefenderAndArmoredBulgasari","numOfDefenderAndArmoredBulgasari","EnemyStateView","num_of_units","TriggerView","_ref3","condition","trigger","EffectTrigger","StartRound","round","at","from","until","UseActive1","UseActive2","HitActive1","HitActive2","SeizeOpportunity","UnitAlias","NotApplicableForSeizeOpportunity","ApplicableForSeizeOpportunity","ConditionStateView","_ref4","NotTargetStateView","_ref5","ConditionRow","EnemyCondition","_ref6","EffectiveView","_ref7","EffectScaleFactorView","_ref8","per_stack","per_units","exceptSelf","variation","EffectTargetsView","_ref9","targets","_ref10","model","SkillEffectConditionViewModel","OrConjunction","Conditions","isTargetSkillEffect","enemyTarget","conds","_ref11","children","getDetail","body","rate","calcMilliPercentageValue","additions","times","count","max_stack","cannot_be_dispelled","notFalsy","getTerm","term","for_rounds","getTag","translateMilliPercentageDetail","detail","translateTagStackDetail","translateEffectNames","EffectDetailRow","padding","marginLeft","flexShrink","EffectDetail","Effect","ActionCountUp","ActionCountDown","MinimizeDamage","NullifyDamage","AllBuffBlocking","AllBuffRemoval","AllDebuffRemoval","ColumnProtect","RowProtect","TargetProtect","ReAttack","FollowUpAttack","IgnoreBarrierDr","IgnoreProtect","IgnoreProtectDeactivate","Reconnaissance","Marked","Provoked","Immovable","Silenced","Stunned","RefundAp","AttackHit","AttackCritical","IgnoreDef","AMG11Construction","DeployRabbitDField","SummonHologramTiger","GoldenFactoryConstruction","CooperativeAttack","active","isFormChangeUnitNumber","no","UnitForms","default","Push","Pull","RangeUp","RangeDown","RangeUpActive2","FixedDamageOverTime","FixedFireDamageOverTime","FixedIceDamageOverTime","FixedElectricDamageOverTime","MinimizeDamageLessThanValue","Barrier","BattleContinuation","AtkValueUp","DefValueUp","calcMilliValue","ApUp","ApDown","SetAp","calcMicroValue","BuffRemoval","DebuffRemoval","EffectRemoval","PreventsEffect","ActivationRatePercentageUp","AbsolutelyActivated","FormChange","FormRelease","TagStack","TagRelease","TagUnstack","DamageMultiplierUpByStatus","DamageMultiplierReductionByStatus","CriReductionByStatus","status","AtkValueUpByUnitValue","DamageMultiplierDown","DefDown","AccDown","CriDown","EvaUp","StatusResistUp","DamageReductionUp","translateSkillEffectDetails","targetKey","Badge","variant","SkillEffectView","SkillEffectConditionView","SkillEffectDetailsView","values","useSkillEffects","skillValueFontSizeStyle","skillLabelStyle","skillBadgeStyle","whiteSpace","NestedContainer","SkillNameView","name","useSkillName","textOverflow","overflow","title","SkillCostView","cost","useSkillCost","SkillRangeView","range","useSkillRange","RankUpSkillBadge","isRankUpSkill","useRankUpSkillBadge","FormChangeSkillBadge","useFormChangeSkillBadge","skillLvItems","SkillLvDropdown","skillLv","setSkillLv","useSkillLvState","userSelect","marginRight","NumberValueDropdown","items","onChange","eventKey","selectedUnit","useSelectedUnit","Tab","Pane","paddingTop","Col","xs","sm","order","span","DamageDealView","EffectsAsEquipmentDescriptionView","SkillEffectsView","AreaOfEffectGrid","UnitFormSelector","formChangeUnit","changeForm","useUnitForm","alignItems","SVGButton","svg","ArrowSync","onClick","unitForm","SkillNavItem","disabled","startsWith","Nav","Item","Link","Active1SkillNavItem","enable","useActive1SkillNav","ActiveSkillIcon","SkillType","Active1","DisableActiveSkillIcon","Active2SkillNavItem","useActive2SkillNav","Active2","Passive1SkillNavItem","usePassive1SkillNav","PassiveSkillIcon","Passive1","DisablePassiveSkillIcon","Passive2SkillNavItem","usePassive2SkillNav","Passive2","Passive3SkillNavItem","usePassive3SkillNav","Passive3","activeTab","setActiveTab","useSkillTab","activeKey","onSelect","minHeight","SkillPane","spans","offset","_propValue$span"],"sourceRoot":""}