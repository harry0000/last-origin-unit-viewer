{"version":3,"file":"static/js/425.9d4531ac.chunk.js","mappings":"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","sources":["component/status/SlotUnavailableOverlay.tsx","component/status/corelink/CoreLinkPlaceholder.tsx","component/status/corelink/CoreLinkUnitView.tsx","component/status/corelink/CoreLinkSelector.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport SVGIcon from '../icon/SVGIcon';\nimport { LockClosed } from '../icon/FluentIcons';\n\nimport { CoreLinkSlotAvailableLv } from '../../domain/UnitCoreLink';\nimport { EquipmentSlotAvailableLv } from '../../domain/equipment/UnitEquipment';\n\nimport { ifTruthy } from '../../util/react';\n\nconst SlotUnavailableOverlay: React.FC<{\n  show: boolean,\n  availableLv: CoreLinkSlotAvailableLv | EquipmentSlotAvailableLv\n}> = React.memo(({ show, availableLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    ifTruthy(\n      show,\n      (<span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.75)'\n        }}>\n        <SVGIcon css={{ height: 24, width: 24 }}>\n          <LockClosed/>\n        </SVGIcon>\n        <span css={{ color: '#ccc', fontWeight: 'bold' }}>\n          {t('lv')}&nbsp;{availableLv}\n        </span>\n      </span>)\n    )\n  );\n});\n\nexport default SlotUnavailableOverlay;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\nimport { CoreLinkSlot } from '../../../state/corelink/UnitCoreLinkState';\n\nconst CoreLinkPlaceholder: React.FC<{ slot: CoreLinkSlot }> = React.memo(({ slot }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span\n      css={{\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        opacity: 0.5\n      }}\n    >\n      <Image\n        rounded\n        draggable=\"false\"\n        height={32}\n        width={32}\n        alt={t(`status.core_link_${slot}`)}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`}\n      />\n    </span>\n  );\n});\n\nexport default CoreLinkPlaceholder;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\nimport UnitRankIcon from '../../common/UnitRankIcon';\n\nimport { CoreLinkUnit } from '../../../domain/UnitCoreLink';\nimport { UnitNumber, UnitRank, UnitRole, UnitType } from '../../../domain/UnitBasicInfo';\n\nconst FitUnitView: React.FC<{ unit: UnitNumber }> = ({ unit }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ display: 'inline-block', height: '100%', width: '100%' }}>\n      <Image\n        fluid\n        rounded\n        draggable=\"false\"\n        sizes=\"(max-width: 480px) 47px, (min-width: 480px) 62px\"\n        alt={t(`unit:name.${unit}`)}\n        src={`${process.env.PUBLIC_URL}/unit_icon/${unit}.webp`}\n      />\n    </span>\n  );\n};\n\nconst PartialFitUnitView: React.FC<{\n  rank: UnitRank,\n  type: UnitType,\n  role: UnitRole,\n  rate: number\n}> = ({ rank, type, role, rate }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ display: 'inline-block', height: '100%', width: '100%' }}>\n      <span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingTop: 10,\n          '@media (max-width: 480px)': { height: 47, width: 47 },\n          '@media (min-width: 480px)': { height: 62, width: 62 }\n        }}\n      >\n        <UnitRankIcon\n          sizes=\"(max-width: 480px) 24px, (min-width: 480px) 30px\"\n          rank={rank}\n          role={role}\n        />\n        <span\n          css={{\n            color: '#ccc',\n            fontWeight: 'bold',\n            '@media (max-width: 480px)': { fontSize: '0.7em' },\n            '@media (min-width: 480px)': { fontSize: '0.9em' }\n          }}\n        >\n          {t(`unit.type.${type}`)}\n        </span>\n      </span>\n      <span\n        css={{\n          position: 'absolute',\n          top: -5,\n          right: 0,\n          color: '#0cf',\n          fontWeight: 'bold',\n          textShadow: [\n            '1px 1px 0px #000, -1px -1px 0px #000',\n            '-1px 1px 0px #000,  1px -1px 0px #000',\n            '1px 0px 0px #000, -1px  0px 0px #000',\n            '0px 1px 0px #000,  0px -1px 0px #000'\n          ].join(),\n          '@media (max-width: 480px)': { fontSize: '0.7em' },\n          '@media (min-width: 480px)': { fontSize: '0.9em' }\n        }}\n      >\n        +{rate}%\n      </span>\n    </span>\n  );\n};\n\nconst CoreLinkUnitView: React.FC<{ linkedUnit: CoreLinkUnit }> = ({ linkedUnit }) => {\n  return 'unit' in linkedUnit ?\n    (<FitUnitView unit={linkedUnit.unit} />) :\n    (<PartialFitUnitView rank={linkedUnit.rank} type={linkedUnit.type} role={linkedUnit.role} rate={linkedUnit.rate} />);\n};\n\nexport default CoreLinkUnitView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Dropdown, Image } from 'react-bootstrap';\nimport CoreLinkPlaceholder from './CoreLinkPlaceholder';\nimport SlotUnavailableOverlay from '../SlotUnavailableOverlay';\n\nimport CoreLinkUnitView from './CoreLinkUnitView';\nimport { CoreLinkUnit } from '../../../domain/UnitCoreLink';\nimport { UnitBasicInfo } from '../../../domain/UnitBasicInfo';\n\nimport { CoreLinkSlot } from '../../../state/corelink/UnitCoreLinkState';\nimport { useAvailableCoreLinkUnit, useUnitCoreLink } from '../../../state/corelink/UnitCoreLinkHook';\nimport { useSelectedUnit } from '../../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable } from '../../../util/react';\n\nimport './CoreLinkSelector.css';\n\nconst CoreLinkUnitItem: React.FC<{\n  eventKey?: string,\n  active: boolean,\n  unit: CoreLinkUnit\n}> = ({ eventKey, active, unit, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Dropdown.Item\n      {...rest}\n      className=\"core-link\"\n      eventKey={eventKey}\n      active={active}\n    >\n      {'unit' in unit ?\n        (<Image\n          className=\"unit\"\n          draggable=\"false\"\n          height={48}\n          width={48}\n          alt={t(`unit:name.${unit.unit}`)}\n          src={`${process.env.PUBLIC_URL}/unit_icon/${unit.unit}.webp`}\n        />) :\n        (<span className=\"partial-fit-unit\">\n          <Image\n            className=\"basic-info-icon\"\n            draggable=\"false\"\n            height={32}\n            width={32}\n            alt={`${t(`unit.rank.${unit.rank}`)} ${t(`unit.type.${unit.type}`)} ${t(`unit.role.${unit.role}`)}`}\n            src={`${process.env.PUBLIC_URL}/icon/${unit.rank}_${unit.role}.webp`}\n          />\n          <span className=\"unit-type\">\n            {t(`unit.type.${unit.type}`)}\n          </span>\n        </span>)}\n      <span className=\"label\">+&nbsp;{unit.rate}&nbsp;%</span>\n    </Dropdown.Item>\n  );\n};\n\nconst UnlinkItem: React.FC<{ active: boolean }> = ({  active }) => {\n  const { t } = useTranslation();\n  const label = t('status.unlink');\n\n  return (\n    <Dropdown.Item\n      className=\"core-link\"\n      active={active}\n    >\n      <Image\n        className=\"unit\"\n        draggable=\"false\"\n        height={48}\n        width={48}\n        alt={label}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`}\n      />\n      <span className=\"label\">{label}</span>\n    </Dropdown.Item>\n  );\n};\n\nconst CoreLinkSelectorMenu: React.FC<{\n  value: CoreLinkUnit | undefined,\n  items: ReadonlyArray<CoreLinkUnit>\n}> = ({ value, items }) => {\n\n\n  return (\n    <Dropdown.Menu className=\"core-link\">\n      <div className=\"core-link-unit-list\">\n        <UnlinkItem active={!value} />\n        {items.map((item, index) => (\n          <CoreLinkUnitItem\n            key={JSON.stringify(item)}\n            eventKey={index + ''}\n            active={item.rate === value?.rate}\n            unit={item}\n          />\n        ))}\n      </div>\n    </Dropdown.Menu>\n  );\n};\n\nconst CoreLinkToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    id: string,\n    children: ReactNode\n  }\n>(({ onClick, id, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\nconst CoreLinkDropdown: React.FC<{ unit: UnitBasicInfo, slot: CoreLinkSlot }> = ({ unit, slot }) => {\n  const items = useAvailableCoreLinkUnit(unit);\n  const [linkedUnit, linkSlot, available, availableLv] = useUnitCoreLink(unit, slot);\n\n  return (\n    <Dropdown\n      className=\"slot core-link\"\n      onSelect={(eventKey) => {\n        linkSlot(eventKey ? items[+eventKey] : undefined);\n      }}\n    >\n      <Dropdown.Toggle as={CoreLinkToggle} id={`core-link-${slot}-dropdown`}>\n        <span className=\"core-link-toggle-view\">\n          {linkedUnit ?\n            (<CoreLinkUnitView linkedUnit={linkedUnit} />) :\n            (<CoreLinkPlaceholder slot={slot} />)\n          }\n          <SlotUnavailableOverlay show={!available} availableLv={availableLv}/>\n        </span>\n      </Dropdown.Toggle>\n      <CoreLinkSelectorMenu value={linkedUnit} items={items} />\n    </Dropdown>\n  );\n};\n\nconst CoreLinkSelector: React.FC<{ slot: CoreLinkSlot }> = ({ slot }) => {\n  const selected = useSelectedUnit();\n\n  return ifNonNullable(\n    selected,\n    unit => (<CoreLinkDropdown unit={unit} slot={slot} />)\n  );\n};\n\nexport default CoreLinkSelector;\n"],"names":["SlotUnavailableOverlay","React","show","availableLv","t","useTranslation","ifTruthy","css","display","flexDirection","alignItems","justifyContent","position","inset","backgroundColor","height","width","color","fontWeight","slot","opacity","Image","rounded","draggable","alt","src","process","FitUnitView","unit","fluid","sizes","PartialFitUnitView","rank","type","role","rate","paddingTop","UnitRankIcon","fontSize","top","right","textShadow","join","linkedUnit","CoreLinkUnitItem","eventKey","active","rest","Dropdown","className","UnlinkItem","label","CoreLinkSelectorMenu","value","items","map","item","index","key","JSON","stringify","CoreLinkToggle","ref","onClick","id","children","href","e","preventDefault","CoreLinkDropdown","useAvailableCoreLinkUnit","useUnitCoreLink","linkSlot","available","onSelect","undefined","as","selected","useSelectedUnit","ifNonNullable"],"sourceRoot":""}