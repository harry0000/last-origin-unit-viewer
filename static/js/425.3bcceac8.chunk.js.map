{"version":3,"file":"static/js/425.3bcceac8.chunk.js","mappings":"kNAcA,MA8BA,EA3BKA,EAAAA,MAAWC,IAA4B,IAA3B,KAAEC,EAAI,YAAEC,GAAaF,EACpC,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAEd,OACEC,EAAAA,EAAAA,GACEJ,GACCK,EAAAA,EAAAA,IAAA,QACCC,IAAK,CACHC,QAAS,cACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChBC,SAAU,WACVC,MAAO,EACPC,gBAAiB,yBAEnBR,EAAAA,EAAAA,IAACS,EAAAA,EAAO,CAACR,IAAK,CAAES,OAAQ,GAAIC,MAAO,MACjCX,EAAAA,EAAAA,IAACY,EAAAA,GAAU,QAEbZ,EAAAA,EAAAA,IAAA,QAAMC,IAAK,CAAEY,MAAO,OAAQC,WAAY,SACrCjB,EAAE,MAAM,OAAOD,IAGrB,G,+GC/BL,MA0BA,EA1B8DH,EAAAA,MAAWC,IAAe,IAAd,KAAEqB,GAAMrB,EAChF,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAEd,OACEE,EAAAA,EAAAA,IAAA,QACEC,IAAK,CACHC,QAAS,cACTG,eAAgB,SAChBD,WAAY,SACZM,OAAQ,OACRC,MAAO,OACPK,QAAS,MAGXhB,EAAAA,EAAAA,IAACiB,EAAAA,EAAK,CACJC,SAAO,EACPC,UAAU,QACVT,OAAQ,GACRC,MAAO,GACPS,IAAKvB,EAAE,oBAADwB,OAAqBN,IAC3BO,IAAG,GAAAD,OAAKE,2BAAsB,sCAE3B,I,wBCnBX,MAAMC,EAA8C9B,IAAe,IAAd,KAAE+B,GAAM/B,EAC3D,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAEd,OACEE,EAAAA,EAAAA,IAAA,QAAMC,IAAK,CAAEC,QAAS,eAAgBQ,OAAQ,OAAQC,MAAO,UAC3DX,EAAAA,EAAAA,IAACiB,EAAAA,EAAK,CACJS,OAAK,EACLR,SAAO,EACPC,UAAU,QACVQ,MAAM,mDACNP,IAAKvB,EAAE,aAADwB,OAAcI,IACpBH,IAAG,GAAAD,OAAKE,2BAAsB,eAAAF,OAAcI,EAAI,WAE7C,EAILG,EAKDC,IAAiC,IAAhC,KAAEC,EAAI,KAAEC,EAAI,KAAEC,EAAI,KAAEC,GAAMJ,EAC9B,MAAM,EAAEhC,IAAMC,EAAAA,EAAAA,MAEd,OACEE,EAAAA,EAAAA,IAAA,QAAMC,IAAK,CAAEC,QAAS,eAAgBQ,OAAQ,OAAQC,MAAO,UAC3DX,EAAAA,EAAAA,IAAA,QACEC,IAAK,CACHC,QAAS,cACTC,cAAe,SACfC,WAAY,SACZC,eAAgB,SAChB6B,WAAY,GACZ,4BAA6B,CAAExB,OAAQ,GAAIC,MAAO,IAClD,4BAA6B,CAAED,OAAQ,GAAIC,MAAO,OAGpDX,EAAAA,EAAAA,IAACmC,EAAAA,EAAY,CACXR,MAAM,mDACNG,KAAMA,EACNE,KAAMA,KAERhC,EAAAA,EAAAA,IAAA,QACEC,IAAK,CACHY,MAAO,OACPC,WAAY,OACZ,4BAA6B,CAAEsB,SAAU,SACzC,4BAA6B,CAAEA,SAAU,WAG1CvC,EAAE,aAADwB,OAAcU,OAGpB/B,EAAAA,EAAAA,IAAA,QACEC,IAAK,CACHK,SAAU,WACV+B,KAAM,EACNC,MAAO,EACPzB,MAAO,OACPC,WAAY,OACZyB,WAAY,CACV,uCACA,wCACA,uCACA,wCACAC,OACF,4BAA6B,CAAEJ,SAAU,SACzC,4BAA6B,CAAEA,SAAU,WAE5C,IACGH,EAAK,KAEJ,EAUX,EANiEQ,IAAqB,IAApB,WAAEC,GAAYD,EAC9E,MAAO,SAAUC,GACd1C,EAAAA,EAAAA,IAACwB,EAAW,CAACC,KAAMiB,EAAWjB,QAC9BzB,EAAAA,EAAAA,IAAC4B,EAAkB,CAACE,KAAMY,EAAWZ,KAAMC,KAAMW,EAAWX,KAAMC,KAAMU,EAAWV,KAAMC,KAAMS,EAAWT,MAAS,E,kCCtExH,MAAMU,EAIDjD,IAA0C,IAAzC,SAAEkD,EAAQ,OAAEC,EAAM,KAAEpB,KAASqB,GAAMpD,EACvC,MAAM,EAAEG,IAAMC,EAAAA,EAAAA,MAEd,OACEE,EAAAA,EAAAA,IAAC+C,EAAAA,EAASC,MAAIC,EAAAA,EAAAA,GAAA,GACRH,EAAI,CACRI,UAAU,YACVN,SAAUA,EACVC,OAAQA,IAEP,SAAUpB,GACRzB,EAAAA,EAAAA,IAACiB,EAAAA,EAAK,CACLiC,UAAU,OACV/B,UAAU,QACVT,OAAQ,GACRC,MAAO,GACPS,IAAKvB,EAAE,aAADwB,OAAcI,EAAKA,OACzBH,IAAG,GAAAD,OAAKE,2BAAsB,eAAAF,OAAcI,EAAKA,KAAI,YAEtDzB,EAAAA,EAAAA,IAAA,QAAMkD,UAAU,qBACflD,EAAAA,EAAAA,IAACiB,EAAAA,EAAK,CACJiC,UAAU,kBACV/B,UAAU,QACVT,OAAQ,GACRC,MAAO,GACPS,IAAG,GAAAC,OAAKxB,EAAE,aAADwB,OAAcI,EAAKK,OAAO,KAAAT,OAAIxB,EAAE,aAADwB,OAAcI,EAAKM,OAAO,KAAAV,OAAIxB,EAAE,aAADwB,OAAcI,EAAKO,QAC1FV,IAAG,GAAAD,OAAKE,2BAAsB,UAAAF,OAASI,EAAKK,KAAI,KAAAT,OAAII,EAAKO,KAAI,YAE/DhC,EAAAA,EAAAA,IAAA,QAAMkD,UAAU,aACbrD,EAAE,aAADwB,OAAcI,EAAKM,UAG3B/B,EAAAA,EAAAA,IAAA,QAAMkD,UAAU,SAAQ,QAAQzB,EAAKQ,KAAK,SAC5B,EAIdkB,EAA4CtB,IAAkB,IAAjB,OAAGgB,GAAQhB,EAC5D,MAAM,EAAEhC,IAAMC,EAAAA,EAAAA,MACRsD,EAAQvD,EAAE,iBAEhB,OACEG,EAAAA,EAAAA,IAAC+C,EAAAA,EAASC,KAAI,CACZE,UAAU,YACVL,OAAQA,IAER7C,EAAAA,EAAAA,IAACiB,EAAAA,EAAK,CACJiC,UAAU,OACV/B,UAAU,QACVT,OAAQ,GACRC,MAAO,GACPS,IAAKgC,EACL9B,IAAG,GAAAD,OAAKE,2BAAsB,uCAEhCvB,EAAAA,EAAAA,IAAA,QAAMkD,UAAU,SAASE,GACX,EAIdC,EAGDZ,IAAuB,IAAtB,MAAEa,EAAK,MAAEC,GAAOd,EAGpB,OACEzC,EAAAA,EAAAA,IAAC+C,EAAAA,EAASS,KAAI,CAACN,UAAU,cACvBlD,EAAAA,EAAAA,IAAA,OAAKkD,UAAU,wBACblD,EAAAA,EAAAA,IAACmD,EAAU,CAACN,QAASS,IACpBC,EAAME,KAAI,CAACC,EAAMC,KAChB3D,EAAAA,EAAAA,IAAC2C,EAAgB,CACfiB,IAAKC,KAAKC,UAAUJ,GACpBd,SAAUe,EAAQ,GAClBd,OAAQa,EAAKzB,QAAc,OAALqB,QAAK,IAALA,OAAK,EAALA,EAAOrB,MAC7BR,KAAMiC,OAIE,EAIdK,EAAiBtE,EAAAA,YAOrB,CAAAuE,EAA4BC,KAAG,IAA9B,QAAEC,EAAO,GAAEC,EAAE,SAAEC,GAAUJ,EAAA,OAC1BhE,EAAAA,EAAAA,IAAA,KACEqE,KAAK,GACLJ,IAAKA,EACLE,GAAIA,EACJD,QAAUI,IACRA,EAAEC,iBACFL,EAAQI,EAAE,GAGXF,EACC,IAGAI,EAA0EC,IAAqB,IAApB,KAAEhD,EAAI,KAAEV,GAAM0D,EAC7F,MAAMlB,GAAQmB,EAAAA,EAAAA,IAAyBjD,IAChCiB,EAAYiC,EAAUC,EAAWhF,IAAeiF,EAAAA,EAAAA,IAAgBpD,EAAMV,GAE7E,OACEf,EAAAA,EAAAA,IAAC+C,EAAAA,EAAQ,CACPG,UAAU,iBACV4B,SAAWlC,IACT+B,EAAS/B,EAAWW,GAAOX,QAAYmC,EAAU,IAGnD/E,EAAAA,EAAAA,IAAC+C,EAAAA,EAASiC,OAAM,CAACC,GAAIlB,EAAgBI,GAAE,aAAA9C,OAAeN,EAAI,eACxDf,EAAAA,EAAAA,IAAA,QAAMkD,UAAU,yBACbR,GACE1C,EAAAA,EAAAA,IAACkF,EAAgB,CAACxC,WAAYA,KAC9B1C,EAAAA,EAAAA,IAACmF,EAAmB,CAACpE,KAAMA,KAE9Bf,EAAAA,EAAAA,IAACoF,EAAAA,EAAsB,CAACzF,MAAOiF,EAAWhF,YAAaA,OAG3DI,EAAAA,EAAAA,IAACqD,EAAoB,CAACC,MAAOZ,EAAYa,MAAOA,IACvC,EAaf,EAT2D8B,IAAe,IAAd,KAAEtE,GAAMsE,EAClE,MAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OAAOC,EAAAA,EAAAA,GACLF,GACA7D,IAASzB,EAAAA,EAAAA,IAACwE,EAAgB,CAAC/C,KAAMA,EAAMV,KAAMA,KAC9C,C","sources":["component/status/SlotUnavailableOverlay.tsx","component/status/corelink/CoreLinkPlaceholder.tsx","component/status/corelink/CoreLinkUnitView.tsx","component/status/corelink/CoreLinkSelector.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport SVGIcon from '../icon/SVGIcon';\nimport { LockClosed } from '../icon/FluentIcons';\n\nimport { CoreLinkSlotAvailableLv } from '../../domain/UnitCoreLink';\nimport { EquipmentSlotAvailableLv } from '../../domain/equipment/UnitEquipment';\n\nimport { ifTruthy } from '../../util/react';\n\nconst SlotUnavailableOverlay: React.FC<{\n  show: boolean,\n  availableLv: CoreLinkSlotAvailableLv | EquipmentSlotAvailableLv\n}> = React.memo(({ show, availableLv }) => {\n  const { t } = useTranslation();\n\n  return (\n    ifTruthy(\n      show,\n      (<span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          position: 'absolute',\n          inset: 0,\n          backgroundColor: 'rgba(0, 0, 0, 0.75)'\n        }}>\n        <SVGIcon css={{ height: 24, width: 24 }}>\n          <LockClosed/>\n        </SVGIcon>\n        <span css={{ color: '#ccc', fontWeight: 'bold' }}>\n          {t('lv')}&nbsp;{availableLv}\n        </span>\n      </span>)\n    )\n  );\n});\n\nexport default SlotUnavailableOverlay;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\nimport { CoreLinkSlot } from '../../../state/corelink/UnitCoreLinkState';\n\nconst CoreLinkPlaceholder: React.FC<{ slot: CoreLinkSlot }> = React.memo(({ slot }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span\n      css={{\n        display: 'inline-flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100%',\n        width: '100%',\n        opacity: 0.5\n      }}\n    >\n      <Image\n        rounded\n        draggable=\"false\"\n        height={32}\n        width={32}\n        alt={t(`status.core_link_${slot}`)}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`}\n      />\n    </span>\n  );\n});\n\nexport default CoreLinkPlaceholder;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Image } from 'react-bootstrap';\nimport UnitRankIcon from '../../common/UnitRankIcon';\n\nimport { CoreLinkUnit } from '../../../domain/UnitCoreLink';\nimport { UnitNumber, UnitRank, UnitRole, UnitType } from '../../../domain/UnitBasicInfo';\n\nconst FitUnitView: React.FC<{ unit: UnitNumber }> = ({ unit }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ display: 'inline-block', height: '100%', width: '100%' }}>\n      <Image\n        fluid\n        rounded\n        draggable=\"false\"\n        sizes=\"(max-width: 480px) 47px, (min-width: 480px) 62px\"\n        alt={t(`unit:name.${unit}`)}\n        src={`${process.env.PUBLIC_URL}/unit_icon/${unit}.webp`}\n      />\n    </span>\n  );\n};\n\nconst PartialFitUnitView: React.FC<{\n  rank: UnitRank,\n  type: UnitType,\n  role: UnitRole,\n  rate: number\n}> = ({ rank, type, role, rate }) => {\n  const { t } = useTranslation();\n\n  return (\n    <span css={{ display: 'inline-block', height: '100%', width: '100%' }}>\n      <span\n        css={{\n          display: 'inline-flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          paddingTop: 10,\n          '@media (max-width: 480px)': { height: 47, width: 47 },\n          '@media (min-width: 480px)': { height: 62, width: 62 }\n        }}\n      >\n        <UnitRankIcon\n          sizes=\"(max-width: 480px) 24px, (min-width: 480px) 30px\"\n          rank={rank}\n          role={role}\n        />\n        <span\n          css={{\n            color: '#ccc',\n            fontWeight: 'bold',\n            '@media (max-width: 480px)': { fontSize: '0.7em' },\n            '@media (min-width: 480px)': { fontSize: '0.9em' }\n          }}\n        >\n          {t(`unit.type.${type}`)}\n        </span>\n      </span>\n      <span\n        css={{\n          position: 'absolute',\n          top: -5,\n          right: 0,\n          color: '#0cf',\n          fontWeight: 'bold',\n          textShadow: [\n            '1px 1px 0px #000, -1px -1px 0px #000',\n            '-1px 1px 0px #000,  1px -1px 0px #000',\n            '1px 0px 0px #000, -1px  0px 0px #000',\n            '0px 1px 0px #000,  0px -1px 0px #000'\n          ].join(),\n          '@media (max-width: 480px)': { fontSize: '0.7em' },\n          '@media (min-width: 480px)': { fontSize: '0.9em' }\n        }}\n      >\n        +{rate}%\n      </span>\n    </span>\n  );\n};\n\nconst CoreLinkUnitView: React.FC<{ linkedUnit: CoreLinkUnit }> = ({ linkedUnit }) => {\n  return 'unit' in linkedUnit ?\n    (<FitUnitView unit={linkedUnit.unit} />) :\n    (<PartialFitUnitView rank={linkedUnit.rank} type={linkedUnit.type} role={linkedUnit.role} rate={linkedUnit.rate} />);\n};\n\nexport default CoreLinkUnitView;\n","/** @jsxRuntime classic */\n/** @jsx jsx */\nimport { jsx } from '@emotion/react';\nimport React, { MouseEventHandler, ReactNode } from 'react';\nimport { useTranslation } from 'react-i18next';\n\nimport { Dropdown, Image } from 'react-bootstrap';\nimport CoreLinkPlaceholder from './CoreLinkPlaceholder';\nimport SlotUnavailableOverlay from '../SlotUnavailableOverlay';\n\nimport CoreLinkUnitView from './CoreLinkUnitView';\nimport { CoreLinkUnit } from '../../../domain/UnitCoreLink';\nimport { UnitBasicInfo } from '../../../domain/UnitBasicInfo';\n\nimport { CoreLinkSlot } from '../../../state/corelink/UnitCoreLinkState';\nimport { useAvailableCoreLinkUnit, useUnitCoreLink } from '../../../state/corelink/UnitCoreLinkHook';\nimport { useSelectedUnit } from '../../../state/selector/UnitSelectorHook';\n\nimport { ifNonNullable } from '../../../util/react';\n\nimport './CoreLinkSelector.css';\n\nconst CoreLinkUnitItem: React.FC<{\n  eventKey?: string,\n  active: boolean,\n  unit: CoreLinkUnit\n}> = ({ eventKey, active, unit, ...rest }) => {\n  const { t } = useTranslation();\n\n  return (\n    <Dropdown.Item\n      {...rest}\n      className=\"core-link\"\n      eventKey={eventKey}\n      active={active}\n    >\n      {'unit' in unit ?\n        (<Image\n          className=\"unit\"\n          draggable=\"false\"\n          height={48}\n          width={48}\n          alt={t(`unit:name.${unit.unit}`)}\n          src={`${process.env.PUBLIC_URL}/unit_icon/${unit.unit}.webp`}\n        />) :\n        (<span className=\"partial-fit-unit\">\n          <Image\n            className=\"basic-info-icon\"\n            draggable=\"false\"\n            height={32}\n            width={32}\n            alt={`${t(`unit.rank.${unit.rank}`)} ${t(`unit.type.${unit.type}`)} ${t(`unit.role.${unit.role}`)}`}\n            src={`${process.env.PUBLIC_URL}/icon/${unit.rank}_${unit.role}.webp`}\n          />\n          <span className=\"unit-type\">\n            {t(`unit.type.${unit.type}`)}\n          </span>\n        </span>)}\n      <span className=\"label\">+&nbsp;{unit.rate}&nbsp;%</span>\n    </Dropdown.Item>\n  );\n};\n\nconst UnlinkItem: React.FC<{ active: boolean }> = ({  active }) => {\n  const { t } = useTranslation();\n  const label = t('status.unlink');\n\n  return (\n    <Dropdown.Item\n      className=\"core-link\"\n      active={active}\n    >\n      <Image\n        className=\"unit\"\n        draggable=\"false\"\n        height={48}\n        width={48}\n        alt={label}\n        src={`${process.env.PUBLIC_URL}/icon/placeholder_core_link.webp`}\n      />\n      <span className=\"label\">{label}</span>\n    </Dropdown.Item>\n  );\n};\n\nconst CoreLinkSelectorMenu: React.FC<{\n  value: CoreLinkUnit | undefined,\n  items: ReadonlyArray<CoreLinkUnit>\n}> = ({ value, items }) => {\n\n\n  return (\n    <Dropdown.Menu className=\"core-link\">\n      <div className=\"core-link-unit-list\">\n        <UnlinkItem active={!value} />\n        {items.map((item, index) => (\n          <CoreLinkUnitItem\n            key={JSON.stringify(item)}\n            eventKey={index + ''}\n            active={item.rate === value?.rate}\n            unit={item}\n          />\n        ))}\n      </div>\n    </Dropdown.Menu>\n  );\n};\n\nconst CoreLinkToggle = React.forwardRef<\n  HTMLAnchorElement,\n  {\n    onClick: MouseEventHandler<HTMLAnchorElement>,\n    id: string,\n    children: ReactNode\n  }\n>(({ onClick, id, children }, ref) => (\n  <a\n    href=\"\"\n    ref={ref}\n    id={id}\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\n\nconst CoreLinkDropdown: React.FC<{ unit: UnitBasicInfo, slot: CoreLinkSlot }> = ({ unit, slot }) => {\n  const items = useAvailableCoreLinkUnit(unit);\n  const [linkedUnit, linkSlot, available, availableLv] = useUnitCoreLink(unit, slot);\n\n  return (\n    <Dropdown\n      className=\"slot core-link\"\n      onSelect={(eventKey) => {\n        linkSlot(eventKey ? items[+eventKey] : undefined);\n      }}\n    >\n      <Dropdown.Toggle as={CoreLinkToggle} id={`core-link-${slot}-dropdown`}>\n        <span className=\"core-link-toggle-view\">\n          {linkedUnit ?\n            (<CoreLinkUnitView linkedUnit={linkedUnit} />) :\n            (<CoreLinkPlaceholder slot={slot} />)\n          }\n          <SlotUnavailableOverlay show={!available} availableLv={availableLv}/>\n        </span>\n      </Dropdown.Toggle>\n      <CoreLinkSelectorMenu value={linkedUnit} items={items} />\n    </Dropdown>\n  );\n};\n\nconst CoreLinkSelector: React.FC<{ slot: CoreLinkSlot }> = ({ slot }) => {\n  const selected = useSelectedUnit();\n\n  return ifNonNullable(\n    selected,\n    unit => (<CoreLinkDropdown unit={unit} slot={slot} />)\n  );\n};\n\nexport default CoreLinkSelector;\n"],"names":["React","_ref","show","availableLv","t","useTranslation","ifTruthy","jsx","css","display","flexDirection","alignItems","justifyContent","position","inset","backgroundColor","SVGIcon","height","width","LockClosed","color","fontWeight","slot","opacity","Image","rounded","draggable","alt","concat","src","process","FitUnitView","unit","fluid","sizes","PartialFitUnitView","_ref2","rank","type","role","rate","paddingTop","UnitRankIcon","fontSize","top","right","textShadow","join","_ref3","linkedUnit","CoreLinkUnitItem","eventKey","active","rest","Dropdown","Item","_extends","className","UnlinkItem","label","CoreLinkSelectorMenu","value","items","Menu","map","item","index","key","JSON","stringify","CoreLinkToggle","_ref4","ref","onClick","id","children","href","e","preventDefault","CoreLinkDropdown","_ref5","useAvailableCoreLinkUnit","linkSlot","available","useUnitCoreLink","onSelect","undefined","Toggle","as","CoreLinkUnitView","CoreLinkPlaceholder","SlotUnavailableOverlay","_ref6","selected","useSelectedUnit","ifNonNullable"],"sourceRoot":""}